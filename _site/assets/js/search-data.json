{"0": {
    "doc": "DDL",
    "title": "DDL(Data Definition Language)",
    "content": "Ver 0.1.1 . 테이블과 컬럼을 정의하는 명령어로 생성,수정,삭제 등의 데이터 전체 골격을 결정하는 역할을 담당한다. DDL은 명령어를 입력하는 순간 작업이 즉시 반영(Auto Commit)되기 때문에 사용할 때 주의해야한다. 일부 DDL문은 수행되는 동안 테이블 레벨 LOCK을 발생시키므로 주의하여 사용해야 한다. 1) Create . 테이블을 생성하는 명령어 . | 객체를 의미하는 것이므로 단수형으로 이름을 짓는걸 권고한다. | 유일한 이름으로 명명해야 한다. | 테이블 내의 컬럼명 또한 중복되지 않는 유일한 이름으로 명명해야 한다. | 정의할 때 각 컬럼은 ,으로 구분하며 테이블 생성문의 마지막은 ;이다. | 컬럼명은 데이터 표준화 관점에서 일관성 있게 사용해야 한다. | 컬럼 뒤에 데이터 유형을 반드시 지정해야 한다. | 테이블과 컬럼명은 반드시 문자로 시작한다. | 대소문자 구분을 하지 않지만, 기본적으로 대문자로 만들어진다. | . 2) ALTER . 테이블의 구조를 수정하는 명령어 . | ADD COLUMN : 컬럼을 추가 | DROP COLUMN : 컬럼을 삭제 | MODIFY COLUMN : 컬럼을 수정 | RENAME COLUMN : 컬럼 이름을 변경 | DROP CONSTRAIN : 컬럼의 제약조건을 기반해서 삭제 | . 3) DROP . 테이블을 삭제하는 명령어 . 4)RENAME . 테이블의 이름을 변경하는 명령어 . 5) TRUNCATE . 테이블을 초기화하는 명령어 . ",
    "url": "/docs/5.Oracle/DDL/0.DDL_info/#ddldata-definition-language",
    
    "relUrl": "/docs/5.Oracle/DDL/0.DDL_info/#ddldata-definition-language"
  },"1": {
    "doc": "DDL",
    "title": "DDL",
    "content": "작성일자 : 2023-07-08 ",
    "url": "/docs/5.Oracle/DDL/0.DDL_info/",
    
    "relUrl": "/docs/5.Oracle/DDL/0.DDL_info/"
  },"2": {
    "doc": "Desktop",
    "title": "Desktop",
    "content": "작성일자 : 2023-09-03 출처 : Tableau Desktop . Tableau Desktop은 데이터 액세스, 시각화, 분석에 필요한 모든 것을 제공합니다. 직관적인 끌어 놓기 방식의 인터페이스로 영향력 있는 비즈니스 의사 결정을 더 빠르게 내리는 데 필요한 숨겨진 인사이트를 오프라인 상태에서도 발견할 수 있습니다. 이 모든 이점을 안전한 셀프 서비스 환경에서 신뢰할 수 있고 관리되는 데이터를 활용하면서 누릴 수 있습니다. 기능 . | 실시간 데이터 탐색 지원 . | 실시간 시각적 분석은 데이터를 무제한으로 탐색하는 동력이 됩니다. 데이터가 온프레미스에 있든 클라우드에 있든 상관없이, 빅 데이터, SQL 데이터베이스, 스프레드시트 또는 Salesforce와 같은 클라우드 앱 등 다양한 위치에 있는 데이터에 연결할 수 있습니다. 코드를 작성하지 않고도 데이터를 결합하고 정리할 수 있습니다. 기존 데이터로 강력한 계산을 신속하게 작성해 보십시오. 새로운 질문을 하고, 추세를 읽어내고, 기회를 발견하여 자신감 있게 데이터 기반의 의사 결정을 내릴 수 있습니다. | . | 더 빠르고 심층적인 인사이트 얻기 . | 모든 기술 수준의 사람들이 분석 흐름에서 바로 더 스마트한 의사 결정을 내리도록 돕는 직관적인 환경을 갖춘 고급 도구입니다. 데이터 분석가는 고급 분석 기능을 통해 포괄적인 분석을 위한 정교한 계산을 생성할 수 있습니다. 비즈니스 사용자는 AI와 ML로 구동되는 증강 분석으로 통계, 자연어 및 스마트한 데이터 준비를 통해 더 빠르게 해답을 얻고 인사이트를 발견할 수 있습니다. | . | 더 스마트한 결정 내리기 . | 예측 모델링을 대중화하기 위해 플랫폼에 투명한 AI를 내장했습니다. 비즈니스 컨텍스트를 아는 사람들이 가정(what-If) 시나리오 계획, 모델 구축 지침, AI 기반 예측, 기타 데이터 과학 기술을 사용해 더 스마트한 의사 결정을 더 빠르게 내릴 수 있습니다. 데이터 과학자는 R, Python, Einstein Discovery, MATLAB 및 기타 확장 프로그램에서 얻은 결과를 통합하고 시각화하여 조직 전체로 모델을 확장할 수 있습니다. | . | 안전한 공유와 협업 . | Tableau Server나 Tableau Cloud에 연결하여 분석과 인사이트를 안전하게 공유할 수 있습니다. Tableau는 관리되고 유연한 환경을 제공하여 팀은 거기서 신뢰할 수 있는 데이터에 대해 작업을 공유하고 공동으로 작업할 수 있습니다. Slack 통합으로 데이터 기반 알림 메시지를 받고 AI 예측에 액세스하며 전체 팀, 여러 부서 간 또는 전체 조직과 함께 분석에 대해 공동으로 작업하여 비즈니스를 발전시키십시오. | . | . ",
    "url": "/docs/4.Tableau/Desktop/0.Desktop_info/",
    
    "relUrl": "/docs/4.Tableau/Desktop/0.Desktop_info/"
  },"3": {
    "doc": "Football Analysis",
    "title": "Football Analysis",
    "content": "TBD . ",
    "url": "/docs/3.Side_Projects/1.Football_Analysis/0.Foobtall_Analysis/",
    
    "relUrl": "/docs/3.Side_Projects/1.Football_Analysis/0.Foobtall_Analysis/"
  },"4": {
    "doc": "Side Projects",
    "title": "Side Projects",
    "content": "Learn More TBD . ",
    "url": "/docs/3.Side_Projects/0.Side_Projects_Info/",
    
    "relUrl": "/docs/3.Side_Projects/0.Side_Projects_Info/"
  },"5": {
    "doc": "Dashboards",
    "title": "대시보드란?",
    "content": "BI(Business Intelligence) 영역에서 대시보드는 데이터를 분석하는 데 사용되는 정보 관리 및 데이터 시각화 솔루션 입니다. 대시보드 개발자는 차트, 그래프, 보고서를 한 화면에 통합하는 데 필터 및 작업 같은 대화형 요소를 사용하여 전체적인 스냅샷을 보여 줄 수 있습니다. ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/00.Dashboards/#%EB%8C%80%EC%8B%9C%EB%B3%B4%EB%93%9C%EB%9E%80",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/00.Dashboards/#대시보드란"
  },"6": {
    "doc": "Dashboards",
    "title": "대시보드의 목적",
    "content": "대시보드는 조직의 비즈니스 인텔리전스 전략에 없어서는 안 될 중요한 요소입니다. 대시보드는 비즈니스 의사 결정을 개선하기 위해, 특정 목적에 맞게 주요 데이터 집합으로부터 데이터를 분석하도록 설계되어야 합니다. 분석가가 스프레드시트를 수동으로 취합하는 대신, 최신 BI 플랫폼에서는 웹 기반 대시보드를 통해 데이터 접근, 분석, 표시 및 공유가 가능합니다. 이해 관계자는 강력하고 자동화된 비즈니스 인텔리전스 도구로 대시보드를 구축하여 검토하고, 결론을 도출하여, 행동으로 연결할 수 있습니다. ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/00.Dashboards/#%EB%8C%80%EC%8B%9C%EB%B3%B4%EB%93%9C%EC%9D%98-%EB%AA%A9%EC%A0%81",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/00.Dashboards/#대시보드의-목적"
  },"7": {
    "doc": "Dashboards",
    "title": "나의 대시보드",
    "content": "프로젝트를 하면서 다양한 그리고 적지 않은 수의 대시보드를 만들어 봤습니다. 그때에 만들어 봤던 대시보드를 샘플 데이터 또는 직접 만들어 본 가데이터로 재구현을 해보았습니다. 재구현을 해보면서 대시보드 개발에 있어서 좀 더 효율적인 방법에 대해 다시 한 번 생각해보게 되었고, 개발 방법을 한번 더 익혀 보는 시간이 되었습니다. 또한 개발 당시에도 고려했었던 대시보드의 성격 및 목적에 대해서도 다시금 생각해보게 되었습니다. 이것들은 앞으로 BI 컨설턴트이자 데이터 분석가로서의 저의 자산들이며 더 성장할 수 있는 밑거름이 될 것이라 확신합니다. ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/00.Dashboards/#%EB%82%98%EC%9D%98-%EB%8C%80%EC%8B%9C%EB%B3%B4%EB%93%9C",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/00.Dashboards/#나의-대시보드"
  },"8": {
    "doc": "Dashboards",
    "title": "내가 생각하는 ‘좋은’ 대시보드",
    "content": "3년차 대시보드 개발자가 된 시점에서 과연 좋은 대시보드란 무엇인가에 대해서 많이 생각해보게 됩니다. 이 글을 읽는 독자가 생각하는 좋은 대시보드란 무엇인가요? . 다양한 기능이 들어간 대시보드인가요? 혹은 예쁜 디자인의 대시보드인가요? 아니면 빠른 성능을 자랑하는 대시보드인가요? . 정답은 없다고 생각합니다. 모두 맞는 말입니다. 다양한 기능, 예쁜 디자인, 빠른 성능도 좋은 대시보드가 되기 위한 요소들입니다. 실제로 프로젝트를 하면서 고객들로 부터 위 요소들을 충족 및 개선해달라는 의견을 많이 받습니다. 저는 데이터 정합성을 충족시킨 대시보드가 좋은 대시보드라고 생각합니다. 앞서 언급한 위 요소들이 아무리 뛰어나더라도 데이터 정합성을 충족시키지 못한다면 결코 좋은 대시보드라고 할수 없을 것입니다. 위 질문은 대시보드의 목적과 관련이 있다고 생각합니다. 기업의 대시보드를 사용하는 목적은 비즈니스 의사결정에 활용함과 기업운영에 있어서 효율성 증진이 주된 목적일 것입니다. 그런 측면에서 데이터 정합성을 충족시키지 못한 대시보드는 잘못된 정보를 제공하고 있다는 의미이며, 본질적인 기능을 못한 대시보드이고, 결국 End user들이 보지 않는 대시보드가 될 것입니다. 프로젝트를 하다보니 데이터 전처리, 모델링, 검증의 과정이 다양한 기능 적용, 예쁜 디자인, 빠른 성능보다는 더 중요한 것 같다는 생각이 많이 들었습니다. 그렇다고 해서 다양한 기능 적용, 예쁜 디자인, 빠른 성능이 중요하지 않다는 의미는 결코 아닙니다. 위 요소들 역시 좋은 대시보드가 되기 위해 반드시 필요한 요소들이고, 지속해서 향상시키기 위해 신경써야 하는 부분임도 틀림없습니다. 좋은 대시보드라는 요건을 충족시키기 위해서 최우선적으로 갖추어야할 것은 바로 데이터 정합성이라는 것입니다. 데이터 정합성을 충족시킨 이후에 더 좋은 대시보드로 거듭날 수 있도록 성능과 기능, 디자인을 개선 및 향상 시켜야 합니다. ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/00.Dashboards/#%EB%82%B4%EA%B0%80-%EC%83%9D%EA%B0%81%ED%95%98%EB%8A%94-%EC%A2%8B%EC%9D%80-%EB%8C%80%EC%8B%9C%EB%B3%B4%EB%93%9C",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/00.Dashboards/#내가-생각하는-좋은-대시보드"
  },"9": {
    "doc": "Dashboards",
    "title": "Dashboards",
    "content": " ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/00.Dashboards/",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/00.Dashboards/"
  },"10": {
    "doc": "Superstore Analysis(1)",
    "title": "1. 소개",
    "content": "해당 대시보드는 매출, 판매량, 수익의 종합적인 정보를 제공합니다. (원본 데이터 : 슈퍼스토어 샘플 데이터) . 제품별 매출, 판매량, 수익의 Trend 및 YoY, QoQ, MoM을 확인 할수 있으며, 판품된 주문 현황 및 대분류 및 중분류별 판품 현황도 확인 할 수 있습니다. 가장 하단의 영역에서는 Radar 차트를 통해 KPI 지표 비교를, Bar In Bar 차트를 통해 부가적인 분석을 할 수 있습니다. ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/01.Superstore%20Analysis(1)/",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/01.Superstore%20Analysis(1)/"
  },"11": {
    "doc": "Superstore Analysis(1)",
    "title": "1. Description",
    "content": "The dashboard provides comprehensive information on Sales, Quantity, and Profit. (Data Set : Superstore Sample Data) . This dashboard shows Trend of Sales, Quantity, Profit and YoY, QoQ, MoM. Also, User can know about Returned Order and Sub-Categories which are returned. In the lowermost area, you can compare KPI indicators through Radar Chart and analyze additional analysis through Bar in Bar Chart. ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/01.Superstore%20Analysis(1)/#1-description",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/01.Superstore%20Analysis(1)/#1-description"
  },"12": {
    "doc": "Superstore Analysis(1)",
    "title": "2. 특징",
    "content": ". | 상단 모드 버튼을 통해 라이트 모드 / 다크 모드 변환 가능 . | 필터 영역의 기간 매개변수를 월/분기/전체로 조정할때, 자동으로 최근 12개월, 최근 8분기, 최근 3개년 트렌드를 확인할 수 있습니다. | 필터 영역의 기간 매개변수를 월/분기/전체로 조정할때, 자동으로 MoM, QoQ, YoY 값을 보여줍니다. | Radar 차트를 통해 Sub-Category 값을 그것이 속한 Category의 평균과 KPI 지표를 비교할 수 있습니다. | . ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/01.Superstore%20Analysis(1)/",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/01.Superstore%20Analysis(1)/"
  },"13": {
    "doc": "Superstore Analysis(1)",
    "title": "2. Features",
    "content": ". | User can change mode(Light/Dark) by mode button . | It shows Last 12 Months, Last 8 Quarters, Last 3 Years by selected date parameter in filter area automatically. | It shows MoM, QoQ, YoY by selected date parameter in filter area automatically. | User can select the measure of the Sun busrt chart as the dimension you want to analyze among Sales, Quantity, and Profit. | . ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/01.Superstore%20Analysis(1)/#2-features",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/01.Superstore%20Analysis(1)/#2-features"
  },"14": {
    "doc": "Superstore Analysis(1)",
    "title": "Superstore Analysis(1)",
    "content": "작성일자 : 2023-08-25 See More . | 1. 소개/Description | 2. 특징/Features | . ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/01.Superstore%20Analysis(1)/",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/01.Superstore%20Analysis(1)/"
  },"15": {
    "doc": "조건 분기",
    "title": "조건 분기",
    "content": "Ver 0.1.1 . | 1. UNION을 사용한 쓸데없이 긴 표현 | 2. 집계와 조건 분기 | 3. 그래도 UNION이 필요한 경우 | 4. 절차 지향형과 선언형 | . 1. UNION을 사용한 쓸데없이 긴 표현 . UNION을 사용한 조건 분기는 SQL 초보자가 좋아하는 기술 중 하나이다. 일반적으로 이러한 조건 분기는, WHERE 구만 조금씩 다른 여러 개의 SELECT 구문을 합쳐서, 복수의 조건에 일치하는 하나의 결과 집합을 얻고 싶을때 사용한다. 이러한 방법은 큰 문제를 작은 문제를 나눌 수 있다는 점에서 생각하기 쉽다는 장점이 있다. 따라서 조건 분기와 관련된 문제를 접할 때 가장 처음 생각할 수 있는 기본적인 방법이다. 하지만 이런 방법은 성능적인 측면에서 굉장히 큰 단점을 가지고 있다. 외부적으로는 하나의 SQL 구문을 실행하는 것처럼 보이지만, 내부적으로는 여러 개의 SELECT 구문을 실행하는 실행 계획으로 해석되기 때문이다. 따라서 테이블에 접근하는 횟수가 많아져서 I/O 비용이 크게 들어난다. 따라서 SQL에서 조건분기를 할때 UNION을 사용해도 좋을지 여부는 신중히 검토해야한다. 아무 생각없이 무조건 UNION을 사용해서는 안된다. | UNION을 사용한 조건 분기와 관련된 간단한 예제 . | 상품 Table | . | . | item_id | year | iteam_name | price_tax_ex | price_tax_in | . | 100 | 2000 | 머그컵 | 500 | 525 | . | 100 | 2001 | 머그컵 | 520 | 546 | . | 100 | 2002 | 머그컵 | 600 | 630 | . | 100 | 2003 | 머그컵 | 600 | 630 | . | 101 | 2000 | 티스푼 | 500 | 525 | . | 101 | 2001 | 티스푼 | 500 | 525 | . | 101 | 2002 | 티스푼 | 500 | 525 | . | 101 | 2003 | 티스푼 | 500 | 525 | . | 102 | 2000 | 나이프 | 600 | 630 | . | 102 | 2001 | 나이프 | 550 | 577 | . | 102 | 2002 | 나이프 | 500 | 577 | . | 102 | 2003 | 나이프 | 500 | 420 | . | 구하고자 하는 결과 | . | item_name | year | price | . | 나이프 | 2000 | 500 | . | 나이프 | 2001 | 520 | . | 나이프 | 2002 | 630 | . | 나이프 | 2003 | 630 | . | 티스푼 | 2000 | 500 | . | 티스푼 | 2001 | 500 | . | 티스푼 | 2002 | 525 | . | 티스푼 | 2003 | 525 | . | 나이프 | 2000 | 600 | . | 나이프 | 2001 | 550 | . | 나이프 | 2002 | 577 | . | 나이프 | 2003 | 420 | . | UNION을 사용한 조건 분기 | . SELECT item_name ,year ,price_tax_ex AS price FROM Items WHERE year &lt;= 2001 UNION ALL SELECT item_name ,year ,price_tax_in AS price FROM Items WHERE year &gt; 2001; . 위 쿼리는 조건이 배타적이므로 중복된 레코드가 발생하지 않는다. 쓸데없이 정렬 등의 처리를 하지 않아도 되므로 UNION ALL을 사용했다. 하지만 이 코드는 굉장히 큰 문제를 안고있는데, 첫번째 문제는 쓸데없이 길다는 것이다. 거의 같은 두개의 쿼리를 두번이나 실행하고 있다. 이는 쿼리를 쓸데없이 길고, 읽기 힘들게 만들 뿐이다. 두번째 문제는 성능이다. | UNION을 사용했을 때의 실행 계획 문제 | . UNION 쿼리는 iteam 테이블에 2회 접근한다는 것을 알수 있습니다. 그리고 그때마다 TABLE ACCESS FULL이 발생하므로, 읽어들이는 비용도 테이블의 크기에 따라 선형으로 증가하게 된다. 물론 데이터 개시에 테이블의 데이터가 있으면 어느 정도 그런 증상이 완화되겠지만, 테이블의 크기가 커지면 캐시 히트율이 낮아지므로 그러한 것도 기대하기 힘들어진다. | 정확한 판단 없이는 UNION 사용 회피 | . 간단하게 레코드 집합을 합칠 수 있다는 점에서 UNION은 굉장히 편리한 도구이다. 따라서 UNION을 조건 분기를 위해 사용하고 싶은 유혹에 사로잡히는 것도 무리는 아니다. 하지만 이는 굉장히 위험한 생각이다. 정확한 판단 없이 SELECT 구문 전체를 여러 번 사용해서 코드를 길게 만드는 것은 쓸데없는 테이블 접근을 발생 시키며 SQL의 성능을 나쁘게 만든다. 또한 물리 자원(저장소 I/O 비용)도 쓸데없이 소비하게 된다. | WHERE 구에서 조건 분기를 하는 사람은 초보자 | . “조건 분기를 WHERE 구로 하는 사람은 초보자다. 잘하는 사람은 SELECT 구만으로 조건분기를 한다.” . SELECT item_name ,year ,CASE WHEN year &lt;= 2001 THEN price_tax_ex WHEN year &gt;= 2002 THEN price_tax_in END AS price FROM Items . 위 쿼리는 SELECT 구만으로 조건 분기를 한 쿼리이다. 같은 결과를 출력하지만 성능적으로는 UNION을 한 쿼리보다 훨씬 좋다. (테이블의 크기가 커질수록 더욱 명확하게 드러난다.) . | SELECT 구를 사용한 조건 분기의 실행 계획 | . CASE 식을 사용한 쿼리의 실행은 Item 테이블에 대한 접근이 1회로 줄어든다. 이전의 UNION을 사용한 구문보다 성능이 2배 좋아졌다고 할수 있다. 이처럼 쿼리 성능이 좋은지 나쁜지는 반드시 실행 계획 레벨에서 판단해야한다. SQL 구문에는 어떻게 데이터를 검색할지를 나타내는 접근 경로가 쓰여있지 않기 때문이다. 이를 알려면 실행계획을 보는 수 밖에 없다. 사실 이는 좋은 것이 아니다. “사용자가 데이터에 접근 경로라는 물리 레벨의 문제를 의식하지 않고 싶다”라는 것이 RDB와 SQL이 가진 컨셉이기 때문이다. 하지만 아직 이런 뜻을 이루기에는 현재의 RDB와 SQL(그리고 하드웨어)는 역부족이다. 따라서 은폐하고 있는 접근 경로를 엔지니어가 체크해줘야한다. 어쨌거나 UNION과 CASE의 쿼리를 구문적인 관점에서 비교하면, UNION은 SELECT ‘구문’을 기본 단위로 분기하고 있다. 구문을 기본단위로 사용하고 있다는 점에서, 아직 절차 지향적 발상을 벗어나지 못한 방법이라고 말할 수 있다. 반면 CASE 식을 사용한 분기는 문자 그대로 ‘식’을 바탕으로 한 사고이다. 이렇게 ‘구문’에서 ‘식’으로 사고를 변경하는 것이 SQL을 마스터 하는 열쇠 중 하나이다. 하나의 요령은 어떤 문제가 있을 때 스스로 “문제를 절차 지향적 언어로 해결한다면 어떤 IF 조건문을 사용해야 할까?”라고 사고할때마다 “이것을 SQL의 CASE로는 어떻게 해결할 수 있지?”라는 것을 꾸준히 의식하는 것 . 2. 집계와 조건 분기 . coming soon . 3. 그래도 UNION이 필요한 경우 . coming soon . 4. 절차 지향형과 선언형 . coming soon . ",
    "url": "/docs/5.Oracle/Optimization/01.%EC%A1%B0%EA%B1%B4%20%EB%B6%84%EA%B8%B0/#%EC%A1%B0%EA%B1%B4-%EB%B6%84%EA%B8%B0",
    
    "relUrl": "/docs/5.Oracle/Optimization/01.%EC%A1%B0%EA%B1%B4%20%EB%B6%84%EA%B8%B0/#조건-분기"
  },"16": {
    "doc": "조건 분기",
    "title": "조건 분기",
    "content": "작성일자 : 2023-09-16 ",
    "url": "/docs/5.Oracle/Optimization/01.%EC%A1%B0%EA%B1%B4%20%EB%B6%84%EA%B8%B0/",
    
    "relUrl": "/docs/5.Oracle/Optimization/01.%EC%A1%B0%EA%B1%B4%20%EB%B6%84%EA%B8%B0/"
  },"17": {
    "doc": "Superstore Analysis(2)",
    "title": "1. 소개",
    "content": "해당 대시보드는 사용자가 선택한 중분류와 해당 중분류가 속한 대분류의 평균값을 비교하는 종합적인 대시보드입니다.선택 가능한 측정값으로는 매출, 판매량, 수익이 있습니다. (원본 데이터 : 슈퍼스토어 샘플 데이터) . KPI 지표 정의를 통해 방사형 차트로 KPI를 한눈에 보고 비교할 수 있도록 구현하였으며, 다른 유형의 차트들(트리맵, 게이지, 라인 차트, 텍스트 차트, 맵 차트)도 비교하는 형태로 대시보드 레이아웃을 구성했습니다. ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/02.Superstore%20Analysis(2)/",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/02.Superstore%20Analysis(2)/"
  },"18": {
    "doc": "Superstore Analysis(2)",
    "title": "1. Description",
    "content": "This dashboard is a comprehensive dashboard that compares the average value of a user-selected sub-category with the category to which it belongs. Available measures include sales, quantity, and profit. (Data Set : Superstore Sample Data) . Through the definition of KPI indicators, it is implemented so that KPIs can be viewed and compared at a glance with a radial chart, other types of charts (treemap, gauges, line chart, text chart, map chart) have also configured dashboard layouts to compare with the average value of the category. ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/02.Superstore%20Analysis(2)/#1-description",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/02.Superstore%20Analysis(2)/#1-description"
  },"19": {
    "doc": "Superstore Analysis(2)",
    "title": "2. 특징",
    "content": ". | 사용자는 필터 영역의 Last N Month 매개변수 값을 변경하여 대시보드 전체의 최근 N개월 값을 지정할 수 있습니다. | 사용자가 필터 영역의 Sub-Category 를 선택하면 자동으로 그것이 속한 Category 값을 리턴하고 대시보드 내용이 변경됩니다. | . ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/02.Superstore%20Analysis(2)/",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/02.Superstore%20Analysis(2)/"
  },"20": {
    "doc": "Superstore Analysis(2)",
    "title": "2. Features",
    "content": ". | The user can specify the last N month value across the dashboard by changing the value of the Last N Month parameter in the filter area. | When the user selects the sub-category in the filter area, it automatically returns the category value to which it belongs and changes the dashboard contents. | . ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/02.Superstore%20Analysis(2)/#2-features",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/02.Superstore%20Analysis(2)/#2-features"
  },"21": {
    "doc": "Superstore Analysis(2)",
    "title": "Superstore Analysis(2)",
    "content": "작성일자 : 2022-07-30 See More . | 1. 소개/Description | 2. 특징/Features | . ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/02.Superstore%20Analysis(2)/",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/02.Superstore%20Analysis(2)/"
  },"22": {
    "doc": "Premiere League 20~21",
    "title": "1. 소개",
    "content": "해당 대시보드는 프리미어리그 2020-2021 시즌 데이터를 활용하여 구현한 대시보드 입니다. (원본 데이터 : Kaggle 데이터) . 해당 대시보드는 득점, 도움, 패스 시도에 대한 데이터를 팀 순위별로 볼 수있습니다. 또한 산점도 차트에서는 도움, 골, 패스 시도, 페널티 시도, 기대 도움, 기대득점 값중에서 사용자가 분석하고자하는 값으로 변경하면서 팀과 선수별로 다각도에서 분석할 수 있습니다. ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/03.Premiere%20League/",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/03.Premiere%20League/"
  },"23": {
    "doc": "Premiere League 20~21",
    "title": "1. Description",
    "content": "This dashboard uses Premiere League 2020-2021 season’s data set (Data Set : Kaggle Data) . This dashboard shows Goals, Assists, Pass Attempted by team rank. In addition, the scatterplot chart allows you to analyze from multiple perspectives by team and player, changing the assists, goasl, pass attempted, penalty attempted, xA(expected assists), and xG(expected goals) values to the value you want to analyze. ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/03.Premiere%20League/#1-description",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/03.Premiere%20League/#1-description"
  },"24": {
    "doc": "Premiere League 20~21",
    "title": "2. 특징",
    "content": ". | 사용자는 순위표에서 클럽 엠블럼을 선택하여 하단의 영역을 필터링 할 수 있습니다. | 디자인은 프리미어리그 공식 홈페이지를 참고했습니다. | 분산형 차트를 통해 특정 팀 또는 특정 선수가 어떤 퍼포먼스를 보이고 있는지 분석할 수 있습니다. | . ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/03.Premiere%20League/",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/03.Premiere%20League/"
  },"25": {
    "doc": "Premiere League 20~21",
    "title": "2. Features",
    "content": ". | The user can filter Club and Player area’s charts by selecting club emblem from the standings. | The dashboard design referenced on the Premier League Official Website. | Scatter plots allow users to analyze ther performance of a particular club or player. | . ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/03.Premiere%20League/#2-features",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/03.Premiere%20League/#2-features"
  },"26": {
    "doc": "Premiere League 20~21",
    "title": "Premiere League 20~21",
    "content": "작성일자 : 2022-04-15 See More . | 1. 소개/Description | 2. 특징/Features | . ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/03.Premiere%20League/",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/03.Premiere%20League/"
  },"27": {
    "doc": "Sample Overview",
    "title": "1. 소개",
    "content": "해당 대시보드는 한 제조사의 프로젝트에서 구현했던 대시보드를 샘플 데이터로 재구현한 대시보드입니다. 생산에 앞서 제조사의 샘플 제품의 테스트 과정에 대해서 구현한 대시보드입니다. (원본 데이터 : 자체 제작 샘플 엑셀 데이터) . Overview에서는 제품의 당월과 누적, 년간 목표 및 실적에대해서 보여주고, 누적 추세 현황도 확인 할 수 있습니다. 하단 필터영역의 제품 매개변수 및 하위 구분 필터링을 통해 사용자가 분석하고자하는 제품들의 목표 및 실적, 목표 달성률을 더 상세히 분석할 수 있습니다. Report1에서는 월간 목표 및 실적, 달성률을 테이블 형태로 구현했습니다.실제로 현업에서는 테이블 형태의 차트에 대한 요청이 많기도 합니다. 테이블에서 사용가자 보고자 하는 값에 마우스 오버를 하면 빠르게 상세 데이터에 대해서 정보를 확인할 수 있으며, 클릭시 샘플의 각 단계별 현황을 Milestone 차트로 확인 할 수있습니다.실제 고객사에서는 Salesforce를 사용하여 Milestone 차트의 레코드를 클릭하여 해당 레코드의 Salesforce 화면으로 이동하도록 업무 연계성을 늘렸습니다. Milestone 차트는 제품의 Qualification 단계에 있어서 단계별 일정 및 일정 준수 여부 확인이 중요한 업무의 특성상 오래전부터 구현이 필요했다고 합니다. 해당 차트를 구현하기 위해서는 단계별 Start Date와 End Date로 데이터가 구성되어 있어야 하는데, Raw Table은 모든 단계별 날짜들이 각각의 컬럼으로 다수개의 컬럼이 존재하고 있었습니다. 이에 쿼리의 Unpivot을 활용해서 Milestone 차트를 그릴 수 있는 형태로 변형했습니다. 그렇게 Milestone 그래프를 구현했고, 실제로 현업에서 높은 만족도를 보였다는 피드백을 받기도 했습니다. 그리 대단한 대시보드를 구현한것은 아니지만, 그래도 고객으로부터 좋은 피드백을 받으니 개인적으로 뿌듯하기도 했습니다. ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/04.Sample%20Overview/",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/04.Sample%20Overview/"
  },"28": {
    "doc": "Sample Overview",
    "title": "1. Description",
    "content": "This dashboard is a re-implementation of the dashboard that was implemented in a manufacturer’s project as sample data.This is a dashboard implemented for the testing process of the manufacturer’s sample products prior to production.(Original data: Self-made sample Excel data) . Overview shows users the month, cumulative, annual targets and complete of the product, as well as the cumulative trend status. Product parameters and sub-separated filtering in the bottom filter area allow user to analyze further detail the target, complete, and approval rate of the products user want to analyze. In Report 1, monthly goals, complete, and approval rates are implemented in a table form. In fact, there are many requests for table-type charts in the field.If user mouse over the value that the user wants to see in the table, user can quickly check the detailed data, and when users click, you can check the status of each step of the sample in the Milestone chart.In fact, customers have used Salesforce to increase their business connectivity by clicking on a record in the Milestone chart to go to the Salesforce record page. ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/04.Sample%20Overview/#1-description",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/04.Sample%20Overview/#1-description"
  },"29": {
    "doc": "Sample Overview",
    "title": "2. 특징",
    "content": ". | 왼쪽의 인덱스 영역에서 클릭을 통해 대시보드간 이동을 할 수 있습니다. | 일반적으로는 파이차트의 형태로 구현하는 게이지 차트를 계산식을 사용해 눈금선이 있는 계기판 형태의 게이지 차트로 변형했습니다. | 프로젝트 당시 Milestone 차트를 구현하는데 있어서 해당 차트를 만들기 위한 형태로 테이블의 구조를 커스텀 쿼리로 가공하여 구현했습니다. | Milestone 대시보드 구현을 위해서는 Startdate와 Enddate 두개의 필드를 가지고 구현을 해야하는데, 실제 데이터는 각 단계의 개수만큼 컬럼이 존재하여 데이터 적재가 되고있었습니다. 그래서 커스텀 쿼리로 UNPIVOT 하여 구현하였습니다. | 업무 상 계획날짜에 대비 실제날짜가 늦다면 빨간색으로, 일정을 준수했다면 파란색으로 시각적인 효과를 주어, 현업이 업무를 좀 더 빠르게 파악할 수 있도록 했습니다. | . | . ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/04.Sample%20Overview/",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/04.Sample%20Overview/"
  },"30": {
    "doc": "Sample Overview",
    "title": "2. Features",
    "content": ". | User can move another dashboards by clicking in the index area on the left. | Gauge charts, which are typically implemented in the form of pie charts, have been transformed into gauge charts in the form of instrument panels with grid lines using calculated fields. | In implementing Milestone charts at the time of the project, the structure of the table was processed into a custom query to create those charts. | Milestone dashboard implementation requires two fields, Startdate and Enddate, and the actual data was loaded with columns as many as each step. So we implemented UNPIVOT as a custom query. | The visual effects were red if the actual date was late for the business plan date, and blue if the schedule was followed, allowing the field to see the work faster. | . | . ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/04.Sample%20Overview/#2-features",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/04.Sample%20Overview/#2-features"
  },"31": {
    "doc": "Sample Overview",
    "title": "Sample Overview",
    "content": "작성일자 : 2023-06-01 See More . | 1. 소개/Description | 2. 특징/Features | . ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/04.Sample%20Overview/",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/04.Sample%20Overview/"
  },"32": {
    "doc": "Customer Insight",
    "title": "1. 소개",
    "content": "해당 대시보드는 프로젝트에서 구현했던 대시보드를 샘플 데이터로 재구현한 대시보드입니다. 매출, 판매량, 수익성에 대해 제품, 지역, 시간과 같은 다양한 방식(차원)으로 현황을 보는 형태의 대시보드 입니다. (원본 데이터 : 슈퍼스토어 샘플 데이터) . ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/05.Customer%20Insight/",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/05.Customer%20Insight/"
  },"33": {
    "doc": "Customer Insight",
    "title": "1. Description",
    "content": "This dashboard is a re-implementation of the dashboard that was implemented in a project as sample data.This is for overview about Sales, Quantity, Profit by various dimension like Product, Regions and Times (Original data: Superstore Sample Data) . ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/05.Customer%20Insight/#1-description",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/05.Customer%20Insight/#1-description"
  },"34": {
    "doc": "Customer Insight",
    "title": "Customer Insight",
    "content": "작성일자 : 2023-09-10 수정일자 : 2023-09-16 . See More . | 1. 소개/Description | . ",
    "url": "/docs/4.Tableau/Dashboard/Portfolio/05.Customer%20Insight/",
    
    "relUrl": "/docs/4.Tableau/Dashboard/Portfolio/05.Customer%20Insight/"
  },"35": {
    "doc": "SINGLE ROW",
    "title": "단일행 함수(Single Row Funtion)",
    "content": "Ver 0.1.2 . | 1. 단일행 함수 | 2. 자주 쓰이는 문자 함수 | 3. 자주 쓰이는 숫자 함수 | 4. 자주 쓰이는 날짜 함수 | 5. 자주 쓰이는 변환 함수 | 6. 자주 쓰이는 NULL 관련 함수 | . 1. 단일행 함수 . Oracle - Single Row Function . | DBMS에서 제공하는 내장 함수(Built-In Function)를 이용하면 각 행 별로 데이터를 가공하거나 변환할 수 있다. | 함수는 인자 값(Arguments)과 리턴 값이 존재한다. | 인자 값은 함수에 따라 여러개가 될 수 있다. | 함수의 리턴 값은 항상 1개(단일 값)이다. | . | 단일행 함수 종류 | . | 종류 | 설명 | . | 문자 함수 | 문자 데이터를 가공하는 단일행 함수 | . | 숫자 함수 | 숫자 데이터를 가공하는 단일행 함수 | . | 날짜 함수 | 날짜 데이터를 가공하는 단일행 함수 | . | 변환 함수 | 데이터 유형을 변환하는 단일행 함수 | . | NULL 관련 함수 | NULL과 관련된 가공 및 변환을 하는 단일 행 함수 | . | 함수 중첩 . | 단일행 함수는 중접하여 사용이 가능하다. 즉, 함수의 인자로 다른 함수의 리턴 값이 올 수 있다. | . | . Example . SELECT a.ENAME ,a.HIREDATE ,ADD_MONTHS(a.HIREDATE, -12*10) AS USE_1FN ,LAST_DAY(ADD_MONTHS(a.HIREDATE,-12*10)) AS USE_2FN ,TO_CHAR(LAST_DAY(ADD_MONTHS(a.HIREDATE,-12*10)), 'YYYY-MM-DD') AS USE_3FN FROM emp a WHERE a.DEPTNO = 20; . | ENAME | HIREDATE | USE_1FN | USE_2FN | USE_3FN | . | SMITH | 1980-12-17 00:00:00.000 | 1970-12-17 00:00:00.000 | 1970-12-31 00:00:00.000 | 1970-12-31 | . | JONES | 1981-04-02 00:00:00.000 | 1971-04-02 00:00:00.000 | 1971-04-30 00:00:00.000 | 1971-04-30 | . | SCOTT | 1987-04-19 00:00:00.000 | 1977-04-19 00:00:00.000 | 1977-04-30 00:00:00.000 | 1977-04-30 | . | ADAMS | 1987-05-23 00:00:00.000 | 1977-05-23 00:00:00.000 | 1977-05-31 00:00:00.000 | 1977-05-31 | . | FORD | 1981-12-03 00:00:00.000 | 1971-12-03 00:00:00.000 | 1971-12-31 00:00:00.000 | 1971-12-31 | . | 데이터 유형 . | 오라클은 여러 유형의 데이터가 저장되어 있으며 각 데이터 유형마다 사용할 수 있는 함수나 데이터의 가공 및 처리 방식이 다를 수 있다. | 호환이 가능한 형태의 데이터는 변환형 함수를 이용하여 데이터 유형을 변환할 수 있다. | 문자 데이터 . | 문자열 정보를 가진 데이터 | CHAR, VARCHAR2 데이터 타입 | . | 숫자 데이터 . | 숫자 값 정보를 가진 데이터 | NUMBER 데이터 타입 | . | 날짜 데이터 . | 일자와 시간 정보를 가진 데이터 | DATE, TIMESTAMP 데이터 타입 | . | . | . | . | . 2. 자주 쓰이는 문자 함수 . | 함수 | 설명 | . | LOWER(char) | char의 모든 문자를 소문자로 변경하여 리턴 | . | UPPER(char) | char의 모든 문자를 대문자로 변경하여 리턴 | . | CONCAT(char1, char2) | char1 문자열과 char2 뮨자열을 연결하여 리턴 | . | SUBSTR(char, position [,length]) | char 문자열의 position 위치로부터 lenth개의 문자를 잘라내서 리턴(length가 생략되면, position 위치로부터 char 우측 끝까지 잘라내서 리턴 | . | REPLACE(char,search_string [,replace_string] | char 문자열에서 search_string 값을 replace_string 값으로 대체하여 리턴(replace_string 값이 생략되면, search_string 값을 NULL로 대체하여 리턴) | . | LPAD(exp1, n [,exp2]) | expr1을 n자리만큼 늘리고, 왼쪽 빈 공간을 expr2로 채워서 리턴(expr2가 생략되면 기본 값은 공백 | . | RPAD(exp1, n [,exp2]) | expr1을 n자리만큼 늘리고, 오른쪽 빈 공간을 expr2로 채워서 리턴(expr2가 생략되면 기본 값은 공백 | . | LTRIM(char [,set]) | char 문자열의 왼쪽부터 set 문자를 제거하여 리턴 (set이 생략되면 기본 값은 공백) | . | RTRIM(char [,set]) | char 문자열의 오른쪽부터 set 문자를 제거하여 리턴 (set이 생략되면 기본 값은 공백) | . | TRIM([LEADING, TRAILING, BOTH] [set] [FROM] char) | char 문자열의 왼쪽(LEADING), 오른쪽(TRAILING) 또는 양쪽(BOTH)으로부터 set 문자를 제거하여 리턴 | . | LENGTH(char) | char 문자열의 길이를 리턴 | . | INSTR(char, search_string [,position [,occurrence]]) | char 문자열의 position 위치로부터 occurrence 번째로 찾은 search_string의 시작 위치를 리턴 (position과 occurrence) 값이 생략도면 기본 값은 1 | . SELECT LOWER('ABcdEFgh') AS LOWER_FN ,UPPER('ABcdEFgh') AS UPPER_FN ,CONCAT('ABC' 'def') AS CONCAT_FN -- 두개까지만 지원 (연결 연산자 (||) 사용하면 N개 CONCAT 가능) ,SUBSTR('ABCDEFG',4,2) AS SUBSTR_FN1 ,SUBSTR('ABCDEFG',4) AS SUBSTR_FN2 ,REPLACE('ABCDEGF' 'DEF', 'ZZZ') AS REPLACE_FN1 ,REPLACE('ABCDEGF' 'DEF') AS REPLACE_FN2 ,LPAD('ABC', 8, 'Z') AS LPAD_FN1 ,LPAD('ABC', 8) AS LPAD_FN2 ,RPAD('ABC', 8, '12') AS RPAD_FN1 ,RPAD('ABC', 8) AS RPAD_FN2 FROM DUAL; . | LOWER_FN | UPPER_FN | CONCAT_FN | SUBSTR_FN1 | SUBSTR_FN2 | REPLACE_FN1 | REPLACE_FN2 | LPAD_FN1 | LPAD_FN2 | RPAD_FN1 | RPAD_FN2 | . | abcdefgh | ABDCEFGH | ABCdef | DE | EDFGH | ABCDZZZGH | ABCGH | ZZZZZABC | _____ABC | ABC12121 | ABC_____ | . 3. 자주 쓰이는 숫자 함수 . | 함수 | 설명 | . | ABS(n) | 숫자 n의 절대 값을 리턴 | . | SIGN(n) | 숫자 n의 부호를 리턴 (양수면 1, 음수면 -1, 0이면 0) | . | ROUND(n1 [,n2] | 숫자 n1을 소수점 n2 째 자리로 ‘반올림’하여 리턴(n2가 0이거나 생략되면 정수 값으로 반올림) | . | TRUNC(n1 [,n2] | 숫자 n1을 소수점 n2 째 자리로 ‘버림’하여 리턴(n2가 0이거나 생략되면 정수 값으로 반올림) | . | CEL(n) | 숫자 n보다 크거나 같은 최소의 정수 값을 리턴 | . | FLOOR(n) | 숫자 n보다 작거나 같은 최대의 정수 값을 리턴 | . | MOD(n1, n2) | 숫자 n1을 n2로 나눈 나머지 값을 리턴 | . | POWER(n1, n2) | 숫자 n1의 n2 제곱 값을 리턴 | . | SQRT(n1, n2) | 숫자 n의 제곱근 값을 리턴 | . 4. 자주 쓰이는 날짜 함수 . | 함수 | 설명 | . | SYSDATE | 데이터베이스 서버의 현재 날짜 값을 리턴 | . | ROUND(date [,fmt]) | 날짜 date를 fmt 포맷 요소 기준으로 ‘반올림’하여 리턴 (fmt : YY, MM, DD, HH, MI 등) | . | TRUNC(date [,fmt]) | 날짜 date를 fmt 포맷 요소 기준으로 ‘버림’하여 리턴 | . | NEXT_DAY(date, n | 날짜 date 이후 가장 가까운 n요일 날짜 값을 리턴(n이 1:일, 2:월, 3:화, 4:수, 5:목, 6:금, 7:토) | . | LAST_DAY | 날짜 date가 속한 월의 마지막 날짜 값을 리턴 | . | ADD_MONTHS(date, n) | 날짜 date에 n개월 수를 더한 날짜 값을 리턴 | . | MONTHS_BETWEEN(date1, date2) | 두 날짜(date1, date2)간 개월 수를 리턴 | . 5. 자주 쓰이는 변환 함수 . | 함수 | 설명 | . | TO_CHAR(n [,fmt]) | 숫자 n을 주어진 fmt 형식의 문자 값으로 변환하여 리턴(999,999.99, L999,999.99, $000,000.00) | . | TO_CHAR(date [,fmt]) | 날짜 date를 주어진 fmt 형식의 문자 값으로 변환하여 리턴 | . | TO_NUMBER(char) | 문자열 char를 숫자 값으로 변환하여 리턴 | . | TO_DATE(char [,fmt]) | 문자열 char를 주어진 fmt 형식의 날짜 값으로 변환하여 리턴 | . | CAST (expr AS type_name) | expr을 type_name 데이터 타입으로 변환하여 리턴 | . 연산 및 비교를 위해 자동으로 데이터 타입이 변경되는 것을 묵시적 형 변환이라고 한다. 변환 함수를 사용한 명시적 형 변환(Explicit Type Conversion)이 권장 된다. 6. 자주 쓰이는 NULL 관련 함수 . | 함수 | 설명 | . | NVL(expr1, expr2) | expr1이 NULL이 아니면 expr1, NULL이 아니면 expr2를 리턴 | . | NVL(expr1, expr2, expr3) | expr1이 NULL이 아니면 expr2, NULL이 아니면 expr3를 리턴 | . | COALESCE(expr1, expr2 [,expr3 …]) | NULL이 아닌 첫 번째 expr을 리턴 | . | NULLIP(expr1, expr2) | expr1과 expr2가 다르면 expr1, 같으면 NULL을 리턴 | . ",
    "url": "/docs/5.Oracle/DML/1-1.Single_row_Function/#%EB%8B%A8%EC%9D%BC%ED%96%89-%ED%95%A8%EC%88%98single-row-funtion",
    
    "relUrl": "/docs/5.Oracle/DML/1-1.Single_row_Function/#단일행-함수single-row-funtion"
  },"36": {
    "doc": "SINGLE ROW",
    "title": "SINGLE ROW",
    "content": "작성일자 : 2023-07-16 수정일자 : 2023-07-23 ",
    "url": "/docs/5.Oracle/DML/1-1.Single_row_Function/",
    
    "relUrl": "/docs/5.Oracle/DML/1-1.Single_row_Function/"
  },"37": {
    "doc": "DATE",
    "title": "1. 날짜 함수(Date Funtion) ",
    "content": "Ver 0.1.2 . | 1. 날짜 함수(Date Function) | 2. 날짜 정보 추출 (Extract Date Information) | 3. 날짜 형식 (Date Format) | 4. 날짜 및 시간 연산 (Date and Time Calculations) | . 쿼리문을 작성함에 있어서 날짜를 잘 다루는 것은 기본이자 필수이다. 나 같은 경우는 실제로 프로젝트 당시 태블로로 대시보드를 만든 후 원본 데이터로 검증을 할 때 WHERE 절에 년도 또는 월 등 기간 조건을 적용시켜 데이터를 검증을 많이 하곤 한다. 이럴 때 날짜 함수들을 많이 사용하였다. 뿐만 아니라 상황에 따라 날짜들 끼리 연산을 해야하는 경우도 있을 것이다. 지금부터 날짜 정보 추출하는 방법과 날짜 형식, 그리고 날짜 및 시간 연산에 대해서 정리해보도록 하겠다. When writing a query statement, it is both basic and essential to handle the date well. In my case, when I actually make a dashboard with a tablo and then verify it with the original data, I often verify the data by applying term conditions such as year or month to the WHERE clause. At this time, many date functions were used. In addition, there will be cases where it is necessary to perform a calculation between dates depending on the situation. From now on, I will summarize the method of extracting date information, date format, and date and time operations. ",
    "url": "/docs/5.Oracle/DML/1-2.Date/",
    
    "relUrl": "/docs/5.Oracle/DML/1-2.Date/"
  },"38": {
    "doc": "DATE",
    "title": "2. 날짜 정보 추출 (Extract Date Information) ",
    "content": "EXTRACT 함수는 오라클에서 날짜 유형의 데이터로부터 날짜 정보를 분리하여 새로운 컬럼의 형태로 추출해주는 함수이다. The EXTRACT function is a function that separates date information from date-type data in Oracle and extracts it in the form of a new column. select systimestamp ,EXTRACT (year from systimestamp) as year ,EXTRACT (month from systimestamp) as month ,EXTRACT (day from systimestamp) as day ,EXTRACT (hour from systimestamp) as hour ,EXTRACT (minute from systimestamp) as minute ,EXTRACT (second from systimestamp) as second from DUAL; . | SYSTIMESTAMP | YEAR | MONTH | DAY | HOUR | MINUTE | SECOND | . | 2023-07-04 10:31:25.610 +000 | 2,023 | 7 | 4 | 10 | 31 | 25.610123 | . 기본적으로 날짜 속성을 가지고 있으며, 날짜에서 추출된 정보(년, 월,일,시,분)들은 숫자 속성을 가지고 있다. Basically, it has a date attribute, and information extracted from the date (year, month, day, hour, minute) has a numeric attribute. ",
    "url": "/docs/5.Oracle/DML/1-2.Date/",
    
    "relUrl": "/docs/5.Oracle/DML/1-2.Date/"
  },"39": {
    "doc": "DATE",
    "title": "3. 날짜 형식 (Date Format) ",
    "content": "아래와 같이 다양한 인자를 통해서 날짜를 다양한 형태로 조회 할 수 있다. The date can be inquired in various forms through various factors as follows. select TO_CHAR(sysdate, 'CC') as \"세기\" ,TO_CHAR(sysdate, 'YYYY') as \"년\" ,TO_CHAR(sysdate, 'MM') as \"월\" ,TO_CHAR(sysdate, 'MON') as \"월_약자\" ,TO_CHAR(sysdate, 'MONTH') as \"월_이름\" ,TO_CHAR(sysdate, 'DD') as \"일\" ,TO_CHAR(sysdate, 'DDD') as \"몇일째\" ,TO_CHAR(sysdate, 'DY') as \"요일\" ,TO_CHAR(sysdate, 'DAY') as \"요일_이름\" ,TO_CHAR(sysdate, 'W') as \"몇번째주\" from DUAL; . | 세기 | 년 | 월 | 월_약자 | 월_이름 | 일 | 몇일째 | 요일 | 요일_이름 | 몇번째주 | . | 21 | 2023 | 07 | 7월 | 7월 | 04 | 185 | 화 | 화요일 | 1 | . 아래와 같이 언어 설정을 통해 다양한 언어형태로 날짜형태를 표현 할 수도 있다. The date form may be expressed in various language forms through the language setting as follows. select sysdate ,TO_CHAR(sysdate, 'DY', 'NLS_DATE_LANGUAGE=KOREAN') as KOR ,TO_CHAR(sysdate, 'DY', 'NLS_DATE_LANGUAGE=JAPANESE') as JAP ,TO_CHAR(sysdate, 'DY', 'NLS_DATE_LANGUAGE=ENGLISH') as ENG ,TO_CHAR(sysdate, 'DAY', 'NLS_DATE_LANGUAGE=KOREAN') as KOR ,TO_CHAR(sysdate, 'DAY', 'NLS_DATE_LANGUAGE=JAPANESE') as JAP ,TO_CHAR(sysdate, 'DAY', 'NLS_DATE_LANGUAGE=ENGLISH') as ENG from DUAL; . | SYSDATE | KOR | JAP | ENG | KOR | JAP | ENG | . | 2023-07-04 10:39:17.000 | 화 | 火 | TUE | 화요일 | 火曜日 | TUESDAY | . ",
    "url": "/docs/5.Oracle/DML/1-2.Date/",
    
    "relUrl": "/docs/5.Oracle/DML/1-2.Date/"
  },"40": {
    "doc": "DATE",
    "title": "4. 날짜 및 시간 연산 (Date and Time Calculations) ",
    "content": "아래 함수들은 다양한 형태로 날짜 및 시간을 연산하는 함수들이다. 이를 익혀두고 잘 활용하면 날짜를 다루는 것이 비교적 쉬워질 것이라 생각한다. The following functions are functions that calculate date and time in various forms. I think it will be relatively easy to handle the date if I learn it and use it well. SELECT TO_CHAR(SYSDATE ,'yyyy/mm/dd') AS \"오늘 날짜\" ,TO_CHAR(SYSDATE + 1 ,'yyyy/mm/dd') AS \"내일 날짜\" ,TO_CHAR(SYSDATE -1 ,'yyyy/mm/dd') AS \"어제 날짜\" ,TO_CHAR(TRUNC(SYSDATE,'dd') ,'yyyy/mm/dd hh24:mi:ss') AS \"오늘 정각 날짜\" ,TO_CHAR(TRUNC(SYSDATE,'dd') + 1,'yyyy/mm/dd hh24:mi:ss') AS \"내일 정각 날짜\" ,TO_CHAR(SYSDATE + 1/24/60/60 ,'yyyy/mm/dd hh24:mi:ss') AS \"1초 뒤 시간\" ,TO_CHAR(SYSDATE + 1/24/60 ,'yyyy/mm/dd hh24:mi:ss') AS \"1분 뒤 시간\" ,TO_CHAR(SYSDATE + 1/24 ,'yyyy/mm/dd hh24:mi:ss') AS \"1일 뒤 시간\" ,TO_CHAR(TRUNC(SYSDATE,'mm') ,'yyyy/mm/dd') AS \"이번 달 시작날짜\" ,TO_CHAR(LAST_DAY(SYSDATE) ,'yyyy/mm/dd') AS \"이번 달 마지막 날\" ,TO_CHAR(NEXT_DAY(SYSDATE,'일요일')) AS \"다음 일요일\" ,TO_CHAR(trunc(ADD_MONTHS(SYSDATE, + 1),'mm') ,'yyyy/mm/dd') AS \"다음 달 시작날짜\" ,TO_CHAR(ADD_MONTHS(SYSDATE, 1) ,'yyyy/mm/dd hh24:mi:ss') AS \"다음달 오늘 날자\" ,TO_CHAR(TRUNC(SYSDATE, 'yyyy') ,'yyyy/mm/dd') AS \"올해 시작 일\" ,TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE, -12), 'dd'),'yyyy/mm/dd') AS \"작년 현재 일\" ,TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD')) - TO_DATE('19930315') AS \"두 날짜 사이 일수 계산\" ,MONTHS_BETWEEN(SYSDATE, '19930315') AS \"두 날짜 사이의 월수 계산\" ,TRUNC(MONTHS_BETWEEN(SYSDATE, '19930315')/12,0) AS \"두 날짜 사이의 년수 계산\" FROM DUAL; . | 오늘 날짜 | 내일 날짜 | 어제 날짜 | 오늘 정각 날짜 | 내일 정각 날짜 | 1초뒤 시간 | 1분 뒤 시간 | 1일 뒤 시간 | 이번 달 시작 날짜 | 이번 달 마지막 날 | 다음 일요일 | 다음 달 시작 날짜 | 다음달 오늘 날짜 | 올해 시작 일 | 작년 현재일 | 두 날짜 사이 일수 | 두 날짜 사이의 월수 | 두 날짜 사이의 년수 | . | 2023/07/04 | 2023/07/05 | 2023/07/03 | 2023/07/04 00:00:00 | 2023/07/05 00:00:00 | 2023/07/04 10:51:28 | 2023/07/04 10:52:27 | 2023/07/04 11:51:27 | 2023/07/01 | 2023/07/31 | 23/07/09 | 2323/08/01 | 2023/08/04 10:51:27 | 2023/01/01 | 2022/07/04 | 11,068 | 363.65 | 30 | . 보통은 위와 같이 시간을 연산하지만, 아래와 같은 형태로도 시간을 연산 할 수도 있다. 이런 방법으로도 시간을 연산할수 있다는 것을 알아둔다면 좋을 것 같다. Usually, time is calculated as above, but time may also be calculated in the following form. It would be nice to know that time can be calculated in this way as well. WITH temptable AS ( SELECT TO_DATE('2019-08-21 08:00:00', 'yyyy-mm-dd hh24:mi:ss') CURTIME FROM DUAL ) SELECT CURTIME ,CURTIME + 5/24 hour --5시간 더하기 ,CURTIME + 5/(24*60) min --5분 더하기 ,CURTIME + 5/(24*60*60) sec --5초 더하기 FROM temptable; . | CURTIME | HOUR | MIN | SEC | . | 2019-08-21 08:00:00.000 | 2019-08-21 13:00:00.000 | 2019-08-21 08:05:00.000 | 2019-08-21 08:00:05.000 | . --INTERVAL 활용 WITH temptable AS ( SELECT TO_DATE('2019-08-21 08:00:00', 'yyyy-mm-dd hh24:mi:ss') CURTIME FROM DUAL ) SELECT CURTIME ,CURTIME + (INTERVAL '5' hour) hour2 --5시간 더하기 ,CURTIME + (INTERVAL '5' minute) min2 --5분 더하기 ,CURTIME + (INTERVAL '5' second) sec2 --5초 더하기 FROM temptable; . | CURTIME | HOUR2 | MIN2 | SEC2 | . | 2019-08-21 08:00:00.000 | 2019-08-21 13:00:00.000 | 2019-08-21 08:05:00.000 | 2019-08-21 08:00:05.000 | . ",
    "url": "/docs/5.Oracle/DML/1-2.Date/",
    
    "relUrl": "/docs/5.Oracle/DML/1-2.Date/"
  },"41": {
    "doc": "DATE",
    "title": "DATE",
    "content": "작성일자 : 2023-07-04 수정일자 : 2023-07-23 ",
    "url": "/docs/5.Oracle/DML/1-2.Date/",
    
    "relUrl": "/docs/5.Oracle/DML/1-2.Date/"
  },"42": {
    "doc": "JOIN",
    "title": "1. Join ",
    "content": "Ver 0.1.4 . | 1.Join . | 1-1.필요성 | 1-2.중복 제거 | 1-3.비등가 조인 | 1-4.순환 관계 데이터 모델 (계층형 모델) | 1-5.Inner Join | 1-6.Outer Join | 1-7.Cross Join | 1-8.ANSI 표준 조인(ANSI Standard Join) | . | 2.MULTIPLE JOIN | 3.JOIN 실습 | . 1-1. 필요성 . 관계형 데이터베이스의 구조적 특징으로 정규화를 수행하면 의미있는 데이터 집합으로 다수개의 테이블들이 구성되고 각 테이블끼리는 PK와 FK 값 들끼리 관계를 갖게 된다. 정규화를 통해 데이터베이스는 저장 공간의 효율성과 확장성이 향상된다. 이 과정에서 서로 관계가 있는 데이터가 여러 테이블로 나뉘어 저장되므로 각 테이블에 저장된 데이터를 효과적으로 검색하기 위해 Join이 필요하다. 조인은 두 테이블 간에 특정 컬럼(들)의 값을 비교하여, 비교 결과가 TRUE인 행들을 연결시킨다.FROM 절에는 조인할 테이블들을 콤마(,)로 구분하여 기술하고, WHERE 절에는 조인 조건(양쪽 테이블 컬럼들간의 비교 조건) 및 일반 조건을 함께 기술한다. 1-1. Necessity . When normalization is performed with the structural features of relational databases, multiple tables are composed of a meaningful dataset, and each table has a relationship between PK and FK values. Through normalization, databases improve storage efficiency and scalability. In this process, data related to each other is divided into several tables and stored, so a join is needed to effectively search for data stored in each table. The join compares the values of a specific column(s) between the two tables, connecting rows whose comparison result is TRUE.The FROM clause describes the tables to be joined by a comma (,) and the WHERE clause describes the joining conditions (comparative conditions between both table columns) and general conditions. SELECT A.col, B.col, ... FROM Table A, Table B, ... WHERE Join Condition AND General Condition; . 조인은 선행 집합의 조인 컬럼 값을 가지고, 후행 집합을 반복적으로 Lookup하면서 조인 조건이 TRUE가 되는 행을 서로 연결하여 결과 집합에 포함시킨다. 집합을 읽는 순서는 DBMS(옵티마이저)에 의해 정해진다. The join has the value of the join column of the preceding set, and repeatedly looks up the trailing set, linking the rows whose join condition is TRUE to each other and including them in the result set. The order in which the set is read is determined by the DBMS (optimizer). SELECT B.EMPNO ,B.ENAME ,B.JOB ,A.DEPTNO ,A.DNAME FROM DEPT A, EMP B WHERE B.DEPTNO = A.DEPTNO -- 조인 조건 AND A.DNAME = 'RESEARCH' -- 일반 조건 AND B.JOB IN ('CLECK','ANALYST') -- 일반 조건 ORDER BY B.SAL; . | EMPNO | ENAME | JOB | DEPTNO | DNAME | . | 7,902 | FORD | ANALYST | 20 | RESEARCH | . | 7,788 | SCOTT | ANALYST | 20 | RESEARCH | . SELECT B.EMPNO ,B.ENAME ,B.JOB ,A.DEPTNO ,A.DNAME FROM DEPT A, EMP B WHERE B.DEPTNO = A.DEPTNO -- 조인 조건 ORDER BY A.DEPTNO, TO_CHAR(B.HIREDATE, 'YYYY'); . | EMPNO | ENAME | JOB | DEPTNO | DNAME | . | 7,782 | CLARK | MANAGER | 10 | ACCOUNTING | . | 7,839 | KING | PRESIDENT | 10 | ACCOUNTING | . | 7,934 | MILLER | CLERK | 10 | ACCOUNTING | . | 7,369 | SMITH | CLERK | 20 | RESEARCH | . | 7,566 | JONES | MANAGER | 20 | RESEARCH | . | 7,902 | FORD | ANALYST | 20 | RESEARCH | . | 7,788 | SCOTT | ANALYST | 20 | RESEARCH | . | 7,876 | ADAMS | CLERK | 20 | RESEARCH | . | 7,698 | BLAKE | MANAGER | 30 | SALES | . | 7,900 | JAMES | CLERK | 30 | SALES | . | 7,499 | ALLEN | SALESMAN | 30 | SALES | . | 7,844 | TURNER | SALESMAN | 30 | SALES | . | 7,654 | MARTIN | SALESMAN | 30 | SALES | . | 7,521 | WARD | SALESMAN | 30 | SALES | . 1:M 관계에 있는 두 테이블을 조인하면, 1쪽 테이블의 행이 M쪽 테이블에 맞춰 늘어난다. When two tables in a 1:M relationship are joined, the rows of the one-sided table are stretched to match the M-side table. SELECT COUNT(B.EMPNO) AS CNT_EMP ,COUNT(A.DEPTNO) AS WRONG_CNT_DEPT ,COUNT(DISTINCT A.DEPTNO) AS CNT_DEPT FROM DEPT A, EMP B WHERE B.DEPTNO = A.DEPTNO; . | CNT_EMP | WRONG_CNT_DEPT | CNT_DEPT | . | 14 | 14 | 3 | . 1-2. 중복 제거(Deduplication) . IMPORTANT . | Way 1) SELECT DISTINCT SELECT DISTINCT -- DISTINCT를 추가 person.id ,person.name ,job.job_name FROM person INNER JOIN job ON person.name = job.person_name; . | . 매우 쉬운 방법이지만 레코드 수가 많은 경우 성능이 느림 . It’s a very easy way, but slow performance with a large number of records . | Way 2) JOIN 전에 중복 제거(Deduplication before JOIN) . | 성능을 위해서 JOIN 전에 중복을 제거하는 방법 | Remove Duplication before JOIN for performance improvement SELECT person.id ,person.name ,job.job_name FROM person INNER JOIN ( -- 중복 제거를 위한 inline view SELECT DISTINCT person_name ,job_name FROM job ) AS job ON person.name = job.person_name; . | . | . 1-3.비등가 조인 (&lt;&gt;, &lt;, BETWEEN, LIKE) . SELECT * FROM EMP A, SALGRADE B WHERE A.SAL BETWEEN B.LOSAL AND B.HISAL; . | EMPNO | ENAME | JOB | MGR | HIREDATE | SAL | COMM | DEPTNO | GRADE | LOSAL | HISAL | . | 7369 | SMITH | CLERK | 7902 | 1980-12-17 00:00:00.000 | 800 | [NULL] | 20 | 1 | 700 | 1200 | . | 7900 | JAMES | CLERK | 7698 | 1981-12-03 00:00:00.000 | 950 | [NULL] | 30 | 1 | 700 | 1200 | . | 7876 | ADAMS | CLERK | 7788 | 1987-05-23 00:00:00.000 | 1100 | [NULL] | 20 | 1 | 700 | 1200 | . | 7521 | WARD | SALESMAN | 7698 | 1981-02-22 00:00:00.000 1250 | 500 | 30 | 2 | 1201 | 1400 |   | . | 7654 | MARTIN | SALESMAN | 7698 | 1981-09-28 00:00:00.000 | 1250 | 1400 | 30 | 2 | 1201 | 1400 | . 1-4. 순환 관계 데이터 모델 (계층형 모델) . | 각 관리자는 여러 명의 사원을 관리 할 수 있다. | 각 사원은 한 명의 관리자를 가질 수 있다. | . SELECT B.EMPNO ,B.ENAME AS \"관리자\" ,A.EMPNO ,A.ENAME AS \"직원\" FROM EMP A -- 사원 ,EMP B -- 관리자 WHERE B.EMPNO = A.MGR; . | EMPNO | 관리자 | EMPNO | 직원 | . | 7566 | JONES | 7902 | FORD | . | 7566 | JONES | 7788 | SCOTT | . | 7698 | BLAKE | 7844 | TURNER | . | 7698 | BLAKE | 7499 | ALLEN | . | 7698 | BLAKE | 7521 | WARD | . | 7698 | BLAKE | 7900 | JAMES | . | 7698 | BLAKE | 7654 | MARTIN | . | 7782 | CLARK | 7934 | MILLER | . | 7788 | SCOTT | 7876 | ADAMS | . | 7839 | KING | 7698 | BLAKE | . | 7839 | KING | 7566 | JONES | . | 7839 | KING | 7782 | CLARK | . 1-5. Inner Join . | 조인에 성공한 행들만 리턴하는 조인 | Joins that return only rows that succeed in joining | . 1-6. Outer Join . | Inner Join의 결과와 조인에 실패한 기준 집합의 행들을 함께 리턴하는 조인 | 오라클에서는 조인 조건에 (+) 기호를 사용하여 기준 집합을 지정한다. | (+) 기호가 사용된 쪽의 반대쪽 집합이 기준 집합이 된다. | Join that returns the result of the Inner Join and the rows of the baseline set that failed the join | Oracle specifies a set of criteria using the (+) symbol for the join condition. | The opposite set of the side where the (+) symbol is used becomes the reference set. | . SELECT B.EMPNO ,B.ENAME ,B.JOB ,B.DEPTNO ,A.DEPTNO ,A.DNAME ,A.LOC FROM DEPT A, EMP B WHERE B.DEPTNO(+) = A.DEPTNO AND A.LOC IN ('NEW YORK','BOSTON'); . SELECT B.EMPNO ,B.ENAME ,B.JOB ,B.DEPTNO ,A.DEPTNO ,A.DNAME ,A.LOC FROM DEPT A, EMP B WHERE B.DEPTNO(+) = A.DEPTNO -- 2) A.DEPTNO를 기준으로 조인이 되고 없는 값들도 보여짐 AND B.DEPTNO(+) &lt;&gt; 20; -- 1) 20이 아닌 것들 먼저 거름 . SELECT B.EMPNO ,B.ENAME ,B.JOB ,B.DEPTNO ,A.DEPTNO ,A.DNAME ,A.LOC FROM DEPT A, EMP B WHERE B.DEPTNO(+) = A.DEPTNO AND B.DEPTNO &lt;&gt; 20; -- (+) 기호 누락 . 1-7. Cross Join . | 양쪽 집합의 카타시안 곱(M*N건)을 리턴하는 조인 | 양쪽 집합 간에 조인 조건이 없을 때 Cross Join이 수행된다. | Join that returns the Katashian product of both sets (M*N cases) | Cross join is performed when there is no join condition between both sets. | . SELECT B.EMPNO ,B.ENAME ,B.JOB ,B.DEPTNO ,A.DEPTNO ,A.DNAME ,A.LOC FROM DEPT A, EMP B WHERE A.LOC IN ('NEW YORK','BOSTON') -- 일반 조건 AND B.JOC IN ('ANALYST' , 'MANAGER', 'PRESIDENT'); -- 일반 조건 . 1-8. ANSI 표준 조인(ANSI Standard Join) . | 오라클을 포함한 대부분의 상용 DBMS는 ANSI(American National Standards Institue) 표준 문법을 지원한다. | ANSI 조인 문법은 조인 조건과 일반 조건을 구분하여 기술한다. | FROM 절에는 조인할 테이블과 조인 유형을 기술한다. | FON 절에는 조인 조건을, WHERE 절에는 일반 조건을 기술한다. | . | Most commercial DBMSs, including Oracle, support the American National Standards Institute (ANSI) standard grammar. | ANSI join grammar describes join conditions and general conditions separately. | The FROM section describes the table to join and the type of join. | Describe join conditions in FON clause and general conditions in WHERE clause. | . | . ON 절에 기술한 조건은 모두 조인 조건으로 동작한다. All conditions described in the ON section operate as join conditions. SELECT A.col, B.col, ... FROM Table A JOIN TYPE Table B ... -- JOIN (INNER JOIN), LEFT JOIN, RIGHT JOIN, FULL OUTER JOIN ON (JOIN Condition) WHERE General Condition; . WHERE 절에 비기준 집합에 대한 일반 조건을 기술하면 INNER JOIN이 수행된다. (ON 절 안에 일반 조건 넣어주면 FULL OUTER 수행 됨) . Describing general conditions for non-reference sets in the WHERE clause results in INNER JOIN. (If you put general conditions in the ON section, full out will be performed) . ",
    "url": "/docs/5.Oracle/DML/1-3.Join/",
    
    "relUrl": "/docs/5.Oracle/DML/1-3.Join/"
  },"43": {
    "doc": "JOIN",
    "title": "2.MULTIPLE JOIN ",
    "content": "INNER JOIN . ORACLE . SELECT ... FROM Table_X X, Table_Y Y, Table_Z Z WHERE X.COL_A = Y.COL_B AND Y.COL_C = Z.COL_D . ANSI 표준 . SELECT ... FROM Table_X X JOIN Table_Y Y ON X.COL_A = Y.COL_B JOIN Table_Z Z ON Y.COL_C = Z.COL_D . OUTER JOIN LEFT JOIN을 사용하여 중심이 되는 테이블의 모든 레코드를 출력하는 방식 . ORACLE . SELECT ... FROM Table_X X, Table_Y Y, Table_Z Z WHERE X.COL_A = Y.COL_B (+) AND Y.COL_C = Z.COL_D (+) . ANSI 표준 . SELECT ... FROM Table_X X LEFT JOIN Table_Y Y ON X.COL_A = Y.COL_B LEFT JOIN Table_Z Z ON Y.COL_C = Z.COL_D . 조회시 기준이 되는(모든 컬럼을 출력할) 테이블을 중심으로 LEFT JOIN 등으로 통일하면 혼동하지 않을 수 있음 . ",
    "url": "/docs/5.Oracle/DML/1-3.Join/",
    
    "relUrl": "/docs/5.Oracle/DML/1-3.Join/"
  },"44": {
    "doc": "JOIN",
    "title": "3.JOIN 실습 ",
    "content": "해당 실습은 클래스 101 강의 중 하나의 실습 문제를 적어둔 것입니다. Q1. 10번 부서에 속하는 모든 사원의 직무와 부서 위치를 표시하시요. SELECT A.JOB ,A.ENAME ,B.DNAME ,B.LOC FROM EMP A, DEPT B WHERE A.DEPTNO = 10 AND A.DEPTNO = B.DEPTNO; . Q2. “CHICAGO”에서 근무하는 모든 사원의 이름, 직무, 부서 번호 및 부서 이름을 표시하십시오. SELECT A.ENAME ,A.JOB ,A.DEPTNO ,B.DNAME FROM EMP A,DEPT B WHERE B.LOC = 'CHICAGO' AND A.DEPTNO = b.DEPTNO; . Q3. 각 사원의 이름 및 사원 번호를 해당 관리자의 이름 및 사원 번호와 함께 표시하고, 레이블을 순서대로 EMP_NM, EMP#, MGR_NM, MGR#로 지정하오. (단, 관리자가 없는 사원은 포함하지 않는다.) . SELECT A.ENAME AS EMP_NM ,A.EMPNO AS EMP# ,B.ENAME AS MGR_NM ,B.EMPNO AS MGR# FROM EMP A -- 사원 ,EMP B -- 관리자 WHERE A.MGR = B.EMPNO ; . Q4. 각 사원 이름 미 사원 번호를 해당 관리자의 이름 및 사원 번호와 함께 표시하고 레이블 순서대로 EMP_NM, EMP#, MGR_NM, MGR#로 지정하시오. (단, 관리자가 없는 사원도 포함하여 표시하고, 결과 집합은 사원 번호(EMP#)기준으로 정렬하시오. SELECT A.ENAME AS EMP_NM ,A.EMPNO AS EMP# ,B.ENAME AS MGR_NM ,B.EMPNO AS MGR# FROM EMP A -- 사원 ,EMP B -- 관리자 WHERE A.MGR = B.EMPNO(+) ORDER BY A.EMPNO; . Q5.”Marting”과 같은 부서의 사원을 표시하고, 레이블을 순서대로 ENAME, DEPTNO, ENAME_1로 지정하시오. SELECT A.ENAME AS ENAME ,B.DEPTNO AS DEPTNO ,B.ENAME AS ENAME_1 FROM EMP A -- MARTIN ,EMP B -- MARTIN 과 동일 부서 사원 WHERE A.EMPNO = '7654' AND A.DEPTNO = B.DEPTNO AND B.EMPNO &lt;&gt; A.EMPNO; -- OR B.ENAME &lt;&gt; 'MARTIN' . Q6.”CLARK” 사원보다 늦게 입사한 사원의 이름 입사 일자를 표시하시오. SELECT MAX(B.ENAME) AS ENAME ,MIN(B.HIREDATE) AS HIREDATE FROM EMP A -- CLARK ,EMP B -- CLARK 보다 늦게 입사한 사 WHERE A.ENAME = 'CLARK' AND A.HIREDATE &lt; B.HIREDATE AND B.ENAME &lt;&gt; 'CLARK' GROUP BY B.EMPNO; -- 동명이인이 있을경우를 위해 GROUP BY와, MIN, MAX 활용 . Self Join 실습 Q1. SELECT A.EMPNO ,A.ENAME ,A.MGR FROM emp A WHERE A.MGR IS NULL; . Q2. SELECT B.EMPNO ,B.ENAME ,A.EMPNO ,A.ENAME FROM EMP A, EMP B WHERE A.MGR IS NULL AND A.EMPNO = B.MGR; . Q3. SELECT C.EMPNO ,C.ENAME ,B.EMPNO ,B.ENAME ,A.EMPNO ,A.ENAME FROM EMP A --1번 사원 ,EMP B --2번 사원 / 1번 사원의 하위 사원 ,EMP C --3번 사원 / 2번 사원의 하위 사원 WHERE A.MGR IS NULL AND A.EMPNO = B.MGR AND B.EMPNO = C.MGR; . Q4. SELECT D.EMPNO ,D.ENAME ,C.EMPNO ,C.ENAME ,B.EMPNO ,B.ENAME ,A.EMPNO ,A.ENAME FROM EMP A --1번 사원 ,EMP B --2번 사원 / 1번 사원의 하위 사원 ,EMP C --3번 사원 / 2번 사원의 하위 사원 ,EMP D --4번 사원 / 3번 사원의 하위 사원 WHERE A.MGR IS NULL AND A.EMPNO = B.MGR(+) AND B.EMPNO = C.MGR(+) AND C.EMPNO = D.MGR(+); . ",
    "url": "/docs/5.Oracle/DML/1-3.Join/",
    
    "relUrl": "/docs/5.Oracle/DML/1-3.Join/"
  },"45": {
    "doc": "JOIN",
    "title": "JOIN",
    "content": "작성일자 : 2023-07-05 수정일자 : 2023-08-06 ",
    "url": "/docs/5.Oracle/DML/1-3.Join/",
    
    "relUrl": "/docs/5.Oracle/DML/1-3.Join/"
  },"46": {
    "doc": "SUB QUERY",
    "title": "서브쿼리(Sub-Query)",
    "content": "Ver 0.1.1 . | 1. 스칼라 서브쿼리 | 2. 인라인 뷰 | 3. 중첩 서브쿼리 | . 1. 스칼라 서브쿼리 . | SELECT 절에 사용되며 단일 값을 리턴하는 서브쿼리 . | 메인 쿼리 집합의 각 행마다 실행되어 단일 값(1row, 1column)을 리턴하는 상관 서브쿼리 | 메인 쿼리 집합의 결과 건수는 스칼라 서브쿼리에 의해 변경되지 않는다. | 서브 쿼리의 결과가 단일 행값이 아니면 에러가 발생한다. (2개 이상인 경우 집계 함수를 사용하여 집계 값을 구한다) | 열이 2개 이상인 경우, 각각의 스칼라 서브 쿼리로 나눠 사용한다. | 스칼라 서브 쿼리를 과다하게 남용하면 성능이 느려짐 | . | . SELECT a.empno , a.ename , a.deptno , (SELECT dd.dname FROM dept dd WHERE dd.deptno = a.deptno) AS dept_name --DNAME이 EMP 테이블에 없어서 DEPT 테이블에서 조회 FROM emp a WHERE a.sal &gt;= 3000; . | EMPNO | ENAME | DEPNO | DEPT_NAME | . | 7788 | SCOTT | 20 | RESEARCH | . | 7839 | KING | 10 | ACCOUNTING | . | 7902 | FORD | 20 | RESEARCH | . SELECT a.empno , a.ename , a.job , a.sal , (SELECT ROUND(AVG(aa.sal)) FROM emp aa WHERE aa.job = a.job) AS avg_sal , a.sal - (SELECT ROUND(AVG(aa.sal)) FROM emp aa WHERE aa.job = a.job) AS avg_sal_diff -- 자신의 연봉에서 해당 직군의 평균 연봉과 차이를 계산하는 쿼리 FROM emp a WHERE a.deptno = 20 ORDER BY a.job, a.empno; . | EMPNO | ENAME | JOB | SAL | AVG_SAL | AVG_SAL_DIFF | . | 7788 | SCOTT | ANALYST | 3000 | 3000 | 0 | . | 7902 | FORD | ANALYST | 3000 | 3000 | 0 | . | 7369 | SMITH | CLERK | 800 | 1038 | -238 | . | 7876 | ADAMS | CLERK | 1100 | 1038 | 62 | . | 7566 | JONES | MANAGER | 2975 | 2758 | 217 | . SELECT a.deptno , a.dname , CASE WHEN a.deptno IN (SELECT DISTINCT aa.deptno FROM emp aa WHERE aa.job = 'MANAGER') THEN 'Y' END AS manager_yn FROM dept a; . | DEPTNO | DNAME | MANAGER_YN | . | 10 | ACCOUNTING | Y | . | 20 | RESEARCH | Y | . | 30 | SALES | Y | . | 40 | OPERATIONS | NULL | . 2. 인라인 뷰 . | FROM 절에서 조회 대상 집합으로 사용되는 서브 쿼리이다. | . SELECT a.empno , a.ename , a.job , b.mgr_name , b.mgr_dept FROM emp a INNER JOIN (SELECT a.empno AS mgr_no , a.ename AS mgr_name , b.dname AS mgr_dept FROM emp a , dept b WHERE a.deptno = b.deptno) b ON (a.mgr = b.mgr_no) WHERE a.deptno = 10; . | EMPNO | ENAME | JOB | MGR_NAME | MGR_DEPT | . | 7934 | MILLER | CLERK | CLARK | ACCOUNTING | . | 7782 | CLARK | MANAGER | KING | ACCOUNTING | . VIEW . | 쿼리를 데이터 베이스에 저장하여 테이블 처럼 사용할 수 있는 오브젝트이다. CREATE OR REPLACE VIEW VIE_DEPT_SUM AS ... WITH 절 . | 서브 쿼리에 이름을 할당하고, 메인 쿼리에서 참조할 수 있다. | . 3. 중첩 서브쿼리 . | 비상관 서브 쿼리(Uncorrelated Subquery) . | 메인 쿼리의 컬럼을 참조하지 않는 서브쿼리이다. | 메인 쿼리의 각 행을 평가할 때 서브 쿼리의 결과가 달라지지 않는다. | 단일 행 비상관 서브 쿼리 . | 서브쿼리가 단일 행을 리턴하는 비상관 쿼리이다. (2건 이상이면 오류 발생) | 단일 값 비교 조건 (=,&lt;,&gt;,&lt;=,&gt;=,&lt;&gt; 등) 과 함께 사용 | . | 다중 행 비상관 서브 쿼리 . | 서브쿼리가 다중 행을 리턴하는 비상관 쿼리이다. | 다중 값 비교 조건인 IN 조건 또는 SOME/ANY(ANY를 SOME보다 많이 사용, MIN으로 대체 가능), ALL(MAX로 대채 가능) 조건 등과 함께 사용된다. | EXIST 조건과 상관 서브쿼리로 재작성할 수 있다. | NOT IN 조건과 서브 쿼리를 사용할 때 서브쿼리의 결과에 NULL이 포함된 경우, 결과 집합이 공집합 (0)건이 될 수 있으므로 주의해야한다. | . | . | . | . | . SELECT a.empno , a.ename , a.deptno , b.dname FROM emp a INNER JOIN dept b ON (a.deptno = b.deptno) WHERE a.job = 'CLERK' AND a.deptno IN (SELECT DISTINCT aa.deptno FROM emp aa WHERE aa.job = 'MANAGER') ORDER BY a.deptno; . | EMPNO | ENAME | DEPTNO | DNAME | . | 7934 | MILLER | 10 | ACCOUNTING | . | 7369 | SMITH | 20 | RESEARCH | . | 7876 | ADAMS | 20 | RESEARCH | . | 7900 | JAMES | 30 | SALES | . | 상관 서브쿼리(Correlated Subquery) . | 상관 서브쿼리는 메인 쿼리의 칼럼을 참조하여 수행되는 서브쿼리이다. | 메인 쿼리의 각 행을 평가할 때마다 서브 쿼리의 결과가 달라질 수 있다. | EXIST 조건과 상관 서브쿼리 (NOT EXIST는 반대 로직) . | EXIST 조건은 각 행마다 수행된 서브 쿼리의 결과가 1건 이상이면 TRUE로 평가된다. | 서브 쿼리에서 조건을 만족하는 행이 1건만 리턴되면 서브쿼리 실행을 멈추고 TRUE를 리턴한다. | . | . | . SELECT a.empno , a.ename , a.deptno , b.dname FROM emp a INNER JOIN dept b ON (a.deptno = b.deptno) WHERE a.job = 'CLERK' AND EXISTS (SELECT 1 FROM emp aa WHERE aa.job = 'MANAGER' AND aa.deptno = a.deptno) ORDER BY a.deptno; . | EMPNO | ENAME | DEPTNO | DNAME | . | 7934 | MILLER | 10 | ACCOUNTING | . | 7369 | SMITH | 20 | RESEARCH | . | 7876 | ADAMS | 20 | RESEARCH | . | 7900 | JAMES | 30 | SALES | . SELECT a.empno , a.ename , a.job , a.sal FROM emp a WHERE a.job IN ('MANAGER', 'SALESMAN') AND a.sal &gt;= (SELECT ROUND(AVG(aa.sal)) FROM emp aa WHERE aa.job = a.job) ORDER BY a.job, a.empno; . | EMPNO | ENAME | DEPTNO | DNAME | . | 7566 | JONES | MANAGER | 2975 | . | 7698 | BLAKE | MANAGER | 2850 | . | 7499 | ALLEN | SALESMAN | 1600 | . | 7844 | TURNER | SALESMAN | 1500 | . ",
    "url": "/docs/5.Oracle/DML/1-4.Sub_Query/#%EC%84%9C%EB%B8%8C%EC%BF%BC%EB%A6%ACsub-query",
    
    "relUrl": "/docs/5.Oracle/DML/1-4.Sub_Query/#서브쿼리sub-query"
  },"47": {
    "doc": "SUB QUERY",
    "title": "SUB QUERY",
    "content": "작성일자 : 2023-07-08 ",
    "url": "/docs/5.Oracle/DML/1-4.Sub_Query/",
    
    "relUrl": "/docs/5.Oracle/DML/1-4.Sub_Query/"
  },"48": {
    "doc": "ROWNUM",
    "title": "ROWNUM",
    "content": "Ver 0.1.2 . | 1. ROWNUM . | 1-1. ROWNUM | 1-2. TOP N | . | 2. ROW_NUMBER() | . 1-1. ROWNUM . Oracle의 ROWNUM은 칼럼과 비슷한 성격의 Pseudo Column으로써 SQL 처리 결과 집합의 각 행에 대해 임시로 부여되는 일련번호이며, 원하는 만큼의 행만 가져오고 싶을 때 WHERE 절에서 행의 개수를 제한하는 목적으로 사용한다. WHERE 절에 ROWNUM 조건을 사용하면 조회되는 행의 개수를 제한할 수 있다. | ROWNUM = 1이나 ROWNUM &gt;=1 등은 결과가 출력되긴 하지만 사용을 권장하지는 않는다. (ROWNUM &lt;= 1 사용 권장) | . Oracle’s ROWNUM is a column-like Pseudo Column, a temporary serial number given to each row in the SQL processing result set, and is used to limit the number of rows in the WHERE clause when you want to import only as many rows as you want. The ROWNUM condition in the WHERE clause can be used to limit the number of rows that are queried. | ROWNUM = 1 or ROWNUM &gt;=1 are output, but are not recommended for use. (Recommended using ROWNUM &lt;= 1) | . SELECT ROWNUM ,e.EMPNO ,e.ENAME ,e.JOB ,e.DEPTNO FROM EMP e WHERE e.JOB IN ('ANALYST','CLERK'); . | ROWNUM | EMPNO | ENAME | JOB | DEPTNO | . | 1 | 7369 | SMITH | CLERK | 20 | . | 2 | 7788 | SCOTT | ANALYST | 20 | . | 3 | 7876 | ADAMS | CLERK | 20 | . | 4 | 7900 | JAMES | CLERK | 30 | . | 5 | 7902 | FORD | ANALYST | 20 | . | 6 | 7934 | MILLER | CLERK | 10 | . SELECT ROWNUM ,e.EMPNO ,e.ENAME ,e.JOB ,e.DEPTNO FROM EMP e WHERE e.DEPTNO = 20; . | ROWNUM | EMPNO | ENAME | JOB | DEPTNO | . | 1 | 7369 | SMITH | CLERK | 20 | . | 2 | 7566 | JONES | MANAGER | 20 | . | 3 | 7788 | SCOTT | ANALYST | 20 | . | 4 | 7876 | ADAMS | CLERK | 20 | . | 5 | 7902 | FORD | ANALYST | 20 | . SELECT ROWNUM ,e.EMPNO ,e.ENAME FROM EMP e WHERE ROWNUM &lt;= 5; . | ROWNUM | EMPNO | ENAME | . | 1 | 7369 | SMITH | . | 2 | 7499 | ALLEN | . | 3 | 7521 | WARD | . | 4 | 7566 | JONES | . | 5 | 7654 | MARTIN | . 인라인 뷰 내에서 ROWNUM 값에 칼럼 별칭을 지정하면 마치 칼럼처럼 사용이 가능하다 . If specify a column alias for the ROWNUM value within an inline view, it can be used as if it were a column . SELECT e.RN ,e.EMPNO ,e.ENAME FROM ( SELECT ROWNUM AS RN ,e.EMPNO ,e.ENAME FROM EMP e ) e WHERE e.RN &gt; 5; . | RN | EMPNO | ENAME | . | 6 | 7698 | BLAKE | . | 7 | 7782 | CLARK | . | 8 | 7788 | SCOTT | . | 9 | 7839 | KING | . | 10 | 7844 | TURNER | . | 11 | 7876 | ADAMS | . | 12 | 7900 | JAMES | . | 13 | 7902 | FORD | . | 14 | 7934 | MILLER | . 오라클은 정렬이 완료된 후 데이터를 출력하는게 아니라, 데이터 일부를 추출한 후에 정렬작업이 일어난다. Oracle does not output data after sorting is completed, but the sorting operation occurs after extracting some of the data. 틀린쿼리(Wrong) . SELECT ROWNUM ,ENAME ,SAL FROM EMP WHERE ROWNUM &lt; 4 -- 1 ORDER BY SAL DESC ; -- 2 . | ROWNUM | ENAME | SAL | . | 2 | ALLEN | 1600 | . | 3 | WARD | 1250 | . | 1 | SMITH | 800 | . 올바른 쿼리(Correct) . SELECT ROWNUM ,ENAME ,SAL FROM ( SELECT ENAME ,SAL FROM EMP ORDER BY SAL DESC ) -- 인라인 뷰를 이용해서 데이터셋을 구성해줘야 한다. WHERE ROWNUM &lt; 4 ; . | ROWNUM | ENAME | SAL | . | 1 | KING | 5000 | . | 2 | SCOTT | 3000 | . | 3 | FORD | 3000 | . 평균 급여가 높은 순으로 3개 직무 3 jobs in the order of average salary . SELECT rownum ,a.job ,a.cnt_emp ,a.avg_sal FROM ( SELECT a.job ,count(a.empno) AS cnt_emp ,round(avg(a.sal), 1) AS avg_sal FROM emp a GROUP BY a.job ORDER BY avg(a.sal) DESC) a WHERE ROWNUM &lt;= 3; . | ROWNUM | JOB | CNT_EMP | AVT_SAL | . | 1 | PRESIDENT | 1 | 5000 | . | 2 | ANALYST | 2 | 3000 | . | 3 | MANAGER | 3 | 2758.3 | . 1-2. TOP N . 특정 기준으로 상위 N개를 추출하는 쿼리를 TOP-N쿼리라고 한다. TOP 절 SQL Server는 TOP 절을 사용하여 결과 집합으로 출력되는 행의 수를 제한할 수 있다. TOP 절의 표현식은 다음과 같다. A query that extracts the TOP N on a specific basis is called a TOP-N query. TOP clause SQL Server can use TOP clauses to limit the number of rows output to the result set. The expressions in the TOP section are as follows. TOP (N) [PERCENT] [WITH TIES] . | TOP N : 검색건수를 N개로 제한(Limit the number of searches to N) | . 월급 상위 5명의 직원정보 조회 Employee information of the top 5 salaries . SELECT TOP 5 * FROM EMP ORDER BY SAL DESC; . | TOP N PERSENT : 검색건수를 N%로 제한(Limit the number of searches to N%) | . 월급 상위 5%인 직원정보 조회 Employee information of the top 5% salaries . SELECT TOP 5 PERSENT * FROM EMP ORDER BY SAL DESC; . | TOP N WITH TIES : 하한선의 동일한 값을 모두 조회(Query all equal values of lower bound) | . 가령, SAL 컬럼 값이 5000, 4000, 3000, 3000, 3000, 3000, 3000, 1000, 500 이 테이블에 입력되어있을 경우 . 월급 상위 3명을 동일한 하한선의 직원정보들까지 조회 . For example, if the SAL column values are 5000, 4000, 3000, 3000, 3000, 3000, 3000, 1000, and 500 in the table . Check the top 3 salaries up to employee information at the same lower limit . SELECT TOP 3 WITH TIES * FROM EMP ORDER BY SAL DESC; . 3명만 조회한다고 설정하였지만 하한선의 동일한 값을 모두 출력한다 결과 : 5000, 4000, 3000, 3000, 3000, 3000, 3000 총 6개의 결과가 검색되었다. (3번째로 높은값인 3000이 4개 포함됨) . It is set to inquire only three people, but all the same values of the lower limit are output Results: 5000, 4000, 3000, 3000, 3000, 3000, 3000, 3000, 3000 A total of six results were searched. (Includes 4 of the 3rd highest value 3000) . 2. ROW_NUMBER() . ORDER BY 된 결과에 순번을 매길때에는 ROWNUM 보다 ROW_NUMBER() 함수가 더 편하다. When ordering ORDER BY results, the ROW_NUMBER() function is more convenient than ROWNUM. SELECT ROW_NUMBER() OVER(ORDER BY a.job, a.ename) ROW_NUMBER ,a.EMPNO ,a.ENAME ,a.JOB FROM emp a ORDER BY a.job, a.ename; . | ROWNUM | JOB | CNT_EMP | AVT_SAL | . | 1 | 7902 | FORD | ANALYST | . | 2 | 7788 | SCOTT | ANALYST | . | 3 | 7876 | ADAMS | CLERK | . | 4 | 7900 | JAMES | CLERK | . | 5 | 7934 | MILLER | CLERK | . | 6 | 7369 | SMITH | CLERK | . | 7 | 7698 | BLAKE | MANAGER | . | 8 | 7782 | CLARK | MANAGER | . | 9 | 7566 | JONES | MANAGER | . | 10 | 7839 | KING | PRESIDENT | . | 11 | 7499 | ALLEN | SALESMAN | . | 12 | 7654 | MARTIN | SALESMAN | . | 13 | 7844 | TURNER | SALESMAN | . | 14 | 7521 | WARD | SALESMAN | . 그룹별(PARTITION) 로 순번을 따로 부여할 수 있다. Order can be assigned separately by group (PARTITION). SELECT ROW_NUMBER() OVER(PARTITION BY a.job ORDER BY a.job, a.ename) ROW_NUMBER ,a.EMPNO ,a.ENAME ,a.JOB FROM emp a ORDER BY a.job, a.ename; . | ROWNUM | JOB | CNT_EMP | AVT_SAL | . | 1 | 7902 | FORD | ANALYST | . | 2 | 7788 | SCOTT | ANALYST | . | 1 | 7876 | ADAMS | CLERK | . | 2 | 7900 | JAMES | CLERK | . | 3 | 7934 | MILLER | CLERK | . | 4 | 7369 | SMITH | CLERK | . | 1 | 7698 | BLAKE | MANAGER | . | 2 | 7782 | CLARK | MANAGER | . | 3 | 7566 | JONES | MANAGER | . | 1 | 7839 | KING | PRESIDENT | . | 1 | 7499 | ALLEN | SALESMAN | . | 2 | 7654 | MARTIN | SALESMAN | . | 3 | 7844 | TURNER | SALESMAN | . | 4 | 7521 | WARD | SALESMAN | . ",
    "url": "/docs/5.Oracle/DML/1-5.Index/#rownum",
    
    "relUrl": "/docs/5.Oracle/DML/1-5.Index/#rownum"
  },"49": {
    "doc": "ROWNUM",
    "title": "ROWNUM",
    "content": "작성일자 : 2023-07-09 수정일자 : 2023-07-23 ",
    "url": "/docs/5.Oracle/DML/1-5.Index/",
    
    "relUrl": "/docs/5.Oracle/DML/1-5.Index/"
  },"50": {
    "doc": "GROUP BY",
    "title": "GROUP BY",
    "content": "Ver 0.1.2 . | 1. 사용법 | 2. HAVING | 3. GROUPING | 4. ROLLUP | 5. CUBE | 6. 확장 | . 1. 사용법 . 오라클 SQL에서 GROUP BY 절을 사용하여 그룹별 건수나 합계 등의 집계 값들을 얻을 수 있다. 그룹별 집계된 결과 중 원하는 조건의 결과만 필터링하기 위해서는 HAVING절을 사용하여 필터 조건을 사용할 수 있다. Syntax . SELECT COL1, COL2 FROM TABLE WHERE CONDITION GROUP BY COL1, COL2, ... GROUP BY 절은 GROUPING 컬럼/표현식들의 값이 같은 행들로 행 그룹(group of rows)을 생성하고, 각 행 그룹당 1개의 행으로 그룹화(Group)한다. | ex) JOB 컬럼 값이 ‘CLERK’인 4개의 행들로 행 그룹이 생성되고, 이는 최종적으로 1개의 행으로 그룹화 되어 조회된다. | . SELECT 문에 GROUP BY 절이 포함되었을 때, Grouping 컬럼/표현식 외에 다른 컬럼을 SELECT 절에 기술하면 오류가 발생한다. SELECT A.JOB ,A.DEPTNO ,A.SAL -- GROUP BY 절에 기술되지 않은 컬럼 FROM EMP A WHERE A.DEPTNO IN (10,30) GROUP BY A.JOB ,A.DEPTNO . [결과] ORA-00979: GROUP BY 표현식이 아닙니다 . 집계 함수(Aggregate Functions) . | 집계 함수는 다중행(행 그룹)의 값을 입력 받아 단일 행의 값을 리턴하는 함수이다. | . | 집계함수 | 용도 | . | max | 최대값 | . | min | 최소값 | . | median | 중앙값 | . | sum | 합계 | . | avg | 평균 | . | variance | 분산 | . | stddev | 표준편차 | . | count | 관측값(row) 수 | . | 집계함수를 사용하면 행 그룹별로 NULL을 제외한 값들이 집계된다. | 행 그룹 내 모든 행의 값이 NULL이면, 집계 함수의 결과 값도 NULL이다. (단, COUNT 함수는 0) | NULL 포함 컬럼 집계 예시 SELECT A.DEPTNO ,COUNT(A.COMM) AS CNT_COMM ,SUM(A.COMM) AS SUM_COMM ,AVG(A.COMM) AS AVG_COMM FROM EMP A GROUP BY A.DEPTNO; . | . | . | DEPTNO | CNT_COMM | SUM_COMM | AVG_COMM | . | 30 | 4 | 2200 | 550 | . | 20 | 0 |   |   | . | 10 | 0 |   |   | . | 집계 함수의 인자에 연산이나 가공이 존재하면, 이는 집계 함수 실행 전에 행 그룹 내에 있는 개별 행 단위로 수행된다. | . SELECT A.DEPTNO ,COUNT(NVL(A.COMM,0)) AS CNT_COMM ,SUM(NVL(A.COMM,0)) AS SUM_COMM ,AVG(NVL(A.COMM,0)) AS AVG_COMM FROM EMP A GROUP BY A.DEPTNO; . | DEPTNO | CNT_COMM | SUM_COMM | AVG_COMM | . | 30 | 4 | 2200 | 366.6666667 | . | 20 | 0 | 0 | 0 | . | 10 | 0 | 0 | 0 | . | GROUP BY 절 없이 SELECT 절에 집계 함수가 사용되면,전체 행이 하나의 행 그룹이 된다. | GROUP BY 절에 Literal, NULL 또는 ()를 기술해도 동일한 결과가 나온다 | . | . SELECT COUNT(*) AS CNT ,SUM(A.SAL) AS SUM_SAL FROM EMP A; . | CNT | SUM_SAL | . | 14 | 29025 | . 2.HAVING . | HAVING 절을 사용하여 조회되는 행 그룹을 제한할 수 있다. | HAVING 절에는 행 그룹을 제한하기 위한 조건을 기술한다. | 조건은 각 행 그룹마다 평가되며, TRUE, FALSE, UNKNOWN 중 하나를 반환한다. | 조건의 결과가 TRUE인 행 그룹만 결과 집합에 포함된다. | . | . SELECT COL1 ,COL2 WHERE CONDITIONS GROUP BY COL1 ,COL2 HAVING CONDITION . SELECT JOB , COUNT(*) CNT , SUM(SAL) SAL FROM EMP WHERE DEPTNO IN ('10', '20', '30') GROUP BY JOB HAVING COUNT(*) &gt; 2 AND SUM(SAL) &gt; 5000; . | JOB | CNT | SAL | . | SALESMAN | 4 | 5,600 | . | MANAGER | 3 | 8,275 | . HAVING 절에 집계 함수 없이 조건을 기술하면 에러가 발생한다. SELECT JOB , COUNT(*) CNT , SUM(SAL) SAL FROM EMP WHERE DEPTNO IN ('10', '20', '30') GROUP BY JOB HAVING SAL BETWEEN 2000 AND 5000; . [결과] ORA-00979: GROUP BY 표현식이 아닙니다 . WHERE 절은 행 그룹이 생성되기 전에 조건에 따라 행을 제한 . HAVING 절은 행 그룹이 생성된 후에 조건에 따라 행 그룹을 제한 . | HAVING 절을 사용하여 중복 값 존재 여부를 확인(데이터 검증)할 수 있다. | . -- 중복 값 미존재 SELECT A.ENAME ,COUNT(*) AS CNT FROM EMP A GROUP BY A.ENAME HAVING COUNT(*) &gt; 1; . | ENAME | CNT | . |   |   | . -- 중복 값 존재 SELECT A.SAL ,COUNT(*) AS CNT FROM EMP A GROUP BY A.SAL HAVING COUNT(*) &gt; 1; . | SAL | CNT | . | 1250 | 2 | . | 3000 | 2 | . SELECT A.EMPNO ,A.ENAME ,A.SAL ,A.JOB FROM EMP A WHERE A.SAL = 1250; . | EMPNO | ENAME | SAL | JOB | . | 7521 | WARD | 1250 | SALESMAN | . | 7654 | MARTIN | 1250 | SALESMAN | . 3. GROUPING . 괄호 안에 명시된 집계 칼럼들 별로 여러 개의 개별적인 집계 그룹을 생성 . SELECT a.deptno ,job ,SUM(a.sal) AS SUM_SAL FROM emp a GROUP BY GROUPING SETS((a.deptno, a.job), a.job) ORDER BY a.deptno, a.job; . | DEPNO | JOB | SUM_SAL | . | 10 | CLERK | 1,300 | . | 10 | MANAGER | 2,450 | . | 10 | PRESIDENT | 5,000 | . | 20 | ANALYST | 6,000 | . | 20 | CLERK | 1,900 | . | 20 | MANAGER | 2,975 | . | 30 | CLERK | 950 | . | 30 | MANAGER | 2,850 | . | 30 | SALESMAN | 5,600 | . |   | ANALYST | 6,000 | . |   | CLERK | 4,150 | . |   | MANAGER | 8,275 | . |   | PRESIDENT | 5,000 | . |   | SALESMAN | 5,600 | . SELECT a.deptno ,SUM(a.sal) AS SUM_SAL FROM emp a GROUP BY GROUPING SETS(a.deptno, ()) -- () : 전체를 의미 ORDER BY a.deptno; . | DEPNO | SUM_SAL | . | 10 | 8,750 | . | 20 | 10,875 | . | 30 | 9,400 | . |   | 29,025 | . SELECT a.deptno ,a.job ,SUM(a.sal) AS SUM_SAL FROM emp a GROUP BY GROUPING SETS(a.deptno, a.job, ()) -- () : 전체를 의미 ORDER BY a.deptno, a.job; . | DEPNO | JOB | SUM_SAL | . | 10 |   | 8,750 | . | 20 |   | 10,875 | . | 30 |   | 9,400 | . |   | ANALYST | 6,000 | . |   | CLERK | 4,150 | . |   | MANAGER | 8,275 | . |   | PRESIDENT | 5,000 | . |   | SALESMAN | 5,600 | . |   |   | 29,025 | . SELECT a.deptno ,SUM(a.sal) AS SUM_SAL FROM emp a GROUP BY a.deptno, GROUPING SETS(a.job, ()) -- () : 전체를 의미 ORDER BY a.deptno, a.job; . | DEPNO | SUM_SAL | . | 10 | 1,300 | . | 10 | 2,450 | . | 10 | 5,000 | . | 10 | 8,750 | . | 20 | 6,000 | . | 20 | 1,900 | . | 20 | 2,975 | . | 20 | 10,875 | . | 30 | 950 | . | 30 | 2,850 | . | 30 | 5,600 | . | 30 | 9,400 | . 4. ROLLUP . 집계 단위가 많아질수록 GROUPING SETS()로 하는 거보다 조회 속도 더 빠름 . SELECT a.deptno ,a.job ,SUM(a.sal) AS SUM_SAL FROM emp a GROUP BY ROLLUP (a.deptno, a.job) -- N + 1 집계 그룹 결과 나옴 ORDER BY a.deptno, a.job; . | DEPNO | JOB | SUM_SAL | . | 10 | CLERK | 1,300 | . | 10 | MANAGER | 2,450 | . | 10 | PRESIDENT | 5,000 | . | 10 |   | 8,750 | . | 20 | ANALYST | 6,000 | . | 20 | CLERK | 1,900 | . | 20 | MANAGER | 2,975 | . | 20 |   | 1,0875 | . | 30 | CLERK | 950 | . | 30 | MANAGER | 2,850 | . | 30 | SALESMAN | 5,600 | . | 30 |   | 9,400 | . |   |   | 29,025 | . SELECT a.deptno ,a.job ,SUM(a.sal) AS SUM_SAL FROM emp a GROUP BY GROUPING SETS ( (a.deptno, a.job), a.deptno, () ) -- 위 쿼리와 같은 결과 ORDER BY a.deptno, a.job; . | DEPNO | JOB | SUM_SAL | . | 10 | CLERK | 1,300 | . | 10 | MANAGER | 2,450 | . | 10 | PRESIDENT | 5,000 | . | 10 |   | 8,750 | . | 20 | ANALYST | 6,000 | . | 20 | CLERK | 1,900 | . | 20 | MANAGER | 2,975 | . | 20 |   | 10,875 | . | 30 | CLERK | 950 | . | 30 | MANAGER | 2,850 | . | 30 | SALESMAN | 5,600 | . | 30 |   | 9,400 | . |   |   | 29,025 | . SELECT a.deptno ,a.job ,SUM(a.sal) AS SUM_SAL FROM emp a GROUP BY ROLLUP ((a.deptno, a.job)) ORDER BY a.deptno, a.job; . | DEPNO | JOB | SUM_SAL | . | 10 | CLERK | 1,300 | . | 10 | MANAGER | 2,450 | . | 10 | PRESIDENT | 5,000 | . | 20 | ANALYST | 6,000 | . | 20 | CLERK | 1,900 | . | 20 | MANAGER | 2,975 | . | 30 | CLERK | 950 | . | 30 | MANAGER | 2,850 | . | 30 | SALESMAN | 5,600 | . |   |   | 29,025 | . SELECT a.deptno ,a.job ,SUM(a.sal) AS SUM_SAL FROM emp a GROUP BY a.deptno, ROLLUP (a.job) ORDER BY a.deptno, a.job; . | DEPNO | JOB | SUM_SAL | . | 10 | CLERK | 1,300 | . | 10 | MANAGER | 2,450 | . | 10 | PRESIDENT | 5,000 | . | 10 |   | 8,750 | . | 20 | ANALYST | 6,000 | . | 20 | CLERK | 1,900 | . | 20 | MANAGER | 2,975 | . | 20 |   | 10,875 | . | 30 | CLERK | 950 | . | 30 | MANAGER | 2,850 | . | 30 | SALESMAN | 5,600 | . | 30 |   | 9,400 | . GROUPING SETS + ROLLUP 응용 . SELECT a.deptno ,a.job ,SUM(a.sal) AS SUM_SAL FROM emp a GROUP BY GROUPING SETS (a.deptno, ROLLUP(a.job)) ORDER BY a.deptno, a.job; . | DEPNO | JOB | SUM_SAL | . | 10 |   | 8,750 | . | 20 |   | 10,875 | . | 30 |   | 9,400 | . |   | ANALYST | 6,000 | . |   | CLERK | 4,150 | . |   | MANAGER | 8,275 | . |   | PRESIDENT | 5,000 | . |   | SALESMAN | 5,600 | . |   |   | 29,025 | . 5. CUBE . 괄호 안의 집계 컬럼들로 만들어지는 모든 경우의 수를 집계 기준으로 하여 집계 그룹 생성 (다차원 집계) . SELECT a.deptno ,a.job ,SUM(a.sal) AS SUM_SAL FROM emp a GROUP BY CUBE (a.deptno, a.job) -- 2^n 개수로 집계됨 ORDER BY a.deptno, a.job; . | DEPNO | JOB | SUM_SAL | . | 10 | CLERK | 1,300 | . | 10 | MANAGER | 2,450 | . | 10 | PRESIDENT | 5,000 | . | 10 |   | 8,750 | . | 20 | ANALYST | 6,000 | . | 20 | CLERK | 1,900 | . | 20 | MANAGER | 2,975 | . | 20 |   | 10,875 | . | 30 | CLERK | 9,50 | . | 30 | MANAGER | 2,850 | . | 30 | SALESMAN | 5,600 | . | 30 |   | 9,400 | . |   | ANALYST | 6,000 | . |   | CLERK | 4,150 | . |   | MANAGER | 8,275 | . |   | PRESIDENT | 5,000 | . |   | SALESMAN | 5,600 | . |   |   | 29,025 | . – . 6. 확장 . | GROUP BY 절의 확장 기능과 NULL GROUP BY 컬럼이 NOT NULL 인경우 SELECT NVL(a.job, 'Total') AS JOB ,COUNT(*) AS CNT_EMP FROM emp a GROUP BY ROLLUP (a.job) ORDER BY a.job; . | . | JOB | SUM_SAL | . | ANALYST | 2 | . | CLERK | 4 | . | MANAGER | 3 | . | PRESIDENT | 1 | . | SALESMAN | 4 | . | Total | 14 | . | GROUP BY 컬럼이 NULLABLE GROUPING(expr) : 집계 컬럼 값이염 0, 아니면(그룹화된 값이면) 1을 리턴 | . SELECT a.comm ,GROUPING(a.comm) AS GRP ,COUNT(*) AS CNT_EMP FROM emp a GROUP BY ROLLUP (a.comm) ORDER BY a.comm; . | COMM | GRP | CNT_EMP | . | 0 | 0 | 1 | . | 300 | 0 | 1 | . | 500 | 0 | 1 | . | 1,400 | 0 | 1 | . |   | 0 | 10 | . |   | 1 | 14 | . SELECT CASE WHEN GROUPING(a.comm) =1 THEN 'Total' ELSE TO_CHAR(a.comm) END AS COMM ,COUNT(*) AS CNT_EMP FROM emp a GROUP BY ROLLUP (a.comm) ORDER BY a.comm; . | COMM | CNT_EMP | . | 0 | 1 | . | 300 | 1 | . | 500 | 1 | . | 1,400 | 1 | . |   | 10 | . | Total | 14 | . | GROUPING_ID(expr [,edxpr, …]) : 인자 1개 - GROUPING 함수와 동일한 결과 리턴 / 인자 N개 - 각 인자의 GROUPING 함수 리턴값을 2진수화 한 후, 그에 대한 10진수 값을 리턴 | . SELECT b.dname ,GROUPING_ID(b.dname) AS GRP1 ,a.comm ,GROUPING_ID(a.comm) AS GRP2 ,GROUPING_ID(b.dname, a.comm) AS GRP_ID ,COUNT(*) AS CNT FROM emp a, dept b WHERE b.deptno = a.deptno GROUP BY CUBE (b.dname, a.comm) ORDER BY b.dname, a.comm; . | DNAME | GRP1 | COMM | GRP2 | GRP_ID | CNT | . | ACCOUNTING | 0 |   | 0 | 0 | 3 | . | ACCOUNTING | 0 |   | 1 | 1 | 3 | . | RESEARCH | 0 |   | 0 | 0 | 5 | . | RESEARCH | 0 |   | 1 | 1 | 5 | . | SALES | 0 | 0 | 0 | 0 | 1 | . | SALES | 0 | 300 | 0 | 0 | 1 | . | SALES | 0 | 500 | 0 | 0 | 1 | . | SALES | 0 | 1,400 | 0 | 0 | 1 | . | SALES | 0 |   | 0 | 0 | 2 | . | SALES | 0 |   | 1 | 1 | 6 | . |   | 1 | 0 | 0 | 2 | 1 | . |   | 1 | 300 | 0 | 2 | 1 | . |   | 1 | 500 | 0 | 2 | 1 | . |   | 1 | 1,400 | 0 | 2 | 1 | . |   | 1 |   | 0 | 2 | 10 | . |   | 1 |   | 1 | 3 | 14 | . SELECT CASE WHEN GROUPING_ID(b.dname, a.comm) == 2 THEN 'ALL DEPTS' WHEN GROUPING_ID(b.dname, a.comm) == 3 THEN 'TOTAL' ELSE b.deptno END AS DNAME ,CASE WHEN GROUPING_ID(b.dname, a.comm) == 1 THEN 'ALL DEPTS' WHEN GROUPING_ID(b.dname, a.comm) == 3 THEN 'TOTAL' ELSE TO_CHAR(a.comm) END AS COMM ,GROUPING_ID(b.dname. a.comm) AS GRP_ID ,COUNT(*) AS CNT FROM emp a, dept b WHERE b.deptno = a.deptno GROUP BY CUBE (b.dname, a.comm) ORDER BY b.dname, a.comm; . HAVING 절 조건에 GROUPING_ID 함수 사용 예시 (성능 좋음) . SELECT b.dname ,a.comm ,GROUPING_ID(b.dname, a.comm) AS GRP_ID ,COUNT(*) AS CNT FROM emp a, dept b WHERE b.deptno = a.deptno GROUP BY CUBE (b.dname, a.comm) HAVING GROUPING_ID(b.dname, a.comm) IN (1,2) ORDER BY b.dname, a.comm; . | DNAME | COMM | GRP_ID | CNT | . | ACCOUNTING |   | 1 | 3 | . | RESEARCH |   | 1 | 5 | . | SALES |   | 1 | 6 | . |   | 0 | 2 | 1 | . |   | 300 | 2 | 1 | . |   | 500 | 2 | 1 | . |   | 1400 | 2 | 1 | . |   |   | 2 | 10 | . 4.GROUP_ID() : 동일한 기준을 가진 집계 그룹에 대한 순번을 0부터 린턴 (1 이상이면 중복 집계 그룹이 존재) . SELECT b.dname ,a.job ,GROUP_ID() AS GRP_ID FROM emp a, dept b WHERE b.deptno = a.deptno GROUP BY b.dname ,a.job ,ROLLUP(b.dname, a.comm); . | DNAME | JOB | CNT | . | ACCOUNTING | MANAGER | 0 | . | ACCOUNTING | PRESIDENT | 0 | . | ACCOUNTING | CLERK | 0 | . | RESEARCH | MANAGER | 0 | . | RESEARCH | ANALYST | 0 | . | RESEARCH | CLERK | 0 | . | SALES | SALESMAN | 0 | . | SALES | SALESMAN | 0 | . | SALES | SALESMAN | 0 | . | SALES | CLERK | 0 | . | SALES | MANAGER | 0 | . | SALES | SALESMAN | 0 | . | ACCOUNTING | MANAGER | 0 | . | ACCOUNTING | PRESIDENT | 0 | . | ACCOUNTING | CLERK | 0 | . | RESEARCH | MANAGER | 0 | . | RESEARCH | CLERK | 0 | . | SALES | SALESMAN | 0 | . | SALES | CLERK | 0 | . | SALES | MANAGER | 0 | . | ACCOUNTING | MANAGER | 1 | . | ACCOUNTING | PRESIDENT | 1 | . | ACCOUNTING | CLERK | 1 | . | RESEARCH | MANAGER | 1 | . | RESEARCH | ANALYST | 1 | . | RESEARCH | CLERK | 1 | . | SALES | SALESMAN | 1 | . | SALES | CLERK | 1 | . | SALES | MANAGER | 1 | . SELECT b.dname ,a.job ,GROUP_ID() AS GRP_ID FROM emp a, dept b WHERE b.deptno = a.deptno GROUP BY b.dname ,a.job ,ROLLUP(b.dname, a.comm) HAVING GROUP_ID() = 0; . | DNAME | JOB | CNT | . | ACCOUNTING | MANAGER | 0 | . | ACCOUNTING | PRESIDENT | 0 | . | ACCOUNTING | CLERK | 0 | . | RESEARCH | MANAGER | 0 | . | RESEARCH | ANALYST | 0 | . | RESEARCH | CLERK | 0 | . | SALES | SALESMAN | 0 | . | SALES | SALESMAN | 0 | . | SALES | SALESMAN | 0 | . | SALES | CLERK | 0 | . | SALES | MANAGER | 0 | . | SALES | SALESMAN | 0 | . | ACCOUNTING | MANAGER | 0 | . | ACCOUNTING | PRESIDENT | 0 | . | ACCOUNTING | CLERK | 0 | . | RESEARCH | MANAGER | 0 | . | RESEARCH | CLERK | 0 | . | SALES | SALESMAN | 0 | . | SALES | CLERK | 0 | . | SALES | MANAGER | 0 | . SELECT b.dname ,a.job ,GROUP_ID() AS GRP_ID FROM emp a, dept b WHERE b.deptno = a.deptno GROUP BY b.dname ,a.job ,ROLLUP (a.comm); . 위 쿼리와 같은 결과, BUT 성능은 더 좋음 (이유 : 다 만들어 놓고 HAVING 절로 거르는 거 보다 생성 자체를 적게 하는 것이 쿼리 성능에 더 좋음) . | DNAME | JOB | CNT | . | ACCOUNTING | MANAGER | 0 | . | ACCOUNTING | PRESIDENT | 0 | . | ACCOUNTING | CLERK | 0 | . | RESEARCH | MANAGER | 0 | . | RESEARCH | ANALYST | 0 | . | RESEARCH | CLERK | 0 | . | SALES | SALESMAN | 0 | . | SALES | SALESMAN | 0 | . | SALES | SALESMAN | 0 | . | SALES | CLERK | 0 | . | SALES | MANAGER | 0 | . | SALES | SALESMAN | 0 | . | ACCOUNTING | MANAGER | 0 | . | ACCOUNTING | PRESIDENT | 0 | . | ACCOUNTING | CLERK | 0 | . | RESEARCH | MANAGER | 0 | . | RESEARCH | CLERK | 0 | . | SALES | SALESMAN | 0 | . | SALES | CLERK | 0 | . | SALES | MANAGER | 0 | . ",
    "url": "/docs/5.Oracle/DML/1-6.GROUP_BY/#group-by",
    
    "relUrl": "/docs/5.Oracle/DML/1-6.GROUP_BY/#group-by"
  },"51": {
    "doc": "GROUP BY",
    "title": "GROUP BY",
    "content": "작성일자 : 2023-07-10 수정일자 : 2023-07-23 ",
    "url": "/docs/5.Oracle/DML/1-6.GROUP_BY/",
    
    "relUrl": "/docs/5.Oracle/DML/1-6.GROUP_BY/"
  },"52": {
    "doc": "PARTITION/WINDOW",
    "title": "Analytic Funcion",
    "content": "Ver 0.1.3 . | 1. 분석 함수(Analytic Function) | 2. PARTITION . | 2-1. PARTITION BY | 2-2. LAG / LEAD | . | 3. Window | . 1. 분석 함수(Analytic Function) . | 개별 행을 유지한 채 집계 값을 계산할 수 있는 함수이다. | 집계 함수 (Aggregate Functions)는 행 그룹 별로 값을 집계하고, 각 행 그룹을 단일 행 (1 row)으로 그룹화하여 리턴한다. 하지만 분석함수는 개별 행을 유지한 채로 값을 집계하기 때문에 원본 값과 집계 값을 함께 분석할 수 있다. | 분석 함수 실행시 대상이 되는 행의 범위를 윈도우(window)라고 하며, analytic_clause에 의해 각 행(current row) 별로 윈도우가 정의 된다. | . | 모든 join, where절, group by 절, having 절의 수행은 분석 함수 실행 전에 완료 된다. 따라서 분석함수는 select 절, order by 절 내에서만 사용할 수 있다. | . 2. PARTITION . 2-1. PARTITION BY . | PARTITION BY 절을 사용하여 GROUPO BY 절과 유사하게 논리적인 행의 그룹을 생성할 수 있으며, 각 행의 윈도우(실행 대상 행의 범위)는 파티션을 벗어날 수 없다. | . SELECT a.empno ,a.ename ,a.hiredate ,a.deptno ,a.sal ,SUM(a.sal) OVER (PARTITION BY a.deptno) AS SUM_SAL FROM emp a; . | EMPNO | ENAME | HIREDATE | DEPTNO | SAL | SUM_SAL | . | 7782 | CLARK | 1981-06-09 00:00:00.000 | 10 | 2450 | 8750 | . | 7839 | KING | 1981-11-17 00:00:00.000 | 10 | 5000 | 8750 | . | 7934 | MILLER | 1982-01-23 00:00:00.000 | 10 | 1300 | 8750 | . | 7566 | JONES | 1981-04-02 00:00:00.000 | 20 | 2975 | 10875 | . | 7902 | FORD | 1981-12-03 00:00:00.000 | 20 | 3000 | 10875 | . | 7876 | ADAMS | 1987-05-23 00:00:00.000 | 20 | 1100 | 10875 | . | 7369 | SMITH | 1980-12-17 00:00:00.000 | 20 | 800 | 10875 | . | 7788 | SCOTT | 1987-04-19 00:00:00.000 | 20 | 3000 | 10875 | . | 7521 | WARD | 1981-02-22 00:00:00.000 | 30 | 1250 | 9400 | . | 7844 | TURNER | 1981-09-08 00:00:00.000 | 30 | 1500 | 9400 | . | 7499 | ALLEN | 1981-02-20 00:00:00.000 | 30 | 1600 | 9400 | . | 7900 | JAMES | 1981-12-03 00:00:00.000 | 30 | 950 | 9400 | . | 7698 | BLAKE | 1981-05-01 00:00:00.000 | 30 | 2850 | 9400 | . | 7654 | MARTIN | 1981-09-28 00:00:00.000 | 30 | 1250 | 9400 | . | 분석 함수 활용 (다양한 집계 기준) . | PARTITION BY 절만 변경하면 여러 집계 기준의 집계 값을 한번에 추출할 수 있다. | . | . SELECT a.empno ,a.ename ,a.hiredate ,a.deptno ,a.sal ,SUM(a.sal) OVER (PARTITION BY a.deptno) AS DEPTNO_SUM_SAL ,SUM(a.sal) OVER (PARTITION BY a.job) AS JOB_SUM_SAL FROM emp a; . | EMPNO | ENAME | HIREDATE | DEPTNO | SAL | DEPTNO_SUM_SAL | JOB_SUM_SAL | . | 7782 | CLARK | 1981-06-09 00:00:00.000 | 10 | 2450 | 8750 | 4150 | . | 7839 | KING | 1981-11-17 00:00:00.000 | 10 | 5000 | 8750 | 5000 | . | 7934 | MILLER | 1982-01-23 00:00:00.000 | 10 | 1300 | 8750 | 8275 | . | 7566 | JONES | 1981-04-02 00:00:00.000 | 20 | 2975 | 10875 | 4150 | . | 7902 | FORD | 1981-12-03 00:00:00.000 | 20 | 3000 | 10875 | 6000 | . | 7876 | ADAMS | 1987-05-23 00:00:00.000 | 20 | 1100 | 10875 | 4150 | . | 7369 | SMITH | 1980-12-17 00:00:00.000 | 20 | 800 | 10875 | 6000 | . | 7788 | SCOTT | 1987-04-19 00:00:00.000 | 20 | 3000 | 10875 | 8275 | . | 7521 | WARD | 1981-02-22 00:00:00.000 | 30 | 1250 | 9400 | 5600 | . | 7844 | TURNER | 1981-09-08 00:00:00.000 | 30 | 1500 | 9400 | 5600 | . | 7499 | ALLEN | 1981-02-20 00:00:00.000 | 30 | 1600 | 9400 | 5600 | . | 7900 | JAMES | 1981-12-03 00:00:00.000 | 30 | 950 | 9400 | 5600 | . | 7698 | BLAKE | 1981-05-01 00:00:00.000 | 30 | 2850 | 9400 | 4150 | . | 7654 | MARTIN | 1981-09-28 00:00:00.000 | 30 | 1250 | 9400 | 8275 | . | 분석 함수 활용 (누적 집계) . | 파티션 내에서 ORDER BY 절에 기술한 순서대로 현재 행까지의 값을 누적 집계 할수 있다. | PARTITION BY 절이 생략되면 전체 행을 대상으로 누적 집계 값을 계산한다. (애매한 부분이 있음 - 동일 값 집계 X) | . | . | . SELECT a.empno ,a.ename ,a.hiredate ,a.deptno ,a.sal ,SUM(a.sal) OVER (PARTITION BY a.deptno ORDER BY a.sal) AS SUM_SAL FROM emp a; . 2-2. LAG / LEAD . 오라클에서 이전 행의 값을 찾거나 다음 행의 값을 찾기 위해서는 LAG, LEAD 함수를 사용하면 된다. LAG(expr [,offset] [,default]) OVER([partition_by_clause] order_by_clause) . - LEAD(expr [,offset] [,default]) OVER([partition_by_clause] order_by_clause) . | LAG 함수 : 이전 행의 값을 리턴 | LEAD 함수 : 다음 행의 값을 리턴 | expr : 대상 컬럼명 | offset : 값을 가져올 행의 위치 기본값은 1, 생략가능 | default : 값이 없을 경우 기본값, 생략가능 | partition_by_clause : 그룹 컬럼명, 생략가능 | order_by_clause : 정렬 컬럼명, 필수 | . 기본 사용법 . SELECT empno , ename , job , sal , LAG(empno) OVER(ORDER BY empno) AS empno_prev , LEAD(empno) OVER(ORDER BY empno) AS empno_next FROM emp WHERE job IN ('MANAGER', 'ANALYST', 'SALESMAN') . | EMPNO | ENAME | JOB | SAL | EMPNO_PREV | EMPNO_NEXT | . | 7499 | ALLEN | SALESMAN | 1600 |   | 7521 | . | 7521 | WARD | SALESMAN | 1250 | 7499 | 7566 | . | 7566 | JONES | MANAGER | 2975 | 7521 | 7654 | . | 7654 | MARTIN | SALESMAN | 1250 | 7566 | 7698 | . | 7698 | BLAKE | MANAGER | 2850 | 7654 | 7782 | . | 7782 | CLARK | MANAGER | 2450 | 7698 | 7788 | . | 7788 | SCOTT | ANALYST | 3000 | 7782 | 7844 | . | 7844 | TURNER | SALESMAN | 1500 | 7788 | 7902 | . | 7902 | FORD | ANALYST | 3000 | 7844 |   | . 현재 행 기준으로 두번째 이전 값을 표시 . SELECT empno , ename , job , sal , LAG(empno, 2) OVER(ORDER BY empno) AS empno_prev FROM emp WHERE job IN ('MANAGER', 'ANALYST', 'SALESMAN') . | EMPNO | ENAME | JOB | SAL | EMPNO_PREV | . | 7499 | ALLEN | SALESMAN | 1600 |   | . | 7521 | WARD | SALESMAN | 1250 |   | . | 7566 | JONES | MANAGER | 2975 | 7499 | . | 7654 | MARTIN | SALESMAN | 1250 | 7521 | . | 7698 | BLAKE | MANAGER | 2850 | 7666 | . | 7782 | CLARK | MANAGER | 2450 | 7654 | . | 7788 | SCOTT | ANALYST | 3000 | 7698 | . | 7844 | TURNER | SALESMAN | 1500 | 7782 | . | 7902 | FORD | ANALYST | 3000 | 7788 | . 가져올 행이 없는 경우 기본값(9999)를 가져온다. SELECT empno , ename , job , sal , LAG(empno, 2, 9999) OVER(ORDER BY empno) AS empno_prev FROM emp WHERE job IN ('MANAGER', 'ANALYST', 'SALESMAN') . |EMPNO|ENAME|JOB|SAL|EMPNO_PREV|—:|:—|:—|—:|—:|7499| ALLEN| SALESMAN| 1600| 9999|7521| WARD |SALESMAN| 1250| 9999|7566| JONES |MANAGER| 2975 |7499|7654| MARTIN| SALESMAN| 1250| 7521|7698| BLAKE |MANAGER| 2850| 7666|7782| CLARK |MANAGER| 2450| 7654|7788| SCOTT |ANALYST| 3000| 7698|7844| TURNER| SALESMAN| 1500| 7782|7902| FORD |ANALYST| 3000| 7788| . 3. Window . | 각 행마다 분석함수의 실행 대상이 되는 행의 범위(윈도우)를 세밀하게 지정한다. | 물리적인 행의 범위를 지정하거나 논리적인 값의 범위를 지정할 수 있다. | analytic_clause 내 order by 절의 컬럼 또는 표현식이 윈도우의 기준이 된다. | . | 각 행의 윈도우(실행 대상 행의 범위)는 파티션을 벗어날 수 없다. | Syntax : ROWS/RANGE BETWEEN start_point and end_point . | Start_point &amp; end_point : ROWS (시작행 / 종료행) / RANGE (값의 범위) | UNBOUNDED PRECEDING : 파티션의 첫 번째 행 / 파티션의 첫 번째 행의 값 | N PRECEDING : (파티션 내에서) 현재 행을 기준으로 이전 N번째 행 / 현재 행의 값 - N | CURRENT ROW : 현재 행 / 현재 행의 값 | N FOLLOWING : (파티션 내에서) 현재 행을 기준으로 이후 N번째 행 / 현재 행의 값 + N | UNBOUNDED FOLLOWING : 파티션의 마지막 행 / 파티션의 마지막 행의 값 | . | . UNBOUNDED PRECEDING : 파티션의 첫 번째 행 / CURRENT ROW : 현재 행 – 누적 집계 . SELECT a.empno ,a.ename ,a.hiredate ,a.deptno ,a.sal ,SUM(a.sal) OVER (PARTITION BY a.deptno ORDER BY a.sal --정렬 기준 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT_ROW) AS SUM_SAL FROM emp a; . N PRECEDING : (파티션 내에서) 현재 행을 기준으로 이전 N번째 행 / N FOLLOWING : (파티션 내에서) 현재 행을 기준으로 이후 N번째 행 . SELECT a.empno ,a.ename ,a.hiredate ,a.deptno ,a.sal ,SUM(a.sal) OVER (PARTITION BY a.deptno ORDER BY a.sal --정렬 기준 ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) AS SUM_SAL FROM emp a; . RANGE . SELECT a.empno ,a.ename ,a.hiredate ,a.deptno ,a.sal ,SUM(a.sal) OVER (PARTITION BY a.deptno ORDER BY a.sal --정렬 기준 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT_ROW) AS SUM_SAL FROM emp a; . ROWS / RANGE BETWEEN UNBOUNDED PRECEDING = ROWS / RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT_ROW (명시해주는 것이 좋음) . ",
    "url": "/docs/5.Oracle/DML/1-7.Analytic_Funcion/#analytic-funcion",
    
    "relUrl": "/docs/5.Oracle/DML/1-7.Analytic_Funcion/#analytic-funcion"
  },"53": {
    "doc": "PARTITION/WINDOW",
    "title": "PARTITION/WINDOW",
    "content": "작성일자 : 2023-07-12 수정일자 : 2023-07-23 ",
    "url": "/docs/5.Oracle/DML/1-7.Analytic_Funcion/",
    
    "relUrl": "/docs/5.Oracle/DML/1-7.Analytic_Funcion/"
  },"54": {
    "doc": "PIVOT/UNPIVOT",
    "title": "PIVOT/UNPIVOT",
    "content": "Ver 0.1.2 . | 1. PIVOT | 2. UNPIVOT | . 1. PIVOT . | Oracle 11g 버전부터 사용 가능 . | FROM 절과 WHERE 절 사이에 기술한다. | aggregate_funtion(arg)에는 PIVOT 결과로 출력할 값을 지정 | FOR 절에는 PIVOT 기준 컬럼을 지정 | IN 절에는 PIVOT 기준 컬럼의 값을 지정 | . | . | . Syntax . SELECT Col1, Col2, ... FROM Table/Inline View PIVOT (aggregate_funtsion(arg) [, aggregate_function(arg2),...] FOR Col1 [,Col2, ...] IN (Value1 [, Value2,...) ); . Example . SELECT * FROM (SELECT a.DEPTNO ,a.SAL FROM EMP a) a PIVOT (sum(a.SAL) FOR deptno IN (10 ,20 ,30) ); . | 10 | 20 | 30 | . | 8,750 | 10,875 | 9,400 | . 부분 집계를 활용한 PIVOT 기능 구현 . SELECT SUM(CASE WHEN a.deptno = 10 THEN a.sal END) AS D10_SUMSAL ,SUM(CASE WHEN a.deptno = 20 THEN a.sal END) AS D20_SUMSAL ,SUM(CASE WHEN a.deptno = 30 THEN a.sal END) AS D30_SUMSAL FROM emp a; . | D10_SUMSAL | D20_SUMSAL | D30_SUMSAL | . | 8,750 | 10,875 | 9,400 | . | PIVOT 절 내에서 참조하지 않은 컬럼들을 기준으로 행이 그룹화 된다. | 일반적으로 인라인 뷰 or with 문으로 컬럼을 한정한다 | . | . SELECT * FROM emp a PIVOT (SUM(a.sal) FOR deptno IN (10 ,20 ,30) ); . | EMPNO | ENAME | JOB | MGRHIREDATE | COMM | 10 | 20 | 30 | 40 | . | 7369 | SMITH | CLERK | 7902 | 1980-12-17 00:00:00.000 |   |   | 800 |   | . | 7499 | ALLEN | SALESMAN | 7698 | 1981-02-20 00:00:00.000 | 300 |   |   | 1600 | . | 7521 | WARD | SALESMAN | 7698 | 1981-02-22 00:00:00.000 | 500 |   |   | 1250 | . | 7566 | JONES | MANAGER | 7839 | 1981-04-02 00:00:00.000 |   |   | 2975 |   | . | 7654 | MARTIN | SALESMAN | 7698 | 1981-09-28 00:00:00.000 | 1400 |   |   | 1250 | . | 7698 | BLAKE | MANAGER | 7839 | 1981-05-01 00:00:00.000 |   |   |   | 2850 | . | 7782 | CLARK | MANAGER | 7839 | 1981-06-09 00:00:00.000 |   | 2450 |   |   | . | 7788 | SCOTT | ANALYST | 7566 | 1987-04-19 00:00:00.000 |   |   | 3000 |   | . | 7839 | KING | PRESIDENT |   | 1981-11-17 00:00:00.000 |   | 5000 |   |   | . | 7844 | TURNER | SALESMAN | 7698 | 1981-09-08 00:00:00.000 | 0 |   |   | 1500 | . | 7876 | ADAMS | CLERK | 7788 | 1987-05-23 00:00:00.000 |   |   | 1100 |   | . | 7900 | JAMES | CLERK | 7698 | 1981-12-03 00:00:00.000 |   |   |   | 950 | . | 7902 | FORD | ANALYST | 7566 | 1981-12-03 00:00:00.000 |   |   | 3000 |   | . | 7934 | MILLER | CLERK | 7782 | 1982-01-23 00:00:00.000 |   | 1300 |   |   | . | IN 절에 지정한 값에 대해서만 PIVOT을 수행한다. | 집계 함수와 IN 절에 별칭(Alias)을 지정할 수 있다. | IN 절에 지정한 별칭 + ‘ㅡ’ + 집계 함수에 지정한 별칭으로 최종 결과 열의 Label이 지정된다. | . | . | . SELECT job, D10_SUMSAL, D30_SUMSAL FROM (SELECT a.job ,a.DEPTNO ,a.SAL FROM EMP a ) a PIVOT (sum(a.SAL) AS SUMSAL FOR deptno IN (10 AS D10 ,30 AS D30 ) ); . | JOB | D10_SUMSAL | D30_SUMSAL | . | CLERK | 1300 | 950 | . | SALESMAN |   | 5600 | . | MANAGER | 2450 | 2850 | . | ANALYST |   |   | . | PRESIDENT | 5000 |   | . | 집계 함수와 IN 절 둘 중 하나에만 별칭을 지정하는 것도 가능하다. | 집계함수와 IN절 모두에 별칭을 지정하는 것이 좋다. | . | 여러 개의 집계 함수를 사용하여 PIVOT을 수행할 수 있다. | PIVOT에 의해 집계 함수의 개수*IN 절 값의 개수 만큼 결과 열이 출력된다 | . | . SELECT * FROM (SELECT a.job ,a.DEPTNO ,a.SAL FROM EMP a ) a PIVOT (sum(a.SAL) AS SUMSAL ,count(*) AS CNT FOR deptno IN (10 AS D10 ,20 AS D20 ,30 AS D30 ) ); . | JOB | D10_SUMSAL | D10_CNT | D20_SUMSAL | D20_CNT | D30_SUMSAL | D30_CNT | . | CLERK | 1300 | 1 | 1900 | 2 | 950 | 1 | . | SALESMAN |   | 0 |   | 0 | 5600 | 4 | . | MANAGER | 2450 | 1 | 2975 | 1 | 2850 | 1 | . | ANALYST |   | 0 | 6000 | 2 |   | 0 | . | PRESIDENT | 5000 | 1 |   | 0 |   | 0 | . | 집계함수를 2개 이상 사용하였을 때,별칭을 지정하지 않으면 문법 오류가 발생한다. | PIVOT 절 사용시 집계 함수와 IN 절 모두에 별칭을 지정하는 것이 좋다. | . 올바른 사용 예시 . SELECT * FROM (SELECT a.job ,a.deptno ,a.sal FROM emp a ) a PIVOT ( SUM(a.sal) AS SUMSAL ,COUNT(*) AS CNT FOR deptno IN (20 AS D20 ,30 AS D30) ); . 오류 발생 예시 . SELECT * FROM (SELECT a.job ,a.deptno ,a.sal FROM emp a ) a PIVOT (SUM(a.sal) ,COUNT(*) FOR deptno IN (20 AS D20 ,30 AS D30) ); . SQL Error [918] [42000]: ORA-00918: 열의 정의가 애매합니다 . 집계 함수를 사용하지 않으면 오류 발생 . SELECT * FROM (SELECT a.job ,a.deptno ,a.sal FROM emp a ) a PIVOT ( a.sal FOR deptno IN (20 AS D20 ,30 AS D30) ); . SQL Error [56902] [99999]: ORA-56902: 피벗 작업 내에서는 합계 함수가 필요합니다. 참조하는 컬럼을 select 절에 직접 기술하면 오류 발생 . SELECT job, deptno, sal, d20_sumsal, d30_sumsal FROM (SELECT a.job ,a.deptno ,a.sal FROM emp a) a PIVOT ( SUM(a.sal) AS SUMSAL FOR deptno IN (20 AS D20 ,30 AS D30) ); . SQL Error [904] [42000]: ORA-00904: “SAL”: 부적합한 식별자 . 2.UNPIVOT . | FROM 절과 WHERE 절 사이에 기술한다. | UNPIVOT 컬럼에 UNPIVOT된 값이 출력될 컬럼을 지정한다. | FOR 절에는 구분자 값이 출력될 컬럼을 지정한다. | IN 절에는 UNPIVOT 대상 컬럼과 구분자 값을 지정 | . | . Syntax . SELECT Col1, Col2, ... FROM Table/Inline View UNPIVOT [INCLUDE | EXCLUDE NULL] FOR Col1 [,Col2, ...] IN (Col1 AS Alias1 [,Col2 AS Alias2,...]) ) WHERE conditions; . | 행 복제(Cross Join, 카타시안 곱)을 활용한 UNPIVOT 구현 | . WITH W_PIVOT AS (SELECT D10_SUMSAL ,D20_SUMSAL ,D30_SUMSAL FROM (SELECT a.deptno ,a.sal FROM emp a ) a PIVOT (SUM(a.sal) AS SUMSAL FOR deptno IN (10 AS D10 ,20 AS D20 ,30 AS D30) ) ) SELECT * FROM W_PIVOT; . | 10 | 20 | 30 | . | 8,750 | 10,875 | 9,400 | . | UNPIVOT 절을 기존 행수 * IN 절에 지정한 컬럼 수만큼 행을 복제한다. | 단, NULL 값은 결과에서 제외(EXCLUDE NUL)된다. | UNPIVOT 절에 INCLUDE NULL 키워드를 기술하면 NULL 값도 결과에 포함된다. | . | . WITH W_PIVOT AS (SELECT JOB, D10_SUMSAL, D20_SUMSAL, D30_SUMSAL FROM (SELECT a.job ,a.deptno ,a.sal FROM emp a ) a PIVOT (SUM(a.sal) AS SUMSAL FOR deptno IN (10 AS D10 ,20 AS D20 ,30 AS D30) ) ) SELECT * FROM W_PIVOT UNPIVOT INCLUDE NULLS (SUMSAL FOR DEPNO IN (D10_SUMSAL AS 10 ,D20_SUMSAL AS 20 ,D30_SUMSAL AS 30) ); . | JOB | D10_SUMSAL | D20_SUMSAL | . | CLERK | 10 | 1300 | . | CLERK | 20 | 1900 | . | CLERK | 30 | 950 | . | SALESMAN | 10 |   | . | SALESMAN | 20 |   | . | SALESMAN | 30 | 5600 | . | MANAGER | 10 | 2450 | . | MANAGER | 20 | 2975 | . | MANAGER | 30 | 2850 | . | ANALYST | 10 |   | . | ANALYST | 20 | 6000 | . | ANALYST | 30 |   | . | PRESIDENT | 10 | 5000 | . | PRESIDENT | 20 |   | . | PRESIDENT | 30 |   | . 다중 컬럼 UNPIVOT 예시 . WITH W_PIVOT AS (SELECT JOB, D10_SUMSAL, D10_CNT, D30_SUMSAL, D30_CNT FROM (SELECT a.job ,a.deptno ,a.sal FROM emp a ) a PIVOT (SUM(a.sal) AS SUMSAL ,COUNT(*) AS CNT FOR deptno IN (10 AS D10 ,30 AS D30) ) ) SELECT * FROM W_PIVOT; . | JOB | D10_SUMSAL | D10_CNT | D30_SUMSAL | D30_CNT | . | CLERK | 1300 | 1 | 950 | 1 | . | SALESMAN |   | 0 | 5600 | 4 | . | MANAGER | 2450 | 1 | 2850 | 1 | . | ANALYST |   | 0 |   | 0 | . | PRESIDENT | 5000 | 1 |   | 0 | . WITH W_PIVOT AS (SELECT JOB, D10_SUMSAL, D10_CNT, D30_SUMSAL, D30_CNT FROM (SELECT a.job ,a.deptno ,a.sal FROM emp a ) a PIVOT (SUM(a.sal) AS SUMSAL ,COUNT(*) AS CNT FOR deptno IN (10 AS D10 ,30 AS D30) ) ) SELECT * FROM W_PIVOT UNPIVOT ((SUMSAL, CNT) FOR DEPNO IN ((D10_SUMSAL, D10_CNT) AS 10 ,(D30_SUMSAL, D30_CNT) AS 30) ); . | JOB | DEPTNO | SUMSAL | CNT | . | CLERK | 10 | 1300 | 1 | . | CLERK | 30 | 950 | 1 | . | SALESMAN | 10 |   | 0 | . | SALESMAN | 30 | 5600 | 4 | . | MANAGER | 10 | 2450 | 1 | . | MANAGER | 30 | 2850 | 1 | . | ANALYST | 10 |   | 0 | . | ANALYST | 30 |   | 0 | . | PRESIDENT | 10 | 5000 | 1 | . | PRESIDENT | 30 |   | 0 | . | UNPIVOT 절 사용시 자주 하는 실수(데이터 타입 불일치) . | UNPIVOT 대상 컬럼들의 데이터 타입이 일지차히 않으면 에러가 발생한다. | 형 변환 함수 등을 사용하여 데이터 타입을 일치 시킨 후 UNPIVOT을 수행해야 한다. | . | . | . WITH W_EMP AS (SELECT TO_CHAR(A.EMPNO) AS EMPNO ,A.ENAME ,A.JOB ,TO_CHAR(A.MGR) AS MGR ,TO_CHAR(A.HIREDATE, 'YYYY-MM-DD') AS HIREDATE ,TO_CHAR(A.SAL) AS SAL ,TO_CHAR(A.COMM) AS COMM ,TO_CHAR(A.DEPTNO) AS DEPTNO FROM EMP A WHERE A.EMPNO = 7369 ) SELECT * FROM W_EMP; . | EMPNO | ENAME | JOB | MGR | HIREDATE | SAL | COMM | DEPTNO | . | 7369 | SMITH | CLERK | 7902 | 1980-12-17 | 800 |   | 20 | . WITH W_EMP AS (SELECT TO_CHAR(A.EMPNO) AS EMPNO ,A.ENAME ,A.JOB ,TO_CHAR(A.MGR) AS MGR ,TO_CHAR(A.HIREDATE, 'YYYY-MM-DD') AS HIREDATE ,TO_CHAR(A.SAL) AS SAL ,TO_CHAR(A.COMM) AS COMM ,TO_CHAR(A.DEPTNO) AS DEPTNO FROM EMP A WHERE A.EMPNO = 7369 ) SELECT * FROM W_EMP UNPIVOT (INFO_VAL FOR INFO_CLS IN (EMPNO AS 'EMPNO' ,ENAME AS 'ENAME' ,JOB AS 'JOB' ,MGR AS 'MGR' ,HIREDATE AS 'HIREDATE' ,SAL AS 'SAL' ,COMM AS 'COMM' ,DEPTNO AS 'DEPNO' ) ); . | INFO_CLS | INFO_VAL | . | EMPNO | 7369 | . | ENAME | SMITH | . | JOB | CLERK | . | MGR | 7902 | . | HIREDATE | 1980-12-17 | . | SAL | 800 | . | DEPNO | 20 | . 고객사 요건 재구현 . CREATE TABLE stage_table( id INT PRIMARY KEY, Stage VARCHAR2(20), Stage1_Actual DATE, Stage1_Plan DATE, Stage2_Actual DATE, Stage2_Plan DATE, Stage3_Actual DATE, Stage3_PLAN DATE ); INSERT INTO stage_table(id, stage, Stage1_Actual, Stage1_Plan, Stage2_Actual, Stage2_Plan, Stage3_Actual, Stage3_PLAN) VALUES(1 ,'Complete' , TO_DATE('2023-05-01', 'yyyy-mm-dd') , TO_DATE('2023-05-03', 'yyyy-mm-dd') ,TO_DATE('2023-05-15', 'yyyy-mm-dd') ,TO_DATE('2023-05-14', 'yyyy-mm-dd') ,TO_DATE('2023-05-20', 'yyyy-mm-dd') ,TO_DATE('2023-05-25', 'yyyy-mm-dd')); INSERT INTO stage_table(id, stage, Stage1_Actual, Stage1_Plan, Stage2_Actual, Stage2_Plan, Stage3_Actual, Stage3_PLAN) VALUES(2 ,'PVT' , TO_DATE('2023-05-02', 'yyyy-mm-dd') , TO_DATE('2023-05-05', 'yyyy-mm-dd') ,TO_DATE('2023-05-10', 'yyyy-mm-dd') ,TO_DATE('2023-05-20', 'yyyy-mm-dd') ,NULL ,TO_DATE('2023-05-30', 'yyyy-mm-dd')); SELECT * FROM stage_table; . 1개 UNPIVOT . SELECT ID, Stage, End_Actual FROM (SELECT id, Stage1_Actual, Stage2_Actual FROM stage_table) UNPIVOT( End_Actual -- unpivot_clause FOR Stage -- unpivot_for_clause IN ( -- unpivot_in_clause Stage1_Actual AS 'Stage1', Stage2_Actual AS 'Stage2' ) ); . 2개 UNPIVOT . SELECT ID, Stage, End_Actual, End_Plan FROM (SELECT id, Stage1_Actual, Stage2_Actual, Stage3_Actual, Stage1_Plan, Stage2_Plan, Stage3_Plan FROM stage_table) UNPIVOT( (End_Actual, End_Plan) -- unpivot_clause FOR Stage -- unpivot_for_clause IN ( -- unpivot_in_clause (Stage1_Actual, Stage1_Plan) AS 'Stage1', (Stage2_Actual, Stage2_Plan) AS 'Stage2', (Stage3_Actual, Stage3_Plan) AS 'Stage3' ) ); . 2개 UNPIVOT + UNION ALL . SELECT ID, Stage, End_Actual, End_Plan, 'Phase1' TB_NAME FROM (SELECT id ,Stage1_Actual ,Stage2_Actual ,Stage3_Actual ,Stage1_Plan ,Stage2_Plan ,Stage3_Plan FROM stage_table) UNPIVOT( (End_Actual, End_Plan) -- unpivot_clause FOR Stage -- unpivot_for_clause IN ( -- unpivot_in_clause (Stage1_Actual, Stage1_Plan) AS 'Stage1', (Stage2_Actual, Stage2_Plan) AS 'Stage2', (Stage3_Actual, Stage3_Plan) AS 'Stage3' ) ) UNION ALL SELECT ID, Stage, End_Actual, End_Plan, 'Phase2' TB_NAME FROM (SELECT id, Stage1_Actual, Stage2_Actual, Stage3_Actual, Stage1_Plan, Stage2_Plan, Stage3_Plan FROM stage_table) UNPIVOT( (End_Actual, End_Plan) -- unpivot_clause FOR Stage -- unpivot_for_clause IN ( -- unpivot_in_clause (Stage1_Actual, Stage1_Plan) AS 'Stage1', (Stage2_Actual, Stage2_Plan) AS 'Stage2', (Stage3_Actual, Stage3_Plan) AS 'Stage3' ) ) ; . ",
    "url": "/docs/5.Oracle/DML/1-8.Pivot/#pivotunpivot",
    
    "relUrl": "/docs/5.Oracle/DML/1-8.Pivot/#pivotunpivot"
  },"55": {
    "doc": "PIVOT/UNPIVOT",
    "title": "PIVOT/UNPIVOT",
    "content": "작성일자 : 2023-07-15 수정일자 : 2023-07-23 ",
    "url": "/docs/5.Oracle/DML/1-8.Pivot/",
    
    "relUrl": "/docs/5.Oracle/DML/1-8.Pivot/"
  },"56": {
    "doc": "CASE",
    "title": "CASE ",
    "content": "Ver 0.1.1 . | 1. CASE(ANSI 표준) . | 1-1. 단순 CASE 표현 | 1-2. 검색 CASE 표현 | 1-3. 중첩 CASE 표현 | 1-4. WHERE절 CASE 표현 | 1-5. ORDER BY절 CASE 표현 | . | 2. DECODE (Oracle) | . ",
    "url": "/docs/5.Oracle/DML/1-9.CASE/#case-",
    
    "relUrl": "/docs/5.Oracle/DML/1-9.CASE/#case-"
  },"57": {
    "doc": "CASE",
    "title": "1. CASE(ANSI 표준) ",
    "content": ". | 비교 값 또는 조건에 따라 데이터를 가공하거나 변환할 수 있다. | 프로그래밍 언어의 조건문(IF - ELSEIF - ELSE)과 유사한 처리가 가능하다 | . 1-1. 단순 CASE 표현 . SELECT A.ENAME ,A.JOB ,CASE A.JOB WHEN 'PRESIDENT' THEN 'P' WHEN 'MANAGE' THEN 'M' ELSE 'E' END AS JOB_SE FROM EMP A WHERE A.SAL BETWEEN 1500 AND 5000 AND A.DEPTNO IN (10,20); . | ENAME | JOB | JOB_SE | . | JONES | MANAGER | E | . | CLARK | MANAGER | E | . | SCOTT | ANALYST | E | . | KING | PRESIDENT | P | . | FORD | ANALYST | E | . 1-2. 검색 CASE 표현 . SELECT A.ENAME ,A.JOB ,CASE A.JOB WHEN 'PRESIDENT' THEN 'P' WHEN 'MANAGE' THEN 'M' ELSE 'E' END AS JOB_SE FROM EMP A WHERE A.SAL BETWEEN 1500 AND 5000 AND A.DEPTNO IN (10,20); . | ENAME | JOB | JOB_SE | . | JONES | MANAGER | E | . | CLARK | MANAGER | E | . | SCOTT | ANALYST | E | . | KING | PRESIDENT | P | . | FORD | ANALYST | E | . | 단순 CASE 표현보다 업무에서 더 많이 사용됨 . | 이유 . | 단순 CASE는 CASE 뒤에 오는 필드만 정의 가능 | 검색 CASE는 여러 조건을 사용할 수 있음 | . | . | . SELECT A.COMM ,A.ENAME ,A.SAL ,CASE WHEN A.COMM IS NOT NULL THEN 1 WHEN A.ENAME LIKE '%E%' THEN 2 WHEN A.SAL &lt; 2000 OR A.SAL &gt; 3000 THEN 3 END AS EMP_CLS_CD FROM EMP A WHERE A.SAL BETWEEN 1500 AND 5000 AND A.DEPTNO IN (10,30); . | COMM | ENAME | SAL | EMP_CLS_CD | . | 300 | ALLEN | 1600 | 1 | . |   | BLAKE | 2850 | 2 | . |   | CLARK | 2450 |   | . |   | KING | 5000 | 3 | . | 0 | TURNER | 1500 | 1 | . 1-3. 중첩 CASE 표현 . SELECT A.ENAME ,A.JOB ,A.COMM ,CASE WHEN A.JOB = 'SALESMAN' THEN (CASE WHEN A.SAL + A.COMM &gt; 2500 THEN 'A' WHEN A.SAL + A.COMM BETWEEN 1500 AND 2500 THEN 'B' ELSE 'C' END ) ELSE (CASE WHEN A.SAL &gt; 3000 THEN 'A' WHEN A.SAL BETWEEN 2000 AND 3000 THEN 'B' ELSE 'C' END ) END AS SAL_GRADE FROM EMP A WHERE A.DEPTNO IN (10,30); . | ENAME | JOB | SAL | COMM | SAL_GRADE | . | WARD | SALESMAN | 1250 | 500 | B | . | MARTIN | SALESMAN | 1250 | 1400 | A | . | ALLEN | SALESMAN | 1600 | 300 | B | . | TURNER | SALESMAN | 1500 | 0 | B | . | KING | PRESIDENT | 5000 |   | A | . | BLAKE | MANAGER | 2850 |   | B | . | CLARK | MANAGER | 2450 |   | B | . | JAMES | CLERK | 950 |   | C | . | MILLER | CLERK | 1300 |   | C | . 1-4. WHERE절 CASE 표현 . SELECT A.ENAME ,A.JOB ,A.SAL ,A.COMM FROM EMP A WHERE CASE WHEN A.COMM IS NOT NULL THEN A.SAL + A.COMM ELSE A.SAL END &gt; 2500; . | ENAME | JOB | SAL | COMM | . | JONES | MANAGER | 2975 |   | . | MARTIN | SALESMAN | 1250 | 1400 | . | BLAKE | MANAGER | 2850 |   | . | SCOTT | ANALYST | 3000 |   | . | KING | PRESIDENT | 5000 |   | . | FORD | ANALYST | 3000 |   | . | 위 식과 같은 결과 SELECT A.ENAME ,A.JOB ,A.SAL ,A.COMM FROM EMP A WHERE A.SAL + NVL(A.COMM,0) &gt; 2500; . | . 1-5. ORDER BY절 CASE 표현 . SELECT A.ENAME ,A.JOB ,A.DEPTNO ,A.COMM FROM EMP A WHERE A.SAL &gt;= 1500 ORDER BY CASE WHEN A.JOB IN ('PRESIDENT', 'MANAGER') THEN 1 ELSE 2 END ,A.DEPTNO DESC ,A.SAL DESC; . | ENAME | JOB | DEPTNO | SAL | . | BLAKE | MANAGER | 30 | 2850 | . | JONES | MANAGER | 20 | 2975 | . | KING | PRESIDENT | 10 | 5000 | . | CLARK | MANAGER | 10 | 2450 | . | ALLEN | SALESMAN | 30 | 1600 | . | TURNER | SALESMAN | 30 | 1500 | . | SCOTT | ANALYST | 20 | 3000 | . | FORD | ANALYST | 20 | 3000 | . ",
    "url": "/docs/5.Oracle/DML/1-9.CASE/",
    
    "relUrl": "/docs/5.Oracle/DML/1-9.CASE/"
  },"58": {
    "doc": "CASE",
    "title": "2. DECODE (Oracle) ",
    "content": "DECODE(expr, search1, result1 [,search2, result2 ...] (default]) . | expr이 search1과 일치하면 result1, search2와 일치하면 result2, 모두 일치하지 않으면 default를 리턴(단, 모두 일치 하지 않는데 default를 지정하지 않았으면 NULL을 리턴) | . SELECT A.ENAME ,A.JOB ,DECODE(A.JOB,'PRESIDENT','P','MANAGE','M','E') AS JOB_SE FROM EMP A WHERE A.SAL BETWEEN 1500 AND 5000 AND A.DEPTNO IN (10,20); . | ENAME | JOB | JOB_SE | . | JONES | MANAGER | E | . | CLARK | MANAGER | E | . | SCOTT | ANALYST | E | . | KING | PRESIDENT | P | . | FORD | ANALYST | E | . ",
    "url": "/docs/5.Oracle/DML/1-9.CASE/",
    
    "relUrl": "/docs/5.Oracle/DML/1-9.CASE/"
  },"59": {
    "doc": "CASE",
    "title": "CASE",
    "content": "작성일자 : 2023-07-23 ",
    "url": "/docs/5.Oracle/DML/1-9.CASE/",
    
    "relUrl": "/docs/5.Oracle/DML/1-9.CASE/"
  },"60": {
    "doc": "CREATE TABLE",
    "title": "CREATE TABLE ",
    "content": "Ver 0.1.2 . | 1.데이터 타입 | 2.테이블 생성(열 정의 방식) | 3.테이블 생성(서브쿼리 방식) | 4.데이터 딕셔너리 | . 1. 데이터 타입 . 오라클 데이터베이스는 다양한 데이터 타입을 제공하며, 아래는 자주 사용하는 데이터 타입이다. | 데이터 타입 | 설명 | . | CHAR[(size)] | - 고정 길이 문자 데이터 타입- size는 1~2000의 범위를 가지며(기본 값은 1), BYTE 또는 CHAR(글자수)로 지정할 수 있다. | . | VARCHAR2(size) | - 가변 길이 문자 데이터 타입- size는 1~4000의 범위를 가지며, BYTE 또는 CHAR(글자수)로 지정할 수 있다.- CHAR에 비해 활용도가 높음 | . | NUMBER[(p[,s])] | - 가변 길이 숫자 데이터 타입- p는 전체 자리수(1~38)이고, s는 소수부 자릿수(-84~127)이다. | . | DATE | - 고정 길이 날짜 데이터 타입- 일자(년월일)와 시간(시분초)을 저장할수 있으며, 1초 단위로 관리된다. | . | TIMESTAMP[(precision)] | - 가변 길이 날짜 데이터 타입- prcision는 소수점 이하 초의 정밀도(0~9)이며, 기본값은 6이다. | . | CLOB | - 가변 길이 문자 데이터 타입(Character Large Object)- 최대(4GB-1바이트)*(데이터베이스 블록 크기)의 데이터를 저장할 수 있다. | . 2. 테이블 생성(열 정의 방식) . 기본적인 테이블 생성 방식으로, 각 칼럼마다 데이터 타입을 정의하여 테이블을 생성한다. | Syntax | . CREATE TABLE [schema.]table ( column datatype [DEFAULT expr][NOT NULL] [,column datatype [DEFAULT expr][NOT NULL] ] ... ); . | 구문 설명 . | schema : 테이블이 생성될 스키마(계정)의 이름 | table : 테이블의 이름 | column : 테이블에 속한 칼럼의 이름 | datatype : 해당 칼럼에 저장될 데이터의 타입(ex. varchar2, number, date, ..) | DEFAULT : 해당 칼럼에 값이 입력되지 않을 경우, 저장될 기본 값(expr) | NOT NULL : 해당 칼럼에 NOT NULL 제약 조건을 지정 | . | . EX) . DROP TABLE t1 PURGE; CREATE TABLE t1 ( EMPNO NUMBER(4) ,ENAME VARCHAR2(20) NOT NULL ,SAL NUMBER ,DEPTNO NUMBER(2) DEFAULT NOT NULL ); . DESC t1 . [조회 결과] . | EMPNO | ENAME | SAL | DEPTNO | . |   |   |   |   | . no rows selected . 3. 테이블 생성(서브쿼리 방식) . 서브쿼리를 이용하여 테이블을 생성하며, 서브 쿼리의 결과가 테이블에 입력된다. | Syntax | . CREATE TABLE [schema.]table ( column datatype [DEFAULT expr][NOT NULL] [,column datatype [DEFAULT expr][NOT NULL] ] ... ) AS subquery; . 서브쿼리 방식을 CREATE TABLE AS SELEC의 앞 글자를 따서 CTAS 방식이라고 부르기도 한다. | 구문 설명 . | schema : 테이블이 생성될 스키마(계정)의 이름 | table : 테이블의 이름 | column : 테이블에 속한 칼럼의 이름 | DEFAULT : 해당 칼럼에 값이 입력되지 않을 경우, 저장될 기본 값(expr) | NOT NULL : 해당 칼럼에 NOT NULL 제약 조건을 지정 | . | . 서브쿼리 방식(CTAS 방식)은 데이터 유형을 지정하지 않는다. EX) . DROP TABLE t2 PURGE; CREATE TABLE t2 ( EMPNO ,ENAME NOT NULL ,SAL ,DEPTNO DEFAULT NOT NULL ) AS SELECT A.EMPNO, A.ENAME, A.SAL, A.DEPTNO FROM EMP A WHERE A.DEPTNO = 20; . DESC t2 . | COLUMN | Nullable | Type | . | EMPNO |   | NUMBER(4) | . | ENAME | NOT NULL | VARCHAR2(10) | . | SAL |   | NUMBER(7,2) | . | DEPTNO | NOT NULL | NUMBER(2) | . | 기존에 존재하는 테이블의 데이터 유형을 그대로 받아온다. | . [조회 결과] . | EMPNO | ENAME | SAL | DEPTNO | . | 7369 | SMITH | 800 | 20 | . | 7566 | JONES | 2975 | 20 | . | 7788 | SCOTT | 3000 | 20 | . | 7876 | ADAMS | 1100 | 20 | . | 7902 | FORD | 3000 | 20 | . | 서브쿼리에 항상 FALSE인 조건(ex. 1=2)을 사용하여, 데이터 없이 테이블 구조만 복제한 새로운 테이블을 생성할 수 있다. | . EX) . DROP TABLE t2 PURGE; CREATE TABLE t2 AS SELECT A.* FROM EMP A WHERE 1=2; -- 무조건 거짓, 데이터는 조회되지 않고, 테이블 구조만 가져옴 . DESC t2 . | COLUMN | Nullable | Type | . | DEPTNO |   | NUMBER(2) | . | DNAME |   | VARCHAR2(14) | . | LOC |   | VARCHAR2(13) | . [조회 결과] . | EMPNO | ENAME | SAL | DEPTNO | . |   |   |   |   | . no rows selected . 4. 데이터 딕셔너리 . user_table 딕셔너리를 조회하면, 해당 계정이 소유한 테이블 목록을 조회할 수 있다. SELECT A.TABLE_NAME FROM USER_TABLES A; . | TABLE_NAME | . | DEPT | . | EMP | . | BONUS | . | SALGRADE | . | T1 | . | T2 | . user_tab_columns 딕셔너리를 조회하면, 테이블에 정의된 칼럼 정보를 조회할 수 있다. SELECT A.TABLE_NAME ,A.COLUMN_NAME ,A.DATA_TYPE ,A.DATA_LENGTH ,A.DATA_PRECISION ,A.DATA_SCALE ,A.NULLABLE FROM USER_TABLES A WHERE A.TABLE_NAME = 'T1' ORDER BY A.TABLE_NAME, A.COLUMN_ID; . | TABLE_NAME | COLUMN_NAME | DATA_TYPE | DATA_LENGTH | DATA_PRECISION | DATA_SCALE | NULLABLE | . | T1 | EMPNO | NUMBER | 22 | 4 | 0 | Y | . | T1 | ENAME | VARCHAR2 | 20 |   |   | N | . | T1 | SAL | NUMBER | 22 |   |   | Y | . | T1 | DEPTNO | NUMBER | 22 | 2 | 0 | N | . ",
    "url": "/docs/5.Oracle/DDL/1.CREATE_Table/",
    
    "relUrl": "/docs/5.Oracle/DDL/1.CREATE_Table/"
  },"61": {
    "doc": "CREATE TABLE",
    "title": "CREATE TABLE",
    "content": "작성일자 : 2023-08-07 수정일자 : 2023-08-08 ",
    "url": "/docs/5.Oracle/DDL/1.CREATE_Table/",
    
    "relUrl": "/docs/5.Oracle/DDL/1.CREATE_Table/"
  },"62": {
    "doc": "이벤트 데이터 구성 파악",
    "title": "이벤트 데이터 구성 파악",
    "content": ". 작성일자 : 2023-08-27 import os import pandas as pd import pickle import glob . # 현재 작업 디렉토리 정보 가져오기 current_dir = os.getcwd() print(current_dir) . /Users/limjongjun/Desktop/JayJay/Growth/Python/soccer-analytics/data . #new_directory = '/path/to/new_directory' new_directory = '/Users/limjongjun/Desktop/JayJay/Growth/Python/soccer-analytics/data' # 작업 디렉토리 변경 os.chdir(new_directory) #변경된 디렉토리 확인 print(current_dir) . /Users/limjongjun/Desktop/JayJay/Growth/Python/soccer-analytics/Excercise . (1) 경기 정보 불러오기 . | 상대경로 | . dataset_name = 'England' match_df = pd.read_csv(f'data/refined_events/{dataset_name}/matches.csv', index_col= False , encoding='utf-8-sig') #pkl 파일들 가장 밑에 csv 파일 존재 match_df . match_df = pd.read_csv('/Users/limjongjun/Desktop/JayJay/Growth/Python/soccer-analytics/data/refined_events/England/matches.csv', index_col= False , encoding='utf-8-sig') #pkl 파일들 가장 밑에 csv 파일 존재 match_df . | | match_id | gameweek | datetime | venue | team1_id | team1_name | team1_goals | team2_id | team2_name | team2_goals | duration | . | 0 | 2499719 | 1 | 2017-08-11 18:45:00 | Emirates Stadium | 1609 | Arsenal | 4 | 1631 | Leicester City | 3 | Regular | . | 1 | 2499727 | 1 | 2017-08-12 11:30:00 | Vicarage Road Stadium | 1644 | Watford | 3 | 1612 | Liverpool | 3 | Regular | . | 2 | 2499726 | 1 | 2017-08-12 14:00:00 | St. Mary's Stadium | 1619 | Southampton | 0 | 10531 | Swansea City | 0 | Regular | . | 3 | 2499721 | 1 | 2017-08-12 14:00:00 | Stamford Bridge | 1610 | Chelsea | 2 | 1646 | Burnley | 3 | Regular | . | 4 | 2499728 | 1 | 2017-08-12 14:00:00 | The Hawthorns | 1627 | West Bromwich Albion | 1 | 1659 | AFC Bournemouth | 0 | Regular | . | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . | 375 | 2500092 | 38 | 2018-05-13 14:00:00 | Anfield | 1612 | Liverpool | 4 | 1651 | Brighton &amp; Hove Albion | 0 | Regular | . | 376 | 2500091 | 38 | 2018-05-13 14:00:00 | The John Smith's Stadium | 1673 | Huddersfield Town | 0 | 1609 | Arsenal | 1 | Regular | . | 377 | 2500090 | 38 | 2018-05-13 14:00:00 | Selhurst Park | 1628 | Crystal Palace | 2 | 1627 | West Bromwich Albion | 0 | Regular | . | 378 | 2500098 | 38 | 2018-05-13 14:00:00 | London Stadium | 1633 | West Ham United | 3 | 1623 | Everton | 1 | Regular | . | 379 | 2500089 | 38 | 2018-05-13 14:00:00 | Turf Moor | 1646 | Burnley | 1 | 1659 | AFC Bournemouth | 2 | Regular | . 380 rows × 11 columns . match_df.to_csv(path_or_buf = '/Users/limjongjun/Desktop/JayJay/Growth/Python/soccer-analytics/data/pl_matches.csv') . # 빈 데이터프레임 생성 union_df = pd.DataFrame() # pkl 파일들의 경로를 가져옴 file_paths = glob.glob('/Users/limjongjun/Desktop/JayJay/Growth/Python/soccer-analytics/data/refined_events/England/*.pkl') # 각 파일을 순회하면서 데이터를 읽어와 데이터프레임에 추가 for file_path in file_paths: with open(file_path, 'rb') as file: data = pickle.load(file) df = pd.DataFrame(data) union_df = pd.concat([union_df, df], ignore_index=True) . union_df . | | match_id | event_id | period | time | team_id | team_name | player_id | player_name | event_type | sub_event_type | tags | start_x | start_y | end_x | end_y | . | 0 | 2499938 | 218665430 | 1H | 0.749 | 1633 | West Ham United | 41174 | M. Lanzini | Pass | Simple pass | [Accurate] | 50.96 | 34.68 | 29.12 | 20.40 | . | 1 | 2499938 | 218665431 | 1H | 4.264 | 1633 | West Ham United | 8553 | W. Reid | Pass | High pass | [Not accurate] | 29.12 | 20.40 | 84.24 | 19.04 | . | 2 | 2499938 | 218666275 | 1H | 7.114 | 1627 | West Bromwich Albion | 7914 | J. Evans | Pass | Head pass | [Not accurate] | 19.76 | 48.96 | 31.20 | 44.88 | . | 3 | 2499938 | 218665432 | 1H | 10.018 | 1633 | West Ham United | 20620 | Pedro Obiang | Pass | Simple pass | [Accurate] | 72.80 | 23.12 | 67.60 | 62.56 | . | 4 | 2499938 | 218665433 | 1H | 13.153 | 1633 | West Ham United | 26499 | A. Masuaku | Pass | Simple pass | [Accurate] | 67.60 | 62.56 | 59.28 | 53.04 | . | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . | 647247 | 2499921 | 218383200 | 2H | 3148.632 | 1628 | Crystal Palace | 38031 | C. Benteke | Duel | Air duel | [Won, Accurate] | 94.64 | 41.48 | 91.52 | 43.52 | . | 647248 | 2499921 | 218383748 | 2H | 3148.632 | 1625 | Manchester City | 0 | NaN | Duel | Air duel | [Lost, Not accurate] | 9.36 | 26.52 | 12.48 | 24.48 | . | 647249 | 2499921 | 218383201 | 2H | 3149.669 | 1628 | Crystal Palace | 38031 | C. Benteke | Shot | Shot | [Head/body, Opportunity, Position: Out low lef... | 91.52 | 43.52 | 104.00 | 34.00 | . | 647250 | 2499921 | 218383202 | 2H | 3156.334 | 1628 | Crystal Palace | 0 | NaN | Interruption | Ball out of the field | [] | 102.96 | 48.28 | NaN | NaN | . | 647251 | 2499921 | 218383285 | 2H | 3161.635 | 1625 | Manchester City | 71654 | Ederson | Free kick | Goal kick | [] | 0.00 | 34.00 | NaN | NaN | . 647252 rows × 15 columns . union_df.to_csv(path_or_buf = '/Users/limjongjun/Desktop/JayJay/Growth/Python/soccer-analytics/data/pl_events.csv') . | 절대경로 | . #데이터 불러오기 #방법 1 (조건에 col_index = 0) dataset_name = 'England' match_df = pd.read_csv('/Users/limjongjun/Desktop/JayJay/Growth/Python/soccer-analytics/data/refined_events/England/matches.csv', index_col=0, encoding='utf-8-sig') #pkl 파일들 가장 밑에 csv 파일 존재 match_df #방법 2 (확인 후 추후 적용) dataset_name = 'England' match_df = pd.read_csv('/Users/limjongjun/Desktop/JayJay/Growth/Python/soccer-analytics/data/refined_events/England/matches.csv', encoding='utf-8-sig') #pkl 파일들 가장 밑에 csv 파일 존재 match_df = match_df.set_index('match_id') match_df . | | gameweek | datetime | venue | team1_id | team1_name | team1_goals | team2_id | team2_name | team2_goals | duration | . | match_id | | | | | | | | | | | . | 2499719 | 1 | 2017-08-11 18:45:00 | Emirates Stadium | 1609 | Arsenal | 4 | 1631 | Leicester City | 3 | Regular | . | 2499727 | 1 | 2017-08-12 11:30:00 | Vicarage Road Stadium | 1644 | Watford | 3 | 1612 | Liverpool | 3 | Regular | . | 2499726 | 1 | 2017-08-12 14:00:00 | St. Mary's Stadium | 1619 | Southampton | 0 | 10531 | Swansea City | 0 | Regular | . | 2499721 | 1 | 2017-08-12 14:00:00 | Stamford Bridge | 1610 | Chelsea | 2 | 1646 | Burnley | 3 | Regular | . | 2499728 | 1 | 2017-08-12 14:00:00 | The Hawthorns | 1627 | West Bromwich Albion | 1 | 1659 | AFC Bournemouth | 0 | Regular | . | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . | 2500092 | 38 | 2018-05-13 14:00:00 | Anfield | 1612 | Liverpool | 4 | 1651 | Brighton &amp; Hove Albion | 0 | Regular | . | 2500091 | 38 | 2018-05-13 14:00:00 | The John Smith's Stadium | 1673 | Huddersfield Town | 0 | 1609 | Arsenal | 1 | Regular | . | 2500090 | 38 | 2018-05-13 14:00:00 | Selhurst Park | 1628 | Crystal Palace | 2 | 1627 | West Bromwich Albion | 0 | Regular | . | 2500098 | 38 | 2018-05-13 14:00:00 | London Stadium | 1633 | West Ham United | 3 | 1623 | Everton | 1 | Regular | . | 2500089 | 38 | 2018-05-13 14:00:00 | Turf Moor | 1646 | Burnley | 1 | 1659 | AFC Bournemouth | 2 | Regular | . 380 rows × 10 columns . match_df['team1_name'].unique() . array(['Arsenal', 'Watford', 'Southampton', 'Chelsea', 'West Bromwich Albion', 'Everton', 'Crystal Palace', 'Brighton &amp; Hove Albion', 'Newcastle United', 'Manchester United', 'Swansea City', 'Burnley', 'AFC Bournemouth', 'Liverpool', 'Leicester City', 'Stoke City', 'Huddersfield Town', 'Tottenham Hotspur', 'Manchester City', 'West Ham United'], dtype=object) . (2) 경기 정보 필터링 . ## df[ (df['col'] == '') and | (df['col2'] = '') ] match_df[(match_df['team1_name'] == 'Manchester City') | (match_df['team2_name'] == 'Manchester City')] . | | gameweek | datetime | venue | team1_id | team1_name | team1_goals | team2_id | team2_name | team2_goals | duration | . | match_id | | | | | | | | | | | . | 2499720 | 1 | 2017-08-12 16:30:00 | The American Express Community Stadium | 1651 | Brighton &amp; Hove Albion | 0 | 1625 | Manchester City | 2 | Regular | . | 2499734 | 2 | 2017-08-21 19:00:00 | Etihad Stadium | 1625 | Manchester City | 1 | 1623 | Everton | 1 | Regular | . | 2499739 | 3 | 2017-08-26 11:30:00 | Vitality Stadium | 1659 | AFC Bournemouth | 1 | 1625 | Manchester City | 2 | Regular | . | 2499754 | 4 | 2017-09-09 11:30:00 | Etihad Stadium | 1625 | Manchester City | 5 | 1612 | Liverpool | 0 | Regular | . | 2499767 | 5 | 2017-09-16 14:00:00 | Vicarage Road Stadium | 1644 | Watford | 0 | 1625 | Manchester City | 6 | Regular | . | 2499774 | 6 | 2017-09-23 14:00:00 | Etihad Stadium | 1625 | Manchester City | 5 | 1628 | Crystal Palace | 0 | Regular | . | 2499781 | 7 | 2017-09-30 16:30:00 | Stamford Bridge | 1610 | Chelsea | 0 | 1625 | Manchester City | 1 | Regular | . | 2499794 | 8 | 2017-10-14 14:00:00 | Etihad Stadium | 1625 | Manchester City | 7 | 1639 | Stoke City | 2 | Regular | . | 2499802 | 9 | 2017-10-21 14:00:00 | Etihad Stadium | 1625 | Manchester City | 3 | 1646 | Burnley | 0 | Regular | . | 2499818 | 10 | 2017-10-28 14:00:00 | The Hawthorns | 1627 | West Bromwich Albion | 2 | 1625 | Manchester City | 3 | Regular | . | 2499822 | 11 | 2017-11-05 14:15:00 | Etihad Stadium | 1625 | Manchester City | 3 | 1609 | Arsenal | 1 | Regular | . | 2499834 | 12 | 2017-11-18 15:00:00 | King Power Stadium | 1631 | Leicester City | 0 | 1625 | Manchester City | 2 | Regular | . | 2499841 | 13 | 2017-11-26 16:00:00 | The John Smith's Stadium | 1673 | Huddersfield Town | 1 | 1625 | Manchester City | 2 | Regular | . | 2499857 | 14 | 2017-11-29 20:00:00 | Etihad Stadium | 1625 | Manchester City | 2 | 1619 | Southampton | 1 | Regular | . | 2499865 | 15 | 2017-12-03 16:00:00 | Etihad Stadium | 1625 | Manchester City | 2 | 1633 | West Ham United | 1 | Regular | . | 2499873 | 16 | 2017-12-10 16:30:00 | Old Trafford | 1611 | Manchester United | 1 | 1625 | Manchester City | 2 | Regular | . | 2499881 | 17 | 2017-12-13 19:45:00 | Liberty Stadium | 10531 | Swansea City | 0 | 1625 | Manchester City | 4 | Regular | . | 2499895 | 18 | 2017-12-16 17:30:00 | Etihad Stadium | 1625 | Manchester City | 4 | 1624 | Tottenham Hotspur | 1 | Regular | . | 2499904 | 19 | 2017-12-23 15:00:00 | Etihad Stadium | 1625 | Manchester City | 4 | 1659 | AFC Bournemouth | 0 | Regular | . | 2499915 | 20 | 2017-12-27 19:45:00 | St. James' Park | 1613 | Newcastle United | 0 | 1625 | Manchester City | 1 | Regular | . | 2499921 | 21 | 2017-12-31 12:00:00 | Selhurst Park | 1628 | Crystal Palace | 0 | 1625 | Manchester City | 0 | Regular | . | 2499934 | 22 | 2018-01-02 20:00:00 | Etihad Stadium | 1625 | Manchester City | 3 | 1644 | Watford | 1 | Regular | . | 2499943 | 23 | 2018-01-14 16:00:00 | Anfield | 1612 | Liverpool | 4 | 1625 | Manchester City | 3 | Regular | . | 2499954 | 24 | 2018-01-20 17:30:00 | Etihad Stadium | 1625 | Manchester City | 3 | 1613 | Newcastle United | 1 | Regular | . | 2499966 | 25 | 2018-01-31 20:00:00 | Etihad Stadium | 1625 | Manchester City | 3 | 1627 | West Bromwich Albion | 0 | Regular | . | 2499972 | 26 | 2018-02-03 12:30:00 | Turf Moor | 1646 | Burnley | 1 | 1625 | Manchester City | 1 | Regular | . | 2499982 | 27 | 2018-02-10 17:30:00 | Etihad Stadium | 1625 | Manchester City | 5 | 1631 | Leicester City | 1 | Regular | . | 2499990 | 28 | 2018-03-01 19:45:00 | Emirates Stadium | 1609 | Arsenal | 0 | 1625 | Manchester City | 3 | Regular | . | 2500004 | 29 | 2018-03-04 16:00:00 | Etihad Stadium | 1625 | Manchester City | 1 | 1610 | Chelsea | 0 | Regular | . | 2500016 | 30 | 2018-03-12 20:00:00 | Bet365 Stadium | 1639 | Stoke City | 0 | 1625 | Manchester City | 2 | Regular | . | 2500033 | 32 | 2018-03-31 16:30:00 | Goodison Park | 1623 | Everton | 1 | 1625 | Manchester City | 3 | Regular | . | 2500045 | 33 | 2018-04-07 16:30:00 | Etihad Stadium | 1625 | Manchester City | 2 | 1611 | Manchester United | 3 | Regular | . | 2500057 | 34 | 2018-04-14 18:45:00 | Wembley Stadium | 1624 | Tottenham Hotspur | 1 | 1625 | Manchester City | 3 | Regular | . | 2500065 | 35 | 2018-04-22 15:30:00 | Etihad Stadium | 1625 | Manchester City | 5 | 10531 | Swansea City | 0 | Regular | . | 2500078 | 36 | 2018-04-29 13:15:00 | London Stadium | 1633 | West Ham United | 1 | 1625 | Manchester City | 4 | Regular | . | 2500085 | 37 | 2018-05-06 12:30:00 | Etihad Stadium | 1625 | Manchester City | 0 | 1673 | Huddersfield Town | 0 | Regular | . | 2500024 | 31 | 2018-05-09 19:00:00 | Etihad Stadium | 1625 | Manchester City | 3 | 1651 | Brighton &amp; Hove Albion | 1 | Regular | . | 2500095 | 38 | 2018-05-13 14:00:00 | St. Mary's Stadium | 1619 | Southampton | 0 | 1625 | Manchester City | 1 | Regular | . 17/18 시즌 18Round Mancity vs Tottenham . match_id = 2499895 match_events = pd.read_pickle('/Users/limjongjun/Desktop/JayJay/Growth/Python/soccer-analytics/data/refined_events/England/2499895.pkl') #pkl 파일을 Dataframe으로 불러오기 match_events . | | match_id | event_id | period | time | team_id | team_name | player_id | player_name | event_type | sub_event_type | tags | start_x | start_y | end_x | end_y | . | 0 | 2499895 | 215108367 | 1H | 1.784 | 1625 | Manchester City | 8325 | S. Agüero | Pass | Simple pass | [Accurate] | 52.00 | 34.68 | 40.56 | 34.68 | . | 1 | 2499895 | 215108368 | 1H | 3.324 | 1625 | Manchester City | 105339 | Fernandinho | Pass | Simple pass | [Accurate] | 40.56 | 34.68 | 29.12 | 8.16 | . | 2 | 2499895 | 215108369 | 1H | 6.406 | 1625 | Manchester City | 8277 | K. Walker | Pass | Simple pass | [Accurate] | 29.12 | 8.16 | 44.72 | 10.20 | . | 3 | 2499895 | 215108370 | 1H | 7.124 | 1625 | Manchester City | 38021 | K. De Bruyne | Pass | Simple pass | [Accurate] | 44.72 | 10.20 | 69.68 | 6.12 | . | 4 | 2499895 | 215108371 | 1H | 8.676 | 1625 | Manchester City | 11066 | R. Sterling | Pass | Simple pass | [Accurate] | 69.68 | 6.12 | 58.24 | 12.24 | . | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . | 1607 | 2499895 | 215110122 | 2H | 2875.703 | 1624 | Tottenham Hotspur | 210044 | E. Dier | Pass | Simple pass | [Accurate] | 36.40 | 26.52 | 48.88 | 29.92 | . | 1608 | 2499895 | 215110123 | 2H | 2876.142 | 1624 | Tottenham Hotspur | 240070 | H. Winks | Duel | Ground attacking duel | [Anticipation, Lost, Not accurate] | 48.88 | 29.92 | 43.68 | 24.48 | . | 1609 | 2499895 | 215109959 | 2H | 2876.768 | 1625 | Manchester City | 447205 | P. Foden | Duel | Ground defending duel | [Anticipated, Won, Accurate] | 55.12 | 38.08 | 60.32 | 43.52 | . | 1610 | 2499895 | 215109960 | 2H | 2878.046 | 1625 | Manchester City | 11066 | R. Sterling | Duel | Ground attacking duel | [Free space right, Lost, Not accurate] | 60.32 | 43.52 | 60.32 | 43.52 | . | 1611 | 2499895 | 215110124 | 2H | 2878.216 | 1624 | Tottenham Hotspur | 240070 | H. Winks | Duel | Ground defending duel | [Free space left, Lost, Not accurate] | 43.68 | 24.48 | NaN | NaN | . 1612 rows × 15 columns . 열 인덱싱 및 unique 값 확인 ( df[‘col’] ) . match_events[['player_id', 'player_name' ]] . | | player_id | player_name | . | 0 | 8325 | S. Agüero | . | 1 | 105339 | Fernandinho | . | 2 | 8277 | K. Walker | . | 3 | 38021 | K. De Bruyne | . | 4 | 11066 | R. Sterling | . | ... | ... | ... | . | 1607 | 210044 | E. Dier | . | 1608 | 240070 | H. Winks | . | 1609 | 447205 | P. Foden | . | 1610 | 11066 | R. Sterling | . | 1611 | 240070 | H. Winks | . 1612 rows × 2 columns . match_events['player_name'].unique() . array(['S. Agüero', 'Fernandinho', 'K. Walker', 'K. De Bruyne', 'R. Sterling', 'H. Winks', 'D. Rose', nan, 'H. Kane', 'N. Otamendi', 'M. Dembélé', 'E. Dier', 'H. Lloris', 'J. Vertonghen', 'F. Delph', 'Ederson', 'K. Trippier', 'Son Heung-Min', 'C. Eriksen', 'L. Sané', 'E. Mangala', 'İ. Gündoğan', 'D. Alli', 'Gabriel Jesus', 'E. Lamela', 'P. Foden', 'M. Sissoko', 'Bernardo Silva'], dtype=object) . 행 인덱싱 . match_events.loc[0] . match_id 2499895 event_id 215108367 period 1H time 1.784 team_id 1625 team_name Manchester City player_id 8325 player_name S. Agüero event_type Pass sub_event_type Simple pass tags [Accurate] start_x 52.0 start_y 34.68 end_x 40.56 end_y 34.68 Name: 0, dtype: object . match_events.loc[0:5] . | | match_id | event_id | period | time | team_id | team_name | player_id | player_name | event_type | sub_event_type | tags | start_x | start_y | end_x | end_y | . | 0 | 2499895 | 215108367 | 1H | 1.784 | 1625 | Manchester City | 8325 | S. Agüero | Pass | Simple pass | [Accurate] | 52.00 | 34.68 | 40.56 | 34.68 | . | 1 | 2499895 | 215108368 | 1H | 3.324 | 1625 | Manchester City | 105339 | Fernandinho | Pass | Simple pass | [Accurate] | 40.56 | 34.68 | 29.12 | 8.16 | . | 2 | 2499895 | 215108369 | 1H | 6.406 | 1625 | Manchester City | 8277 | K. Walker | Pass | Simple pass | [Accurate] | 29.12 | 8.16 | 44.72 | 10.20 | . | 3 | 2499895 | 215108370 | 1H | 7.124 | 1625 | Manchester City | 38021 | K. De Bruyne | Pass | Simple pass | [Accurate] | 44.72 | 10.20 | 69.68 | 6.12 | . | 4 | 2499895 | 215108371 | 1H | 8.676 | 1625 | Manchester City | 11066 | R. Sterling | Pass | Simple pass | [Accurate] | 69.68 | 6.12 | 58.24 | 12.24 | . | 5 | 2499895 | 215108382 | 1H | 9.282 | 1624 | Tottenham Hotspur | 240070 | H. Winks | Duel | Ground loose ball duel | [Won, Accurate] | 45.76 | 55.76 | 47.84 | 61.20 | . match_events.iloc[0:5] . | | match_id | event_id | period | time | team_id | team_name | player_id | player_name | event_type | sub_event_type | tags | start_x | start_y | end_x | end_y | . | 0 | 2499895 | 215108367 | 1H | 1.784 | 1625 | Manchester City | 8325 | S. Agüero | Pass | Simple pass | [Accurate] | 52.00 | 34.68 | 40.56 | 34.68 | . | 1 | 2499895 | 215108368 | 1H | 3.324 | 1625 | Manchester City | 105339 | Fernandinho | Pass | Simple pass | [Accurate] | 40.56 | 34.68 | 29.12 | 8.16 | . | 2 | 2499895 | 215108369 | 1H | 6.406 | 1625 | Manchester City | 8277 | K. Walker | Pass | Simple pass | [Accurate] | 29.12 | 8.16 | 44.72 | 10.20 | . | 3 | 2499895 | 215108370 | 1H | 7.124 | 1625 | Manchester City | 38021 | K. De Bruyne | Pass | Simple pass | [Accurate] | 44.72 | 10.20 | 69.68 | 6.12 | . | 4 | 2499895 | 215108371 | 1H | 8.676 | 1625 | Manchester City | 11066 | R. Sterling | Pass | Simple pass | [Accurate] | 69.68 | 6.12 | 58.24 | 12.24 | . match_events.loc[:,['player_id', 'player_name']] . | | player_id | player_name | . | 0 | 8325 | S. Agüero | . | 1 | 105339 | Fernandinho | . | 2 | 8277 | K. Walker | . | 3 | 38021 | K. De Bruyne | . | 4 | 11066 | R. Sterling | . | ... | ... | ... | . | 1607 | 210044 | E. Dier | . | 1608 | 240070 | H. Winks | . | 1609 | 447205 | P. Foden | . | 1610 | 11066 | R. Sterling | . | 1611 | 240070 | H. Winks | . 1612 rows × 2 columns . match_events['event_type'].unique() . array(['Pass', 'Duel', 'Others on the ball', 'Interruption', 'Free kick', 'Foul', 'Shot', 'Offside', 'Save attempt', 'Goalkeeper leaving line', 'Substitution'], dtype=object) . match_events[match_events['event_type']=='Shot'] . | | match_id | event_id | period | time | team_id | team_name | player_id | player_name | event_type | sub_event_type | tags | start_x | start_y | end_x | end_y | . | 204 | 2499895 | 215108558 | 1H | 549.772 | 1625 | Manchester City | 8325 | S. Agüero | Shot | Shot | [Head/body, Opportunity, Position: Out low rig... | 95.68 | 25.84 | 104.00 | 34.00 | . | 299 | 2499895 | 215108640 | 1H | 822.817 | 1625 | Manchester City | 14808 | İ. Gündoğan | Shot | Shot | [Goal, Head/body, Opportunity, Position: Goal ... | 95.68 | 38.76 | 104.00 | 34.00 | . | 452 | 2499895 | 215108755 | 1H | 1380.188 | 1625 | Manchester City | 8325 | S. Agüero | Shot | Shot | [Left foot, Opportunity, Position: Goal low ce... | 88.40 | 49.64 | 104.00 | 34.00 | . | 456 | 2499895 | 215108760 | 1H | 1385.615 | 1625 | Manchester City | 11066 | R. Sterling | Shot | Shot | [Left foot, Opportunity, Position: Out high le... | 91.52 | 42.84 | 104.00 | 34.00 | . | 480 | 2499895 | 215108786 | 1H | 1474.472 | 1625 | Manchester City | 38021 | K. De Bruyne | Shot | Shot | [Left foot, Opportunity, Position: Goal low le... | 80.08 | 36.72 | 104.00 | 34.00 | . | 506 | 2499895 | 215108826 | 1H | 1590.043 | 1625 | Manchester City | 14808 | İ. Gündoğan | Shot | Shot | [Counter attack, Right foot, Opportunity, Posi... | 91.52 | 45.56 | 104.00 | 34.00 | . | 546 | 2499895 | 215108879 | 1H | 1693.638 | 1625 | Manchester City | 8325 | S. Agüero | Shot | Shot | [Right foot, Blocked, Not accurate] | 91.52 | 22.44 | 92.56 | 24.48 | . | 606 | 2499895 | 215108944 | 1H | 1959.94 | 1625 | Manchester City | 8325 | S. Agüero | Shot | Shot | [Left foot, Opportunity, Position: Out low rig... | 85.28 | 34.00 | 104.00 | 34.00 | . | 632 | 2499895 | 215109180 | 1H | 2047.956 | 1624 | Tottenham Hotspur | 8717 | H. Kane | Shot | Shot | [Right foot, Opportunity, Position: Out low ri... | 85.28 | 51.00 | 104.00 | 34.00 | . | 777 | 2499895 | 215109097 | 1H | 2633.298 | 1625 | Manchester City | 8325 | S. Agüero | Shot | Shot | [Counter attack, Left foot, Blocked, Not accur... | 90.48 | 20.40 | 89.44 | 29.24 | . | 810 | 2499895 | 215109134 | 1H | 2730.426 | 1625 | Manchester City | 14808 | İ. Gündoğan | Shot | Shot | [Right foot, Opportunity, Position: Goal cente... | 76.96 | 38.08 | 104.00 | 34.00 | . | 960 | 2499895 | 215109497 | 2H | 381.565 | 1624 | Tottenham Hotspur | 48 | J. Vertonghen | Shot | Shot | [Right foot, Blocked, Not accurate] | 87.36 | 46.24 | 93.60 | 44.20 | . | 1027 | 2499895 | 215109572 | 2H | 574.986 | 1624 | Tottenham Hotspur | 8717 | H. Kane | Shot | Shot | [Right foot, Opportunity, Position: Goal cente... | 80.08 | 35.36 | 104.00 | 34.00 | . | 1072 | 2499895 | 215109661 | 2H | 779.26 | 1624 | Tottenham Hotspur | 8292 | D. Rose | Shot | Shot | [Left foot, Opportunity, Position: Out high ri... | 85.28 | 47.60 | 104.00 | 34.00 | . | 1081 | 2499895 | 215109454 | 2H | 815.724 | 1625 | Manchester City | 245364 | L. Sané | Shot | Shot | [Left foot, Position: Out high left, Not accur... | 92.56 | 47.60 | 104.00 | 34.00 | . | 1162 | 2499895 | 215109783 | 2H | 1119.05 | 1624 | Tottenham Hotspur | 14911 | Son Heung-Min | Shot | Shot | [Left foot, Opportunity, Position: Out high le... | 82.16 | 26.52 | 104.00 | 34.00 | . | 1224 | 2499895 | 215109623 | 2H | 1280.933 | 1625 | Manchester City | 245364 | L. Sané | Shot | Shot | [Right foot, Opportunity, Position: Goal cente... | 91.52 | 39.44 | 104.00 | 34.00 | . | 1226 | 2499895 | 215109624 | 2H | 1283.849 | 1625 | Manchester City | 11066 | R. Sterling | Shot | Shot | [Left foot, Opportunity, Position: Out high ce... | 96.72 | 32.64 | 104.00 | 34.00 | . | 1261 | 2499895 | 215109644 | 2H | 1486.873 | 1625 | Manchester City | 38021 | K. De Bruyne | Shot | Shot | [Goal, Counter attack, Left foot, Opportunity,... | 94.64 | 48.28 | 104.00 | 34.00 | . | 1347 | 2499895 | 215109704 | 2H | 1799.53 | 1625 | Manchester City | 11066 | R. Sterling | Shot | Shot | [Left foot, Opportunity, Position: Out high le... | 92.56 | 30.60 | 104.00 | 34.00 | . | 1434 | 2499895 | 215109780 | 2H | 2094.226 | 1625 | Manchester City | 11066 | R. Sterling | Shot | Shot | [Goal, Counter attack, Right foot, Opportunity... | 102.96 | 29.92 | 104.00 | 34.00 | . | 1492 | 2499895 | 215109837 | 2H | 2416.323 | 1625 | Manchester City | 265673 | Bernardo Silva | Shot | Shot | [Left foot, Opportunity, Position: Goal low le... | 96.72 | 48.28 | 104.00 | 34.00 | . | 1537 | 2499895 | 215109889 | 2H | 2526.102 | 1625 | Manchester City | 11066 | R. Sterling | Shot | Shot | [Left foot, Opportunity, Position: Goal high l... | 81.12 | 36.72 | 104.00 | 34.00 | . | 1566 | 2499895 | 215109918 | 2H | 2645.632 | 1625 | Manchester City | 11066 | R. Sterling | Shot | Shot | [Goal, Right foot, Opportunity, Position: Goal... | 95.68 | 27.88 | 104.00 | 34.00 | . | 1600 | 2499895 | 215110118 | 2H | 2826.583 | 1624 | Tottenham Hotspur | 54 | C. Eriksen | Shot | Shot | [Goal, Left foot, Opportunity, Position: Goal ... | 84.24 | 38.08 | 104.00 | 34.00 | . match_events[['team_id', 'team_name', 'player_id', 'player_name']].drop_duplicates() . | | team_id | team_name | player_id | player_name | . | 0 | 1625 | Manchester City | 8325 | S. Agüero | . | 1 | 1625 | Manchester City | 105339 | Fernandinho | . | 2 | 1625 | Manchester City | 8277 | K. Walker | . | 3 | 1625 | Manchester City | 38021 | K. De Bruyne | . | 4 | 1625 | Manchester City | 11066 | R. Sterling | . | 5 | 1624 | Tottenham Hotspur | 240070 | H. Winks | . | 7 | 1624 | Tottenham Hotspur | 8292 | D. Rose | . | 9 | 1624 | Tottenham Hotspur | 0 | NaN | . | 12 | 1624 | Tottenham Hotspur | 8717 | H. Kane | . | 14 | 1625 | Manchester City | 70086 | N. Otamendi | . | 19 | 1624 | Tottenham Hotspur | 11152 | M. Dembélé | . | 20 | 1624 | Tottenham Hotspur | 210044 | E. Dier | . | 21 | 1624 | Tottenham Hotspur | 25381 | H. Lloris | . | 22 | 1624 | Tottenham Hotspur | 48 | J. Vertonghen | . | 33 | 1625 | Manchester City | 8464 | F. Delph | . | 35 | 1625 | Manchester City | 71654 | Ederson | . | 54 | 1624 | Tottenham Hotspur | 8945 | K. Trippier | . | 59 | 1624 | Tottenham Hotspur | 14911 | Son Heung-Min | . | 64 | 1624 | Tottenham Hotspur | 54 | C. Eriksen | . | 83 | 1625 | Manchester City | 245364 | L. Sané | . | 88 | 1625 | Manchester City | 70085 | E. Mangala | . | 89 | 1625 | Manchester City | 14808 | İ. Gündoğan | . | 107 | 1625 | Manchester City | 0 | NaN | . | 139 | 1624 | Tottenham Hotspur | 13484 | D. Alli | . | 1047 | 1625 | Manchester City | 340386 | Gabriel Jesus | . | 1362 | 1624 | Tottenham Hotspur | 20441 | E. Lamela | . | 1452 | 1625 | Manchester City | 447205 | P. Foden | . | 1457 | 1624 | Tottenham Hotspur | 25804 | M. Sissoko | . | 1476 | 1625 | Manchester City | 265673 | Bernardo Silva | . match_events[['team_id', 'team_name', 'player_id', 'player_name']].drop_duplicates().sort_values('team_id') . | | team_id | team_name | player_id | player_name | . | 59 | 1624 | Tottenham Hotspur | 14911 | Son Heung-Min | . | 1362 | 1624 | Tottenham Hotspur | 20441 | E. Lamela | . | 54 | 1624 | Tottenham Hotspur | 8945 | K. Trippier | . | 139 | 1624 | Tottenham Hotspur | 13484 | D. Alli | . | 5 | 1624 | Tottenham Hotspur | 240070 | H. Winks | . | 7 | 1624 | Tottenham Hotspur | 8292 | D. Rose | . | 9 | 1624 | Tottenham Hotspur | 0 | NaN | . | 12 | 1624 | Tottenham Hotspur | 8717 | H. Kane | . | 64 | 1624 | Tottenham Hotspur | 54 | C. Eriksen | . | 19 | 1624 | Tottenham Hotspur | 11152 | M. Dembélé | . | 20 | 1624 | Tottenham Hotspur | 210044 | E. Dier | . | 21 | 1624 | Tottenham Hotspur | 25381 | H. Lloris | . | 22 | 1624 | Tottenham Hotspur | 48 | J. Vertonghen | . | 1457 | 1624 | Tottenham Hotspur | 25804 | M. Sissoko | . | 0 | 1625 | Manchester City | 8325 | S. Agüero | . | 107 | 1625 | Manchester City | 0 | NaN | . | 1047 | 1625 | Manchester City | 340386 | Gabriel Jesus | . | 1452 | 1625 | Manchester City | 447205 | P. Foden | . | 89 | 1625 | Manchester City | 14808 | İ. Gündoğan | . | 88 | 1625 | Manchester City | 70085 | E. Mangala | . | 33 | 1625 | Manchester City | 8464 | F. Delph | . | 35 | 1625 | Manchester City | 71654 | Ederson | . | 14 | 1625 | Manchester City | 70086 | N. Otamendi | . | 4 | 1625 | Manchester City | 11066 | R. Sterling | . | 3 | 1625 | Manchester City | 38021 | K. De Bruyne | . | 2 | 1625 | Manchester City | 8277 | K. Walker | . | 1 | 1625 | Manchester City | 105339 | Fernandinho | . | 83 | 1625 | Manchester City | 245364 | L. Sané | . | 1476 | 1625 | Manchester City | 265673 | Bernardo Silva | . #이벤트와 sub event의 고유값 확인 및 정렬 match_events[['event_type','sub_event_type']].drop_duplicates().sort_values(['event_type','sub_event_type']) . | | event_type | sub_event_type | . | 16 | Duel | Air duel | . | 18 | Duel | Ground attacking duel | . | 19 | Duel | Ground defending duel | . | 5 | Duel | Ground loose ball duel | . | 34 | Foul | Foul | . | 650 | Foul | Hand foul | . | 298 | Free kick | Corner | . | 35 | Free kick | Free kick | . | 203 | Free kick | Free kick cross | . | 28 | Free kick | Goal kick | . | 1346 | Free kick | Penalty | . | 10 | Free kick | Throw in | . | 954 | Goalkeeper leaving line | Goalkeeper leaving line | . | 9 | Interruption | Ball out of the field | . | 555 | Interruption | Whistle | . | 214 | Offside | | . | 353 | Others on the ball | Acceleration | . | 113 | Others on the ball | Clearance | . | 8 | Others on the ball | Touch | . | 189 | Pass | Cross | . | 145 | Pass | Hand pass | . | 13 | Pass | Head pass | . | 15 | Pass | High pass | . | 313 | Pass | Launch | . | 0 | Pass | Simple pass | . | 160 | Pass | Smart pass | . | 300 | Save attempt | Reflexes | . | 481 | Save attempt | Save attempt | . | 204 | Shot | Shot | . | 1047 | Substitution | Player in | . | 1048 | Substitution | Player out | . ",
    "url": "/docs/3.Side_Projects/1.Football_Analysis/1.Check_Data/",
    
    "relUrl": "/docs/3.Side_Projects/1.Football_Analysis/1.Check_Data/"
  },"63": {
    "doc": "DML - SELECT",
    "title": "DML(Data Manipulation Language)",
    "content": "Ver 0.1.1 . : 데이터베이스의 내부 데이터를 관리하기 위한 언어이다. 데이터를 조회, 추가, 변경, 삭제 등의 작업을 수행하기 위해 사용된다. 특징 . | DDL과 달리 DML은 적는 즉시 반영(Auto Commit)이 되지 않는다. 다시 말해, DML에 의한 데이터 변동은 영구적인 변경이 아니기 때문에 ROLLBACK 으로 다시 되돌릴 수 있다. | 또한, DML은 Target 테이블을 메모리 버퍼 위에 올려두고 변경을 수행하기 때문에, 실시간으로 테이블에 반영되지 않는다. Commit 명령어를 통해 Transaction을 종료해야 해당 변경 사항이 테이블에 반영된다. | . 쿼리 수행 순서 . FROM ➡️ WHERE ➡️ GROUP BY ➡️ HAVING ➡️ SELECT ➡️ ORDER BY . 1) FROM . FROM절에 명시된 테이블이 실제로 존재하는 테이블인지 확인한다. 그리고 SELECT 권한이 있는지도 체크한다. 만약 권한이 없는데 명령을 요청한 경우 semantic error가 발생한다. 2) WHERE . 조건에 해당하는 ROW를 검색한다. 3) GROUP BY . 가져온 Row들을 어떤 방식으로 GROUB BY(압축)할 것인지 체크한다. 💡SELECT절보다 먼저 실행되기 때문에 SELECT절에서 지정한 Alias를 사용할 수 없다. 4) HAVING . GROUP BY 한 Row 중에 버려야할 데이터들이 있는지 체크한다. 5) SELECT . 가져온 Row들 중에 어떤 컬럼들을 출력해야 할지를 체크한다. 💡 일단 Row를 가져오고 난 다음에 SELECT절을 체크하기 때문에 SELECT * FROM 한 것과 컬럼 1개만 SELECT 하는 것과 I/O 비용은 사실상 같다. 6) ORDER BY . SELECT절보다 나중에 실행되기 때문에 SELECT 절에서 지정한 Alias를 사용할 수 있다. ",
    "url": "/docs/5.Oracle/DML/1.DML_SELECT/#dmldata-manipulation-language",
    
    "relUrl": "/docs/5.Oracle/DML/1.DML_SELECT/#dmldata-manipulation-language"
  },"64": {
    "doc": "DML - SELECT",
    "title": "DML - SELECT",
    "content": "작성일자 : 2023-07-01 수정일자 : 2023-07-08 ",
    "url": "/docs/5.Oracle/DML/1.DML_SELECT/",
    
    "relUrl": "/docs/5.Oracle/DML/1.DML_SELECT/"
  },"65": {
    "doc": "Peformance",
    "title": "Dashboard Peformance ",
    "content": "Ver 0.1.1 . | 1. 대시보드 성능 | 2. 데이터 전략으로 성능 향상 | 3. 뷰에서 마크(데이터 요소) 수 줄이기 | 4. 개수와 유형별로 필터 제한 | 5. 계산 최적화 및 구체화 | 6. Tableau의 쿼리 최적화 사용 | 7. 통합 문서 정리 | 8. 참고 자료 | . 1. 대시보드 성능 . Tableau를 일단 시작하면, 간단한 비주얼리제이션에 직관적으로 필드와 수식, 계산을 점점 더 추가하여 결국 렌더링 속도가 점차 느려질 때까지 분석을 심화하게 됩니다. 응답 시간이 2초만 되어도 잠재 고객을 잃는 이 세상에서 성능은 실로 중요합니다. 어떻게 하면 대시보드의 실행 속도를 높일 수 있을까요? 첫 번째 단계는 성능 기록을 실행하고 해석하여 문제 지점을 파악하는 것입니다. 성능 기록기는 Tableau의 가속을 위한 지름길 입장권과도 같습니다. 성능 기록기는 대시보드에서 속도가 느린 워크시트와 쿼리, 오래 걸리는 렌더링 시간을 정확하게 짚어냅니다. 또한 쿼리 텍스트까지도 표시하기 때문에, 데이터베이스 팀과 함께 데이터베이스 수준에서 최적화 작업을 할 수 있습니다. 이제 어떤 뷰나 데이터 연결로 속도가 저하되는지 알았으니, 아래 여섯 가지 팁을 활용하여 대시보드 성능을 높여보시기 바랍니다. 각 팁에는 신속한 해결책뿐만 아니라 성능 저하의 가장 일반적인 원인도 밝혀 놓았습니다. 2. 데이터 전략으로 성능 향상 . 추출은 대개 라이브 데이터 원본을 사용할 때보다 훨씬 속도가 빠르고 특히 프로토타입 생성에 효과적입니다. 비결은 도메인별로 데이터를 구분하여 사용하는 것입니다. 데이터 엔진은 데이터 웨어하우스를 대체하는 용도가 아닙니다 그보다는 빠른 프로토타입 생성과 데이터 발견을 돕기 위한 것입니다. 추출이 열 형식의 저장소이기 때문에 데이터 집합이 넓을수록 쿼리 속도가 느려집니다. | 수행 중인 분석에 맞게 필드 수를 최소화하십시오. 사용하지 않는 열은 사용되지 않은 필드 모두 숨기기 옵션을 사용하여 데이터 원본에서 제거하십시오. | 레코드 수를 최소화하십시오. 추출 필터를 사용하여 필요한 데이터만 둘 수 있습니다. | 계산을 구현하고 열을 제거하고 가속화된 뷰를 사용하여 추출을 최적화하면 향후 쿼리 속도를 높일 수 있습니다. | . 유의점: 추출이 늘 장기적인 해결책이 되지는 않습니다. 일반적인 추출 범위는 5억~10억 개의 행이고, 유용성은 상황에 따라 다릅니다. 계속해서 새로 고치는 데이터를 쿼리할 경우는 뷰 운용에 실시간 연결을 사용하는 것이 더 합리적일 때가 있습니다. 3. 뷰에서 마크(데이터 요소) 수 줄이기 . 데이터가 아주 세부적일 경우 Tableau는 각각의 요소를 렌더링하고 정확한 장소에 놓아야 합니다. 각 마크는 Tableau에서 구문 분석해야 할 배치(일괄 작업)를 뜻합니다. 따라서 마크가 많을수록 처리할 배치도 늘어납니다. 그래프에 점을 1,000개 그리기가 차트에 막대를 3개 그리기보다 더 어렵습니다. 퀵 필터가 많은 큰 크로스탭을 사용하면 Tableau 뷰에서 전체 행과 차원을 보려고 할 때 로드 시간이 늘어날 수 있습니다. 뷰에 마크(데이터 요소)가 과도하게 많으면 시각적 분석의 가치도 떨어집니다. 크고 느린 수동 테이블 스캔은 너무 많은 정보를 가져올 수 있고 데이터를 보고 이해하기가 더 어려워집니다. 이런 함정을 다음과 같이 피할 수 있습니다. | 안내가 제공되는 분석을 수행하십시오. 계획한 모든 것을 하나의 뷰에 넣어서 표시할 필요는 없습니다. 관련 뷰를 컴파일하고 동작 필터로 연결하여 개요에서 세부 뷰로 신속하게 오갈 수 있습니다. | 세부 수준 선반에서 불필요한 차원을 제거하십시오. | 탐색하여 다양한 유형의 뷰에 데이터를 표시해 보십시오. | . 4. 개수와 유형별로 필터 제한 . Tableau의 필터링은 매우 강력하면서도 다양하게 표현할 수 있는 도구입니다. 하지만 필터를 비효율적으로 사용하거나 과도하게 사용하는 경우 통합 문서와 대시보드의 성능이 저하될 수 있습니다. 참고: 필터 대화 상자를 표시하려면 Tableau가 필터 멤버를 로드해야 하고 특히 필터링된 차원이 뷰에 없는 경우에는 추가 쿼리를 생성해야 합니다. | 사용 중인 필터 수를 줄이십시오. 뷰에 필터가 너무 많으면 쿼리가 더 복잡해지고 이로 인해 결과 반환에 시간이 더 오래 걸립니다. 필터를 다시 한번 확인하여 필요 없는 필터는 모두 제거하십시오. | 포함 필터를 사용하십시오. 제외 필터는 차원의 전체 도메인을 로드하는 반면, 포함 필터는 그렇지 않습니다. 특히 많은 멤버가 있는 차원에 대해, 포함 필터가 제외 필터보다 훨씬 더 빠르게 실행됩니다. | 연속형 날짜 필터를 사용하십시오. 연속형 날짜 필터(기준 날짜 범위 필터)는 데이터베이스의 인덱싱 속성을 활용할 수 있기 때문에 불연속형 날짜 필터보다 속도가 빠릅니다. | 부울 또는 숫자 필터를 사용하십시오. 컴퓨터는 문자열보다 정수와 부울(t/f)을 훨씬 더 빨리 처리합니다. | 매개 변수와 동작 필터를 사용하십시오. 그러면 쿼리 로드가 줄어들고 데이터 원본 전체를 대상으로 작업할 수 있습니다. | . 5. 계산 최적화 및 구체화 . | 데이터베이스에서 계산을 수행하십시오. 가능하다면 언제든지, 특히 운영 뷰를 사용할 경우 Tableau의 오버헤드가 줄도록 데이터베이스에서 계산을 수행하십시오. Tableau의 계산된 필드에는 집계 계산이 효과적입니다. 가능하다면 데이터베이스에서 행 수준 계산을 수행하십시오. | 중첩된 계산 수를 줄이십시오. 러시아 중첩 인형에서 보듯이, 계산을 꺼내고 쌓는 일은 하나의 계층이 추가될수록 더 많은 시간이 걸립니다. | 뷰에서 LOD 또는 테이블 계산의 세부 수준을 줄이십시오. 계산이 세부적일수록 시간이 오래 걸립니다. | LOD - 계산에 사용되는 고유한 차원 멤버의 수를 살펴보십시오. | 테이블 계산 - 뷰에 마크가 많을수록 계산 시간이 더 오래 걸립니다. | . | 가능하면 AVG 대신에 MIN 또는 MAX를 사용하십시오. AVG에는 MIN 또는 MAX보다 더 많은 처리 작업이 필요합니다. 종종 행이 중복되어 MIN, MAX 또는 AVG에 같은 결과가 표시됩니다. | 계산으로 그룹을 만드십시오. 포함 필터처럼 계산된 그룹은 도메인의 지정된 멤버만 로드하는 반면, Tableau의 그룹 기능은 전체 도메인을 로드합니다. | 문자열 계산보다는 부울 또는 숫자형 계산을 사용하십시오. 컴퓨터에서는 문자열보다 정수와 부울(t/f)을 훨씬 더 빨리 처리할 수 있습니다. 부울&gt;정수&gt;실수&gt;날짜&gt;날짜/시간&gt;문자열 순입니다. | . 6. Tableau의 쿼리 최적화 사용 . | 낮은 세부 수준의 차원에서 혼합하십시오. 혼합할 멤버가 많을수록 시간이 오래 걸립니다. 혼합은 데이터를 관계 수준으로 집계합니다. 혼합은 행 수준 조인을 대체하는 용도가 아닙니다. | 조인되는 테이블을 최소화하십시오. 조인 수가 많으면 시간이 오래 걸립니다. 많은 수의 조인된 테이블로 데이터 연결을 만들 때는 데이터베이스에서 뷰를 구현하는 것이 더 빠를 수 있습니다. | 데이터베이스가 여러 조인으로 구성되었다면 참조 무결성을 가정하십시오. | . | 사용자 지정 SQL을 제거하십시오. 데이터 연결에 사용자 지정 SQL이 사용되지 않은 경우 Tableau에서 데이터베이스 최적화를 활용할 수 있습니다. | . 7.통합 문서 정리 . | 대시보드 범위를 줄이십시오. 하나의 대시보드에 과도하게 많은 워크시트를 사용하면 성능이 떨어질 수 있습니다. | 사용하지 않는 워크시트와 데이터 원본은 삭제하거나 통합하십시오. 깔끔한 통합 문서가 좋은 통합 문서입니다. | . 8.참고 자료 . | Best Practices for Designing Efficient Tableau Workbooks | 통합 문서 성능 최적화 . | 통합 문서 최적화 프로그램 | 통합 문서 간소화 | 데이터베이스 수준에서 데이터 파악 | 데이터 테스트 및 추출 사용 | 성능을 고려한 뷰 작성 | 효율적인 계산 만들기 | 더욱 빠른 비주얼리제이션 만들기 | 통합 문서 성능 기록 및 분석 | Tableau Server 업로드 시간 줄이기 | 자동 업데이트를 해제하여 성능 개선 | . | Visualization | . ",
    "url": "/docs/4.Tableau/Desktop/1.Peformance/",
    
    "relUrl": "/docs/4.Tableau/Desktop/1.Peformance/"
  },"66": {
    "doc": "Peformance",
    "title": "Peformance",
    "content": "작성일자 : 2023-09-03 출처 : Tableau Blog ",
    "url": "/docs/4.Tableau/Desktop/1.Peformance/",
    
    "relUrl": "/docs/4.Tableau/Desktop/1.Peformance/"
  },"67": {
    "doc": "ALTER TABLE",
    "title": "ALTER TABLE ",
    "content": "Ver 0.1.2 . | 1.칼럼 추가 | 2.칼럼 수정 | 3.칼럼명 변경 | 4.제약조건(Constraints) 추가 | 5.제약조건(Constraints) 삭제 | 6.칼럼 삭제 | 7.COMMENT | . 1. 칼럼 추가 . | 테이블에 칼럼을 추가할 때는 ALTER TABLE 명령문의 ADD 절을 사용한다. | 추가한 칼럼들은 기존 칼럼들 맨 뒤에 추가된다. | Syntax | . | . ALTER TABLE [schema.]table ADD(column datatype [DEFAULT expr][NOT NULL] [,column datatype [DEFAULT expr][NOT NULL]]... ); . | 구문 설명 . | column : 테이블에 추가할 칼럼의 이름 | datatype : 해당 칼럼에 저장될 데이터의 타입(ex. varchar2, number, date, ..) | DEFAULT : 해당 칼럼에 값이 입력되지 않을 경우, 저장될 기본 값(expr) | NOT NULL : 해당 칼럼에 NOT NULL 제약 조건을 지정 | . | . EX) . ALTER TABLE t1 ADD( HIREDATE DATE NOT NULL ,COMM NUMBER DEFAULT 500 ); . DESC t1 . | COLUMN | Nullable | Type | . | EMPNO |   | NUMBER(4) | . | ENAME | NOT NULL | VARCHAR2(10) | . | SAL |   | NUMBER(7,2) | . | DEPTNO | NOT NULL | NUMBER(2) | . | HIREDATE | NOT NULL | DATE | . | COMM |   | NUMBER | . 2. 칼럼 수정 . | 기존 칼럼의 구조를 수정할 때는 ALTER TABLE 명령문의 MODIFY 절을 사용한다. | 기존 칼럼에 값이 존재하면, 데이터 타입의 크기를 줄일 수 없다. (크기를 늘리는 것은 가능하다.) . | Syntax | . | . ALTER TABLE [schema.]table MODIFY(column datatype [DEFAULT expr][NOT NULL] [,column datatype [DEFAULT expr][NOT NULL]]... ); . | 구문 설명 . | column : 수정하려는 칼럼의 이름 | datatype : 해당 칼럼에 저장될 데이터의 타입(ex. varchar2, number, date, ..) | DEFAULT : 해당 칼럼에 값이 입력되지 않을 경우, 저장될 기본 값(expr) | NOT NULL : 해당 칼럼에 NOT NULL 제약 조건을 지정 | . | . EX) . ALTER TABLE t1 MODIFY( ENAME VARCHAR2(10) ,HIREDATE VARCHAR2(8) NULL ); . DESC t1 . 수정 후 . | COLUMN | Nullable | Type | . | EMPNO |   | NUMBER(4) | . | ENAME | NOT NULL | VARCHAR2(10) | . | SAL |   | NUMBER(7,2) | . | DEPTNO | NOT NULL | NUMBER(2) | . | HIREDATE |   | VARCHAR2(8) | . | COMM |   | NUMBER | . 수정 전 . | COLUMN | Nullable | Type | . | EMPNO |   | NUMBER(4) | . | ENAME | NOT NULL | VARCHAR2(20) | . | SAL |   | NUMBER(7,2) | . | DEPTNO | NOT NULL | NUMBER(2) | . | HIREDATE | NOT NULL | DATE | . | COMM |   | NUMBER | . 3. 칼럼명 변경 . | 기존 칼럼의 이름을 변경할 때는 ALTER TABLE 명령문의 RENAME COLUMN 절을 사용한다. | Syntax | . | . ALTER TABLE [schema.]table RENAME COLUMN old_column TO new_column; . | 구문 설명 . | old_column : 기존 칼럼의 변경 전 이름 | new_column : 칼럼의 변경 후 이름 | . | . EX) . ALTER TABLE t1 RENAME COLUMN COMM TO COMMISION; . DESC t1 . | COLUMN | Nullable | Type | . | EMPNO |   | NUMBER(4) | . | ENAME | NOT NULL | VARCHAR2(10) | . | SAL |   | NUMBER(7,2) | . | DEPTNO | NOT NULL | NUMBER(2) | . | HIREDATE |   | VARCHAR2(8) | . | COMMISION |   | NUMBER | . 4. 제약조건(Constraints) 추가 . | 특정 칼럼에 제약 조건을 추가할 때는 ALTER TABLE 명령문의 ADD CONSTRAINT 절을 사용한다. | Syntax | . | . ALTER TABLE [schema.]table ADD CONSTRAINT constraint_name constraint_type (column [, column, ...]); . | 구문 설명 . | constraint_name : 추가하려는 제약 조건의 이름 | constraint_type : 추가하려는 제약 조건의 유형 | column : 해당 제약 조건이 적용될 칼럼(들) | . | . | 제약 조건(Constraints) : 오라클 데이터베이스는 데이터 무결성(Data Integrity)을 보장하기 위해 아래와 같은 제약 조건을 지정할 수 있다. | . | 제약조건 | 설명 | . | UNIQUE 제약 | - UNIQUE 제약 조건이 걸린 칼럼(들)에 대해서 동일한 값이 입력되지 못하게 제약한다.&lt;/u&gt; | . | NOT NULL 제약 | - NOT NULL 제약 조건이 걸린 칼럼에 대해서 NULL 값이 입력되지 못하게 제약한다.&lt;/u&gt; | . | PK(Primary Key) 제약 | - PK 제약 조건 = UNIQUE 제약 조건 + NOT NULL 제약 조건&lt;/u&gt;- 식별자(개별 행을 고유하게 식별할 수 있는 구분자) 역할을 하는 칼럼에 대해 지정한다. | . | FK(Foreign Key) 제약 | - FK 제약조건이 걸린 두 테이블의 칼럼(들)에 대해서 아래와 같은 제약을 한다.- 부모 테이블에 존재하지 않는 칼럼 값은 자식 테이블에 입력할 수 없다.&lt;/u&gt;-자식 테이블에 존재하는 칼럼 값은 부모 테이블에서 삭제할 수 없다.&lt;/u&gt; | . | CHECK 제약 | - CHECK 제약 조건이 걸린 칼럼에 대해조건을 만족하지 않는 값이 입력되지 못하게 한다.-TRUE or FALSE로 평가될 수 있는 조건을 지정한다. | . EX) PK 추가 예제 . ALTER TABLE t2 ADD CONSTRAINT t2_pk PRIMARY KEY (DEPTNO); . INSERT INTO t2 (DEPTNO, DNAME, LOC) VALUES(10, 'ACCOUNTING', 'NEWYORK'); INSERT INTO t2 (DEPTNO, DNAME, LOC) VALUES(20, 'RESEARCH', 'DALLAS'); INSERT INTO t2 (DEPTNO, DNAME, LOC) VALUES(20, 'OPERATIONS', 'BOSTON'); ORA-00001 : 무결성 제약 조건(T2_PK)에 위배됩니다. INSERT INTO t2 (DEPTNO, DNAME, LOC) VALUES(30, 'RESEARCH', 'DALLAS'); INSERT INTO t2 (DEPTNO, DNAME, LOC) VALUES(NULL, 'SALES', 'CHICAGO'); ORA-01400 : NULL을 (\"T2\",\"DEPTNO\")안에 삽입할 수 없습니다. COMMIT; . | DEPTNO | DNAME | LOC | . | 10 | ACCOUNTING | NEW YORK | . | 20 | RESEARCH | DALLAS | . | 30 | RESEARCH | DALLAS | . EX) FK 추가 예제 . ALTER TABLE t1 ADD CONSTRAINT t1_fk FOREIGN KEY (DEPTNO) REFERENCES t2 (DEPTNO); . INSERT INTO t1 (EMPNO,ENAME,HIREDATE) VALUES(7782, 'CLARK', 10, '19810609'); INSERT INTO t1 (EMPNO,ENAME,HIREDATE) VALUES(7369, 'SMITH', 20, '19801217'); INSERT INTO t1 (EMPNO,ENAME,HIREDATE) VALUES(7566, 'JONES', 20, '19810402'); INSERT INTO t1 (EMPNO,ENAME,HIREDATE) VALUES(7499, 'ALLEN', 50, '19810220'); ORA-02291 : 무결성 제약 조건(T1_FK)이 위배되었습니다 - 부모 키가 없습니다. DELETE t2 a WHERE a.DEPTNO = 30; DELETE t2 a WHERE a.DEPTNO = 20; ORA-02292 : 무결성 제약 조건(T1_FK)이 위배되었습니다 - 자식 레코드가 발견되었습니다. COMMIT; . [T1 조회 결과] . | EMPNO | ENAME | SAL | DEPTNO | HIREDATE | COMMISION | . | 7782 | CLARK |   | 10 | 19810609 | 500 | . | 7369 | SMITH |   | 20 | 19801217 | 500 | . | 7566 | JONES |   | 20 | 19810402 | 500 | . [T2 조회 결과] . | DEPTNO | HIREDATE | COMMISION | . | 10 | ACCOUNTING | NEW YORK | . | 20 | RESEARCH | DALLAS | . | 20 | RESEARCH | DALLAS | . 5. 제약조건(Constraints) 삭제 . 칼럼에 걸려 있는 제약 조건을 삭제할 때는 ALTER TABLE 명령문의 DROP CONTRAINT 절을 사용한다. | Syntax | . ALTER TABLE [schema.]table DROP CONSTRAINT constraint_name [CASCADE]; . | 구문 설명 . | constraint_name : 삭제하려는 제약 조건의 이름 | CASCADE : 참조하고 있는 FK 제약 조건을 함께 삭제 | . | . EX) PK 삭제 예제 . ALTER TABLE t2 DROP CONSTRAINT t1_pk; ORA-02273 : 고유/기본 키가 외부 키에 의해 참조되었습니다 ALTER TABLE t2 DROP CONSTRAINT t1_pk CASCADE; -- t2_pk, t1_fk 제약 조건 삭제 . DELETE t2 a WHERE a.DEPTNO = 10; INSERT INTO t2 (DEPTNO, DNAME, LOC) VALUES(20, 'RESEARCH', 'DALLAS'); INSERT INTO t2 (DEPTNO, DNAME, LOC) VALUES(20, 'RESEARCH', 'DALLAS'); INSERT INTO t1 (EMPNO,ENAME,HIREDATE) VALUES(7499, 'ALLEN', 50, '19810220'); INSERT INTO t1 (EMPNO,ENAME,HIREDATE) VALUES(7902, 'FORD', 90, '19811203'); COMMIT; . [T2 조회 결과] . | DEPTNO | HIREDATE | COMMISION | . | 20 | RESEARCH | DALLAS | . | 20 | RESEARCH | DALLAS | . | 20 | RESEARCH | DALLAS | . [T1 조회 결과] . | EMPNO | ENAME | SAL | DEPTNO | HIREDATE | COMMISION | . | 7782 | CLARK |   | 10 | 19810609 | 500 | . | 7369 | SMITH |   | 20 | 19801217 | 500 | . | 7566 | JONES |   | 20 | 19810402 | 500 | . | 7499 | ALLEN |   | 50 | 19810220 | 500 | . | 7902 | FORD |   | 90 | 19811203 | 500 | . 6. 칼럼 삭제 . 기존 칼럼을 삭제할 때는 ALTER TABLE 명령문의 DROP 절을 사용한다. | Syntax | . ALTER TABLE [schema.]table DROP (column [, colmun, ...]) [CASCADE CONTRAINS]; . | 구문 설명 . | column : 삭제하려는 칼럼의 이름 | CASCADE CONSTRAINTS : 참조하고 있는 FK 제약 조건을 함께 삭제 | . | . EX) 칼럼 삭제 예제 . ALTER TABLE t1 DROP (hiredate, commission); . DESC t1 . | COLUMN | Nullable | Type | . | EMPNO |   | NUMBER(4) | . | ENAME | NOT NULL | VARCHAR2(10) | . | SAL |   | NUMBER(7,2) | . | DEPTNO | NOT NULL | NUMBER(2) | . | EMPNO | ENAME | SAL | DEPTNO | . | 7782 | CLARK |   | 10 | . | 7369 | SMITH |   | 20 | . | 7566 | JONES |   | 20 | . | 7499 | ALLEN |   | 50 | . | 7902 | JONES |   | 90 | . 7. COMMENT . 테이블에 관한 코멘트를 추가할 때는 COMMENT 문을 사용한다. | Syntax | . COMMENT ON TABLE [schema.]table IS 'comment'; . | 구문 설명 . | table : 대상 테이블명 | comment : 테이블에 추가할 코멘트 | . | . EX) . COMMENT ON TABLE t1 IS '사원'; . SELECT a.* FROM user_tab_comments a WHERE a.table_name = 'T1'; . | TABLE_NAME | TABLE_TYPE | COMMENT | . | T1 | TABLE | 사원 | . 칼럼에 관한 코멘트를 추가할 때도 COMMENT 문을 사용한다. | Syntax | . COMMENT ON COLUMN [schema.]table.column IS 'comment'; . | 구문 설명 . | table : 대상 테이블명 | column : 대상 칼럼명 | comment : 테이블에 추가할 코멘트 | . | . EX) . COMMENT ON COLUMN t1.empno IS '사원번호'; COMMENT ON COLUMN t1.ename IS '사원명'; COMMENT ON COLUMN t1.sal IS '급여'; COMMENT ON COLUMN t1.deptno IS '부서번호'; . SELECT a.* FROM user_col_comments a WHERE a.table_name = 'T1'; . | TABLE_NAME | COLUMN_NAME | COMMENT | . | T1 | EMPNO | 사원번호 | . | T1 | ENAME | 사원명 | . | T1 | SAL | 급여 | . | T1 | DEPTNO | 부서번호 | . ",
    "url": "/docs/5.Oracle/DDL/2.ALTER_Table/",
    
    "relUrl": "/docs/5.Oracle/DDL/2.ALTER_Table/"
  },"68": {
    "doc": "ALTER TABLE",
    "title": "ALTER TABLE",
    "content": "작성일자 : 2023-08-18 수정일자 : 2023-09-03 ",
    "url": "/docs/5.Oracle/DDL/2.ALTER_Table/",
    
    "relUrl": "/docs/5.Oracle/DDL/2.ALTER_Table/"
  },"69": {
    "doc": "DML",
    "title": "DML(Data Manipulation Language)",
    "content": "Ver 0.1.2 . | 1. INSERT | 2. UPDATE | 3. DELETE | 4. MERGE | . | 데이터베이스의 내부 데이터를 관리하기 위한 언어이다. 데이터를 CRUD( Create, Read, Update, Delete) 작업을 수행하기 위해 사용된다. | SELECT문을 제외한 DML문은 데이터의 변경 및 LOCK을 발생 시키기 때문에 사용에 주의를 기울여야 한다.(다른 사용자에게 영향을 미칠 수 있다.) . | . | 종류 | 설명 | . | INSERT 문 | 테이블에 신규 행을 삽입하는 SQL 문 | . | UPDATE 문 | 테이블에 기존 행을 갱신하는 SQL 문 | . | DELETE 문 | 테이블에 기존 행을 삭제하는 SQL 문 | . | MERGE 문 | 두 집합(소스, 타겟) 간에 데이터를 병합하는 SQL 문 | . 1. INSERT . | 아래 INSERT 문을 사용하면 한 번에 1건만 테이블에 삽입된다. | . INSERT INTO TABLE(COL1, COL2, ...) VALUES(VALUE1, VALUE2, ...) . | 구문 설명 . | TABLE : 테이블 이름 | COLUMN : 데이터를 삽입할 칼럼의 이름 | VALUE : 해당 칼럼에 입력하고자 하는 값 | . | 테이블의 전체 칼럼에 대해 값을 모두 입력할 경우, 문법적으로 칼럼 목록을 생략할 수 있으나, 테이블 구조 변경 등에 의한 잠재적인 문제를 내포하지 않게 되므로 항상 칼럼 목록을 명시하는 것이 좋다. | 예시 | . DROP TABLE t1 PURGE; CREATE TABLE t1 ( EMPNO NUMBER(4) ,ENAME VARCHAR(10) ,SAL NUMBER ,DEPTNO NUMBER DEFAULT 20 ); . -- 추천 방법 : 칼럼명 명시 INSERT INTO t1 (EMPNO, ENAME, SAL, DEPTNO) VALUES(7369, 'SMITH', 800, 20); . -- 추천하지 않는 방법 : 칼럼명 미명시 INSERT INTO t1 VALUES(7499, 'ALLEN', 1600, 30); . INSERT INTO t1 (EMPNO, SAL) VALUES(7521, 1250); . | EMPNO | ENAME | SAL | DEPTNO | . | 7369 | SMITH | 800 | 20 | . | 7499 | ALLEN | 1600 | 30 | . | 7521 |   | 1250 | 20 | . ROLLBACK; -- 취소 . | INSERT SELECT문(서브쿼리를 포함하 INSERT문)을 사용하면, 다중 행 결과 집합을 추출하여 한번에 삽입할 수 있다. | . INSERT INTO TABLE(COL1, COL2, ...) (subquery); . | 구문 설명 . | TABLE : 테이블 이름 | COLUMN : 데이터를 삽입할 칼럼의 이름 | SUBQUERY : 테이브레 삽입할 행을 리턴하는 서브 쿼리 | . | VALUES 절은 사용하지 않으며,칼럼 목록의 칼럼 수와 서브 쿼리의 SELECT 절에 있는 칼럼 수가 일치하여야 한다. | 예시 INSERT INTO t1 (EMPNO, ENAME, SAL, DEPTNO) SELECT A.EMPNO ,A.ENAME ,A.SAL ,A.DEPTNO FROM EMP A WHERE A.DEPTNO = 10; . | . | EMPNO | ENAME | SAL | DEPTNO | . | 7934 | MILLER | 1300 | 10 | . | 7782 | CLARK | 2450 | 10 | . | 7839 | KING | 5000 | 10 | . ROLLBACK; -- 취소 . INSERT INTO t1 (EMPNO, ENAME) SELECT A.EMPNO ,A.ENAME FROM EMP A WHERE A.SAL &lt; 1000; . | EMPNO | ENAME | SAL | DEPTNO | . | 7369 | SMITH |   | 20 | . | 7900 | JAMES |   | 20 | . ROLLBACK; -- 취소 . 2. UPDATE . | UPDATE 문을 사용하여 테이블의 기존 행들을 수정할 수 있다. | . UPDATE TABLE SET COL1 = VAL1 ,COL2 = VAL2 ,... WHERE CONTIDION; . | 구문 설명 . | TABLE : 테이블 이름 | COLUMN : 데이터를 갱신할 칼럼의 이름 | VALUE : 해당 칼럼에 대해 갱신하려는 값 | CONDITION : 갱신될 행을 식별할 조건 | . | 예시 INSERT INTO t1 (EMPNO, ENAME, SAL, DEPTNO) SELECT A.EMPNO ,A.ENAME ,A.SAL ,A.DEPTNO FROM EMP A WHERE A.JOB = 'CLERK'; . | . | EMPNO | ENAME | SAL | DEPTNO | . | 7369 | SMITH | 800 | 20 | . | 7876 | ADAMS | 1100 | 20 | . | 7900 | JAMES | 1300 | 30 | . | 7934 | MILLER | 1300 | 10 | . UPDATE t1 SET A.ENAME = LOWER(A.ENAME) ,A.SAL = A.SAL + 2000 WHERE A.SAL &lt; 1000; . | EMPNO | ENAME | SAL | DEPTNO | . | 7369 | smith | 800 | 20 | . | 7876 | ADAMS | 1100 | 20 | . | 7900 | james | 2950 | 30 | . | 7934 | MILLER | 1300 | 10 | . ROLLBACK; -- 취소 . | 상호 관련 UPDATE . | 상관 서브 쿼리를 사용하면 다른 테이블 값의 값을 참조하여 데이터를 갱신할 수 있다. | . | . UPDATE TABLE SET COL1 = (SUBQUERY) ,COL2 = (SUBQUERY) ,... WHERE CONTIDION; . | 구문 설명 . | TABLE : 테이블 이름 | COLUMN : 데이터를 갱신할 칼럼의 이름 | SUBQUERY : 갱실할 값을 리턴하는 서브쿼리 | CONDITION : 갱신될 행을 식별할 조건 | . | 예시 INSERT INTO t1 (EMPNO, ENAME, SAL, DEPTNO) SELECT A.EMPNO ,A.ENAME ,A.SAL ,A.DEPTNO FROM EMP A WHERE A.JOB = 'CLERK'; . | . | EMPNO | ENAME | SAL | DEPTNO | . | 7369 | SMITH | 800 | 20 | . | 7876 | ADAMS | 1100 | 20 | . | 7900 | JAMES | 1300 | 30 | . | 7934 | MILLER | 1300 | 10 | . UPDATE t1 SET A.SAL = (SELECT ROUND(AVG(X.SAL)) FROM EMP X WHERE X.DEPTNO = A.DEPTNO AND X.DEPTNO &lt;&gt; 10) ,A.DETNO = 30; . UPDATE 문에 WHERE절을 기술하지 않으면 테이블의 전체 행이 수정됩니다. 실무에서는 필요한 행만 선택해서 수정하는 경우가 훨씬 더 많기 때문에, “WHERE 절을 기술하는 것이 일반적이다.”라고 알아두기 . | EMPNO | ENAME | SAL | DEPTNO | . | 7369 | SMITH | 2175 | 30 | . | 7876 | ADAMS | 2175 | 30 | . | 7900 | JAMES | 1567 | 30 | . | 7934 | MILLER |   | 30 | . ROLLBACK; -- 취소 . | UPDATE 문 사전 검증 . | 사전에 SELECT 문을 작성하여 갱신할 행과 값을 미리 확인하면 실수를 방지할 수 있다. | . | 사전 검증 SELECT 문 SELECT A.* ,A.SAL AS SAL_BF ,(SELECT ROUND(AVG(X.SAL)) FROM EMP X WHERE X.DEPTNO = A.DEPTNO AND X.DEPTNO &lt;&gt; 10) AS SAL_AF FROM t1 A WHERE A.DEPTNO &lt;= 20; . | UPDATE 문 UPDATE t1 A SET A.SAL =(SELECT ROUND(AVG(X.SAL)) FROM EMP X WHERE X.DEPTNO = A.DEPTNO AND X.DEPTNO &lt;&gt; 10) WHERE A.DEPTNO &lt;= 20; . | . ROLLBACK; -- 취소 . 3. DELETE . | DELETE 문을 사용하여 테이블의 기존 행들을 삭제할 수 있다. | . DELETE [FROM] TABLE WHERE CONTIDION; . | 구문 설명 . | TABLE : 테이블 이름 | CONDITION : 삭제될 행을 식별할 조건 | . | . 테이블 데이터 전체 삭제 . TRUNCATE TABLE table; . ※ TRUNCATE TABLE 문은 Auto Commit을 발생시키므로 사용에 유의 . | 예시 INSERT INTO t1 (EMPNO, ENAME, SAL, DEPTNO) SELECT A.EMPNO ,A.ENAME ,A.SAL ,A.DEPTNO FROM EMP A WHERE A.JOB = 'CLERK'; . | . | EMPNO | ENAME | SAL | DEPTNO | . | 7369 | SMITH | 800 | 20 | . | 7876 | ADAMS | 1100 | 20 | . | 7900 | JAMES | 1300 | 30 | . | 7934 | MILLER | 1300 | 10 | . DELETE t1 A WHERE A.EMPNO &lt;&gt; 7369; . | EMPNO | ENAME | SAL | DEPTNO | . | 7369 | SMITH | 800 | 20 | . ROLLBACK; -- 취소 . | 상호 관련 DELETE . | WHERE 절에 상관 서브 쿼리를 사용하여 삭제될 행을 지정할 수 있다. | . | 예시 INSERT INTO t1 (EMPNO, ENAME, SAL, DEPTNO) SELECT A.EMPNO ,A.ENAME ,A.SAL ,A.DEPTNO FROM EMP A WHERE A.JOB = 'CLERK'; . | . | EMPNO | ENAME | SAL | DEPTNO | . | 7369 | SMITH | 800 | 20 | . | 7876 | ADAMS | 1100 | 20 | . | 7900 | JAMES | 1300 | 30 | . | 7934 | MILLER | 1300 | 10 | . DELETE t1 A WHERE EXIST (SELECT 'X' FROM DEPT X WHERE X.LOC = 'DALLAS' AND X.DEPTNO = A.DEPTNO); . | EMPNO | ENAME | SAL | DEPTNO | . | 7900 | JAMES | 1300 | 30 | . | 7934 | MILLER | 1300 | 10 | . ROLLBACK; -- 취소 . | DELETE 문 사전 검증 . | 사전에 SELECT 문을 작성하여 삭제할 행을 미리 확인하면 실수를 방지할 수 있다. | . | 사전 검증 SELECT 문 SELECT A.* FROM t1 A WHERE EXIST (SELECT 'X' FROM DEPT X WHERE X.LOC = 'DALLAS' AND X.DEPTNO = A.DEPTNO); . | UPDATE 문 DELETE t1 A WHERE EXIST (SELECT 'X' FROM DEPT X WHERE X.LOC = 'DALLAS' AND X.DEPTNO = A.DEPTNO); . | . ROLLBACK; -- 취소 . 4. MERGE . | MERGE 문을 사용하면 조건에 따라 데이터를 갱신하거나 삽입할 수 있다. | 조인 조건을 만족하는 경우 갱신(UPDATE)를 수행하고, 만족하지 않을 경우 삽입(INSERT)를 수행한다. | . | . MERGE INTO target_table a USING (source_set) b ON (join condition) WHEN MATCHED THEN UPDATE SET a.COL1 = VAL1 ,a.COL2 = VAL2 ,... [WHERE condition] [DELETE WHERE condition] WHEN NOT MATCHED THEN INSERT (a.COL1, a.COL2, ...) VALUES (VAL1, VAL2, ...) [WHERE condition] . | 구문 설명 . | target_table : 갱신/삽입 대상 테이블 이름 | source_set : 병합(merge)할 소스 집합 (table / view / subquery) | ON 절 : 대상 테이블과 소스 집합 간의 조인 조건 | MERGE UPDATE (WHEN MATCHED THEN 이하) : ON 절의 조인 조건을 만족하는 행에 대해 수행될 구문 | MERGE INTO (WHEN NOT MATCHED THEN 이하) : ON 절의 조인 조건을 만족하지 않는 행에 대해 수행될 구문 | . | 예시 INSERT INTO t1 (EMPNO, ENAME, SAL, DEPTNO) SELECT A.EMPNO ,A.ENAME ,A.SAL ,A.DEPTNO FROM EMP A WHERE A.JOB = 'CLERK'; . | . | EMPNO | ENAME | SAL | DEPTNO | . | 7369 | SMITH | 800 | 20 | . | 7876 | ADAMS | 1100 | 20 | . | 7900 | JAMES | 950 | 30 | . | 7934 | MILLER | 1300 | 10 | . | MERGE 문 예시 MERGE INTO t1 a USING (SELECT b.EMPNO ,b.ENAME ,b.DEPTNO ,b.SAL - 500 AS SAL FROM EMP b WHERE b.DEPTNO = 10) b ON (b.EMPNO = a.EMPTNO) WHEN MATCHED THEN UPDATE SET a.SAL = b.SAL WHEN NOT MATCHED THEN INSERT (a.EMPNO, a.ENAME, a.SAL, a.DEPTNO) VALUES (b.EMPNO, b.ENAME, b.SAL, b.DEPTNO) . | . | EMPNO | ENAME | SAL | DEPTNO | . | 7369 | SMITH | 800 | 20 | . | 7876 | ADAMS | 1100 | 20 | . | 7900 | JAMES | 950 | 30 | . | 7934 | MILLER | 800 | 10 | . | 7839 | KING | 4500 | 10 | . | 7934 | CLARK | 1950 | 10 | . ROLLBACK; -- 취소 . | MERGE 문 예시 (MERGE UPDATE 절 ONLY) MERGE INTO t1 a USING (SELECT b.EMPNO ,b.ENAME ,b.DEPTNO ,b.SAL - 500 AS SAL FROM EMP b WHERE b.DEPTNO = 10) b ON (b.EMPNO = a.EMPTNO) WHEN MATCHED THEN UPDATE SET a.SAL = b.SAL . | . | EMPNO | ENAME | SAL | DEPTNO | . | 7369 | SMITH | 800 | 20 | . | 7876 | ADAMS | 1100 | 20 | . | 7900 | JAMES | 950 | 30 | . | 7934 | MILLER | 800 | 10 | . ROLLBACK; -- 취소 . | MERGE 문 예시 (MERGE UPDATE 절 ONLY - DELETE 문) INSERT INTO t1 (EMPNO, ENAME, SAL, DEPTNO) SELECT A.EMPNO ,A.ENAME ,A.SAL ,A.DEPTNO FROM EMP A WHERE A.JOB = 'CLERK'; . | . | EMPNO | ENAME | SAL | DEPTNO | . | 7369 | SMITH | 800 | 20 | . | 7876 | ADAMS | 1100 | 20 | . | 7900 | JAMES | 950 | 30 | . | 7934 | MILLER | 1300 | 10 | . MERGE INTO t1 a USING (SELECT b.EMPNO ,b.ENAME ,b.DEPTNO ,b.SAL - 500 AS SAL FROM EMP b WHERE b.DEPTNO = 10) b ON (b.EMPNO = a.EMPTNO) WHEN MATCHED THEN UPDATE -- 수행 1 SET a.SAL = b.SAL DELETE -- 수행 2 WHERE a.SAL &lt; 1000; . | EMPNO | ENAME | SAL | DEPTNO | . | 7369 | SMITH | 800 | 20 | . | 7876 | ADAMS | 1100 | 20 | . | 7900 | JAMES | 950 | 30 | . MERGE UPDATE 절에 기술한 DELETE 문은 UPDATE 문에 의해 갱신된 행들 중에서 WHERE 절 조건에 만족하는 행들만 삭제한다. ROLLBACK; -- 취소 . | MERGE 문 예시 (MERGE INSERT 절 ONLY) INSERT INTO t1 (EMPNO, ENAME, SAL, DEPTNO) SELECT A.EMPNO ,A.ENAME ,A.SAL ,A.DEPTNO FROM EMP A WHERE A.JOB = 'CLERK'; . | . | EMPNO | ENAME | SAL | DEPTNO | . | 7369 | SMITH | 800 | 20 | . | 7876 | ADAMS | 1100 | 20 | . | 7900 | JAMES | 950 | 30 | . | 7934 | MILLER | 1300 | 10 | . MERGE INTO t1 a USING (SELECT b.EMPNO ,b.ENAME ,b.DEPTNO ,b.SAL - 500 AS SAL FROM EMP b WHERE b.DEPTNO = 10) b ON (b.EMPNO = a.EMPTNO) WHEN NOT MATCHED THEN INSERT (a.EMPNO, a.ENAME, a.SAL, a.DEPTNO) VALUES (b.EMPNO, b.ENAME, b.SAL, b.DEPTNO) . | EMPNO | ENAME | SAL | DEPTNO | . | 7369 | SMITH | 800 | 20 | . | 7876 | ADAMS | 1100 | 20 | . | 7900 | JAMES | 950 | 30 | . | 7934 | MILLER | 1300 | 10 | . | 7839 | KING | 4500 | 10 | . | 7934 | CLARK | 1950 | 10 | . ROLLBACK; -- 취소 . | MERGE 문 예시 (MERGE INSERT 절 ONLY - WHERE 절) INSERT INTO t1 (EMPNO, ENAME, SAL, DEPTNO) SELECT A.EMPNO ,A.ENAME ,A.SAL ,A.DEPTNO FROM EMP A WHERE A.JOB = 'CLERK'; . | . | EMPNO | ENAME | SAL | DEPTNO | . | 7369 | SMITH | 800 | 20 | . | 7876 | ADAMS | 1100 | 20 | . | 7900 | JAMES | 950 | 30 | . | 7934 | MILLER | 1300 | 10 | . MERGE INTO t1 a USING (SELECT b.EMPNO ,b.ENAME ,b.DEPTNO ,b.SAL - 500 AS SAL FROM EMP b WHERE b.DEPTNO = 10) b ON (b.EMPNO = a.EMPTNO) WHEN NOT MATCHED THEN INSERT (a.EMPNO, a.ENAME, a.SAL, a.DEPTNO) VALUES (b.EMPNO, b.ENAME, b.SAL, b.DEPTNO) WHERE b.SAL &gt; 3000; . | EMPNO | ENAME | SAL | DEPTNO | . | 7369 | SMITH | 800 | 20 | . | 7876 | ADAMS | 1100 | 20 | . | 7900 | JAMES | 950 | 30 | . | 7934 | MILLER | 1300 | 10 | . | 7839 | KING | 4500 | 10 | . MERGE INSERT 절에 기술한 WHERE 절을 기술하면 조건에 해당하는 행만 선택적으로 삽입할 수 있다. ROLLBACK; -- 취소 . ",
    "url": "/docs/5.Oracle/DML/2.DML/#dmldata-manipulation-language",
    
    "relUrl": "/docs/5.Oracle/DML/2.DML/#dmldata-manipulation-language"
  },"70": {
    "doc": "DML",
    "title": "DML",
    "content": "작성일자 : 2023-07-24 수정일자 : 2023-08-02 ",
    "url": "/docs/5.Oracle/DML/2.DML/",
    
    "relUrl": "/docs/5.Oracle/DML/2.DML/"
  },"71": {
    "doc": "이벤트 위치 시각화",
    "title": "이벤트 위치 시각화",
    "content": ". 작성일자 : 2023-08-27 import os import pandas as pd import matplotlib.pyplot as plt import plotly.graph_objects as go . Change directory . current_dir = os.getcwd() print(current_dir) . /Users/limjongjun/Desktop/JayJay/Growth/Python/soccer-analytics . new_dir = '/Users/limjongjun/Desktop/JayJay/Growth/Python/soccer-analytics' os.chdir(new_dir) . print(current_dir) . /Users/limjongjun/Desktop/JayJay/Growth/Python/soccer-analytics/Excercise . User scr.plot_utils . from src.plot_utils import * #plot_uitils.py &lt;- 경기장 이미지를 그리는 코드 . 17/18 시즌 18Round Mancity vs Tottenham . match_id = 2499895 match_events = pd.read_pickle(f'data/refined_events/England/2499895.pkl') #pkl 파일을 Dataframe으로 불러오기 match_events . | | match_id | event_id | period | time | team_id | team_name | player_id | player_name | event_type | sub_event_type | tags | start_x | start_y | end_x | end_y | . | 0 | 2499895 | 215108367 | 1H | 1.784 | 1625 | Manchester City | 8325 | S. Agüero | Pass | Simple pass | [Accurate] | 52.00 | 34.68 | 40.56 | 34.68 | . | 1 | 2499895 | 215108368 | 1H | 3.324 | 1625 | Manchester City | 105339 | Fernandinho | Pass | Simple pass | [Accurate] | 40.56 | 34.68 | 29.12 | 8.16 | . | 2 | 2499895 | 215108369 | 1H | 6.406 | 1625 | Manchester City | 8277 | K. Walker | Pass | Simple pass | [Accurate] | 29.12 | 8.16 | 44.72 | 10.20 | . | 3 | 2499895 | 215108370 | 1H | 7.124 | 1625 | Manchester City | 38021 | K. De Bruyne | Pass | Simple pass | [Accurate] | 44.72 | 10.20 | 69.68 | 6.12 | . | 4 | 2499895 | 215108371 | 1H | 8.676 | 1625 | Manchester City | 11066 | R. Sterling | Pass | Simple pass | [Accurate] | 69.68 | 6.12 | 58.24 | 12.24 | . | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . | 1607 | 2499895 | 215110122 | 2H | 2875.703 | 1624 | Tottenham Hotspur | 210044 | E. Dier | Pass | Simple pass | [Accurate] | 36.40 | 26.52 | 48.88 | 29.92 | . | 1608 | 2499895 | 215110123 | 2H | 2876.142 | 1624 | Tottenham Hotspur | 240070 | H. Winks | Duel | Ground attacking duel | [Anticipation, Lost, Not accurate] | 48.88 | 29.92 | 43.68 | 24.48 | . | 1609 | 2499895 | 215109959 | 2H | 2876.768 | 1625 | Manchester City | 447205 | P. Foden | Duel | Ground defending duel | [Anticipated, Won, Accurate] | 55.12 | 38.08 | 60.32 | 43.52 | . | 1610 | 2499895 | 215109960 | 2H | 2878.046 | 1625 | Manchester City | 11066 | R. Sterling | Duel | Ground attacking duel | [Free space right, Lost, Not accurate] | 60.32 | 43.52 | 60.32 | 43.52 | . | 1611 | 2499895 | 215110124 | 2H | 2878.216 | 1624 | Tottenham Hotspur | 240070 | H. Winks | Duel | Ground defending duel | [Free space left, Lost, Not accurate] | 43.68 | 24.48 | NaN | NaN | . 1612 rows × 15 columns . match_pass = match_events[match_events['event_type'] == 'Pass'] match_pass.head() . | | match_id | event_id | period | time | team_id | team_name | player_id | player_name | event_type | sub_event_type | tags | start_x | start_y | end_x | end_y | . | 0 | 2499895 | 215108367 | 1H | 1.784 | 1625 | Manchester City | 8325 | S. Agüero | Pass | Simple pass | [Accurate] | 52.00 | 34.68 | 40.56 | 34.68 | . | 1 | 2499895 | 215108368 | 1H | 3.324 | 1625 | Manchester City | 105339 | Fernandinho | Pass | Simple pass | [Accurate] | 40.56 | 34.68 | 29.12 | 8.16 | . | 2 | 2499895 | 215108369 | 1H | 6.406 | 1625 | Manchester City | 8277 | K. Walker | Pass | Simple pass | [Accurate] | 29.12 | 8.16 | 44.72 | 10.20 | . | 3 | 2499895 | 215108370 | 1H | 7.124 | 1625 | Manchester City | 38021 | K. De Bruyne | Pass | Simple pass | [Accurate] | 44.72 | 10.20 | 69.68 | 6.12 | . | 4 | 2499895 | 215108371 | 1H | 8.676 | 1625 | Manchester City | 11066 | R. Sterling | Pass | Simple pass | [Accurate] | 69.68 | 6.12 | 58.24 | 12.24 | . match_pass.info() . &lt;class 'pandas.core.frame.DataFrame'&gt; Index: 796 entries, 0 to 1607 Data columns (total 15 columns): # Column Non-Null Count Dtype --- ------ -------------- ----- 0 match_id 796 non-null object 1 event_id 796 non-null object 2 period 796 non-null object 3 time 796 non-null object 4 team_id 796 non-null object 5 team_name 796 non-null object 6 player_id 796 non-null object 7 player_name 796 non-null object 8 event_type 796 non-null object 9 sub_event_type 796 non-null object 10 tags 796 non-null object 11 start_x 796 non-null float64 12 start_y 796 non-null float64 13 end_x 795 non-null float64 14 end_y 795 non-null float64 dtypes: float64(4), object(11) memory usage: 99.5+ KB . team1_name, team2_name = match_pass['team_name'].unique() . team1_pass = match_pass[match_pass['team_name'] == team1_name] team2_pass = match_pass[match_pass['team_name'] == team2_name] . team1_name, team2_name . ('Manchester City', 'Tottenham Hotspur') . team1_pass . | | match_id | event_id | period | time | team_id | team_name | player_id | player_name | event_type | sub_event_type | tags | start_x | start_y | end_x | end_y | . | 0 | 2499895 | 215108367 | 1H | 1.784 | 1625 | Manchester City | 8325 | S. Agüero | Pass | Simple pass | [Accurate] | 52.00 | 34.68 | 40.56 | 34.68 | . | 1 | 2499895 | 215108368 | 1H | 3.324 | 1625 | Manchester City | 105339 | Fernandinho | Pass | Simple pass | [Accurate] | 40.56 | 34.68 | 29.12 | 8.16 | . | 2 | 2499895 | 215108369 | 1H | 6.406 | 1625 | Manchester City | 8277 | K. Walker | Pass | Simple pass | [Accurate] | 29.12 | 8.16 | 44.72 | 10.20 | . | 3 | 2499895 | 215108370 | 1H | 7.124 | 1625 | Manchester City | 38021 | K. De Bruyne | Pass | Simple pass | [Accurate] | 44.72 | 10.20 | 69.68 | 6.12 | . | 4 | 2499895 | 215108371 | 1H | 8.676 | 1625 | Manchester City | 11066 | R. Sterling | Pass | Simple pass | [Accurate] | 69.68 | 6.12 | 58.24 | 12.24 | . | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . | 1594 | 2499895 | 215109949 | 2H | 2815.542 | 1625 | Manchester City | 8464 | F. Delph | Pass | Simple pass | [Accurate] | 10.40 | 63.92 | 5.20 | 40.12 | . | 1595 | 2499895 | 215109951 | 2H | 2818.302 | 1625 | Manchester City | 71654 | Ederson | Pass | Launch | [Not accurate] | 5.20 | 40.12 | 42.64 | 53.72 | . | 1597 | 2499895 | 215109953 | 2H | 2821.927 | 1625 | Manchester City | 105339 | Fernandinho | Pass | Simple pass | [Not accurate] | 28.08 | 42.84 | 23.92 | 33.32 | . | 1602 | 2499895 | 215109957 | 2H | 2864.952 | 1625 | Manchester City | 105339 | Fernandinho | Pass | Simple pass | [Not accurate] | 41.60 | 17.00 | 64.48 | 19.04 | . | 1606 | 2499895 | 215109958 | 2H | 2873.567 | 1625 | Manchester City | 105339 | Fernandinho | Pass | High pass | [Not accurate] | 45.76 | 19.72 | 67.60 | 41.48 | . 422 rows × 15 columns . plt.scatter(team1_pass['start_x'], team1_pass['start_y'], c = 'blue') plt.scatter(team2_pass['start_x'], team2_pass['start_y'], c = 'black') plt.show() . draw_pitch(pitch='#440F48', line='white') plt.savefig('img/pitch_ver2.png', bbox_inches='tight') . team2_pass[['start_x', 'end_x']].head() . | | start_x | end_x | . | 7 | 47.84 | 55.12 | . | 13 | 78.00 | 85.28 | . | 20 | 30.16 | 10.40 | . | 21 | 10.40 | 13.52 | . | 22 | 13.52 | 22.88 | . team2_pass[['start_y', 'end_y']].head() . | | start_y | end_y | . | 7 | 61.20 | 47.60 | . | 13 | 63.92 | 57.80 | . | 20 | 37.40 | 36.04 | . | 21 | 36.04 | 63.24 | . | 22 | 63.24 | 65.96 | . #데이터는 한방향으로 데이터가 쌓이고 있기에, team2의 위치 반전 필요 # x축 0~ 104 / y 축 0 ~ 68 team2_pass[['start_x', 'end_x']] = 104 - team2_pass[['start_x', 'end_x']] team2_pass[['start_y', 'end_y']] = 68 - team2_pass[['start_y', 'end_y']] . /var/folders/_b/znjp14gd02d8lg63thqc7bm40000gn/T/ipykernel_2729/1796384401.py:3: SettingWithCopyWarning: A value is trying to be set on a copy of a slice from a DataFrame. Try using .loc[row_indexer,col_indexer] = value instead See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy team2_pass[['start_x', 'end_x']] = 104 - team2_pass[['start_x', 'end_x']] /var/folders/_b/znjp14gd02d8lg63thqc7bm40000gn/T/ipykernel_2729/1796384401.py:4: SettingWithCopyWarning: A value is trying to be set on a copy of a slice from a DataFrame. Try using .loc[row_indexer,col_indexer] = value instead See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy team2_pass[['start_y', 'end_y']] = 68 - team2_pass[['start_y', 'end_y']] . draw_pitch('darkgreen','white') plt.scatter ( team1_pass['start_x'], team1_pass['start_y'], c = 'blue' , edgecolors= 'k' , alpha= 0.4, label = f'{team1_name} : {len(team1_pass)} pass' ) plt.scatter ( team2_pass['start_x'], team2_pass['start_y'], c = 'black' , edgecolors= 'k' , alpha= 0.4, label = f'{team2_name} : {len(team2_pass)} pass' ) plt.legend(fontsize = 15, bbox_to_anchor = (1,1)) plt.show() . ",
    "url": "/docs/3.Side_Projects/1.Football_Analysis/2.Visualize_Event_Location/",
    
    "relUrl": "/docs/3.Side_Projects/1.Football_Analysis/2.Visualize_Event_Location/"
  },"72": {
    "doc": "경기 기록 집계",
    "title": "데이터 집계 기초",
    "content": "(1) Series.value_counts . | 팀별 슈팅 횟수 | . shot_records = match_events[(match_events['event_type']== 'Shot') | (match_events['sub_event_type'].isin(['Free kick shot','Penalty'])) ] shot_records['team_name'].value_counts() . team_name Manchester City 20 Tottenham Hotspur 6 Name: count, dtype: int64 . | 선수별 패스 횟수 | . pass_records = match_events[(match_events['event_type'] == 'Pass') | (match_events['sub_event_type'].isin(['Free kick shot', 'Penalty'])) ] pass_records['player_name'].value_counts() . player_name F. Delph 54 J. Vertonghen 53 K. Walker 51 E. Dier 50 K. De Bruyne 45 K. Trippier 44 D. Rose 40 N. Otamendi 39 İ. Gündoğan 39 R. Sterling 35 E. Mangala 35 Fernandinho 33 M. Dembélé 32 H. Winks 32 H. Lloris 31 C. Eriksen 30 L. Sané 29 Ederson 28 D. Alli 24 Son Heung-Min 17 H. Kane 15 S. Agüero 13 Gabriel Jesus 9 P. Foden 8 Bernardo Silva 5 E. Lamela 4 M. Sissoko 2 Name: count, dtype: int64 . (2) DataFrame.groupby 를 활용한 항목별 연산 . | 전후반 경기 시간 | . match_events.groupby('period')['time'].max() . period 1H 2817.335 2H 2878.216 Name: time, dtype: object . match_events.groupby('period')[['time']].max() . | | time | . | period | | . | 1H | 2817.335 | . | 2H | 2878.216 | . | 팀별 패스 발생 및 종료 위치 | . match_events.groupby('team_name')[['start_x', 'start_y', 'end_x', 'end_y']].mean() . | | start_x | start_y | end_x | end_y | . | team_name | | | | | . | Manchester City | 51.102901 | 33.699796 | 55.694915 | 34.064720 | . | Tottenham Hotspur | 44.841227 | 35.546896 | 49.198455 | 35.735172 | . | 각 이벤트 유형의 팀별 발생 횟수 | . match_events.groupby(['team_name', 'event_type'])[['event_id']].count() . | | | event_id | . | team_name | event_type | | . | Manchester City | Duel | 216 | . | Foul | 13 | . | Free kick | 52 | . | Goalkeeper leaving line | 1 | . | Interruption | 1 | . | Offside | 4 | . | Others on the ball | 56 | . | Pass | 422 | . | Save attempt | 2 | . | Shot | 19 | . | Substitution | 6 | . | Tottenham Hotspur | Duel | 216 | . | Foul | 20 | . | Free kick | 54 | . | Interruption | 67 | . | Offside | 2 | . | Others on the ball | 66 | . | Pass | 374 | . | Save attempt | 11 | . | Shot | 6 | . | Substitution | 4 | . (3) pandas.pivot_table 함수를 활용한 다차원 집계 (DataFrame 형태) . | 각 이벤트 유형의 팀별 발생 횟수 | . match_events.pivot_table(values='event_id', index='event_type', columns= 'team_name', aggfunc='count') . | team_name | Manchester City | Tottenham Hotspur | . | event_type | | | . | Duel | 216.0 | 216.0 | . | Foul | 13.0 | 20.0 | . | Free kick | 52.0 | 54.0 | . | Goalkeeper leaving line | 1.0 | NaN | . | Interruption | 1.0 | 67.0 | . | Offside | 4.0 | 2.0 | . | Others on the ball | 56.0 | 66.0 | . | Pass | 422.0 | 374.0 | . | Save attempt | 2.0 | 11.0 | . | Shot | 19.0 | 6.0 | . | Substitution | 6.0 | 4.0 | . match_events.pivot_table('event_id', 'event_type', 'team_name', 'count', fill_value=0) . | team_name | Manchester City | Tottenham Hotspur | . | event_type | | | . | Duel | 216 | 216 | . | Foul | 13 | 20 | . | Free kick | 52 | 54 | . | Goalkeeper leaving line | 1 | 0 | . | Interruption | 1 | 67 | . | Offside | 4 | 2 | . | Others on the ball | 56 | 66 | . | Pass | 422 | 374 | . | Save attempt | 2 | 11 | . | Shot | 19 | 6 | . | Substitution | 6 | 4 | . 이벤트 성공 여부 집계 . pass_records.head() . | | match_id | event_id | period | time | team_id | team_name | player_id | player_name | event_type | sub_event_type | tags | start_x | start_y | end_x | end_y | . | 0 | 2499895 | 215108367 | 1H | 1.784 | 1625 | Manchester City | 8325 | S. Agüero | Pass | Simple pass | [Accurate] | 52.00 | 34.68 | 40.56 | 34.68 | . | 1 | 2499895 | 215108368 | 1H | 3.324 | 1625 | Manchester City | 105339 | Fernandinho | Pass | Simple pass | [Accurate] | 40.56 | 34.68 | 29.12 | 8.16 | . | 2 | 2499895 | 215108369 | 1H | 6.406 | 1625 | Manchester City | 8277 | K. Walker | Pass | Simple pass | [Accurate] | 29.12 | 8.16 | 44.72 | 10.20 | . | 3 | 2499895 | 215108370 | 1H | 7.124 | 1625 | Manchester City | 38021 | K. De Bruyne | Pass | Simple pass | [Accurate] | 44.72 | 10.20 | 69.68 | 6.12 | . | 4 | 2499895 | 215108371 | 1H | 8.676 | 1625 | Manchester City | 11066 | R. Sterling | Pass | Simple pass | [Accurate] | 69.68 | 6.12 | 58.24 | 12.24 | . (1) 반복문 기반 성공 여부 판단 . #반복문은 성능에 좋지는 않음 success_idx = [] for i in pass_records.index: tags = pass_records.at[i, 'tags'] if 'Accurate' in tags: success_idx.append(i) acc_pass_records = pass_records.loc[success_idx] acc_pass_records . | | match_id | event_id | period | time | team_id | team_name | player_id | player_name | event_type | sub_event_type | tags | start_x | start_y | end_x | end_y | . | 0 | 2499895 | 215108367 | 1H | 1.784 | 1625 | Manchester City | 8325 | S. Agüero | Pass | Simple pass | [Accurate] | 52.00 | 34.68 | 40.56 | 34.68 | . | 1 | 2499895 | 215108368 | 1H | 3.324 | 1625 | Manchester City | 105339 | Fernandinho | Pass | Simple pass | [Accurate] | 40.56 | 34.68 | 29.12 | 8.16 | . | 2 | 2499895 | 215108369 | 1H | 6.406 | 1625 | Manchester City | 8277 | K. Walker | Pass | Simple pass | [Accurate] | 29.12 | 8.16 | 44.72 | 10.20 | . | 3 | 2499895 | 215108370 | 1H | 7.124 | 1625 | Manchester City | 38021 | K. De Bruyne | Pass | Simple pass | [Accurate] | 44.72 | 10.20 | 69.68 | 6.12 | . | 4 | 2499895 | 215108371 | 1H | 8.676 | 1625 | Manchester City | 11066 | R. Sterling | Pass | Simple pass | [Accurate] | 69.68 | 6.12 | 58.24 | 12.24 | . | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . | 1593 | 2499895 | 215109948 | 2H | 2813.211 | 1625 | Manchester City | 447205 | P. Foden | Pass | Simple pass | [Accurate] | 24.96 | 55.08 | 10.40 | 63.92 | . | 1594 | 2499895 | 215109949 | 2H | 2815.542 | 1625 | Manchester City | 8464 | F. Delph | Pass | Simple pass | [Accurate] | 10.40 | 63.92 | 5.20 | 40.12 | . | 1603 | 2499895 | 215110119 | 2H | 2866.949 | 1624 | Tottenham Hotspur | 48 | J. Vertonghen | Pass | Simple pass | [Accurate] | 39.52 | 48.96 | 28.08 | 36.04 | . | 1604 | 2499895 | 215110120 | 2H | 2869.894 | 1624 | Tottenham Hotspur | 25381 | H. Lloris | Pass | Launch | [Accurate] | 28.08 | 36.04 | 59.28 | 17.00 | . | 1607 | 2499895 | 215110122 | 2H | 2875.703 | 1624 | Tottenham Hotspur | 210044 | E. Dier | Pass | Simple pass | [Accurate] | 36.40 | 26.52 | 48.88 | 29.92 | . 665 rows × 15 columns . (2) DataFrame.apply 함수 기반 성공 여부 판단 . def is_accurate(tags) : return 'Accurate' in tags . pass_records['tags'].apply(is_accurate) . 0 True 1 True 2 True 3 True 4 True ... 1603 True 1604 True 1605 False 1606 False 1607 True Name: tags, Length: 797, dtype: bool . acc_pass_records = pass_records[pass_records['tags'].apply(is_accurate)] acc_pass_records . | | match_id | event_id | period | time | team_id | team_name | player_id | player_name | event_type | sub_event_type | tags | start_x | start_y | end_x | end_y | . | 0 | 2499895 | 215108367 | 1H | 1.784 | 1625 | Manchester City | 8325 | S. Agüero | Pass | Simple pass | [Accurate] | 52.00 | 34.68 | 40.56 | 34.68 | . | 1 | 2499895 | 215108368 | 1H | 3.324 | 1625 | Manchester City | 105339 | Fernandinho | Pass | Simple pass | [Accurate] | 40.56 | 34.68 | 29.12 | 8.16 | . | 2 | 2499895 | 215108369 | 1H | 6.406 | 1625 | Manchester City | 8277 | K. Walker | Pass | Simple pass | [Accurate] | 29.12 | 8.16 | 44.72 | 10.20 | . | 3 | 2499895 | 215108370 | 1H | 7.124 | 1625 | Manchester City | 38021 | K. De Bruyne | Pass | Simple pass | [Accurate] | 44.72 | 10.20 | 69.68 | 6.12 | . | 4 | 2499895 | 215108371 | 1H | 8.676 | 1625 | Manchester City | 11066 | R. Sterling | Pass | Simple pass | [Accurate] | 69.68 | 6.12 | 58.24 | 12.24 | . | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . | 1593 | 2499895 | 215109948 | 2H | 2813.211 | 1625 | Manchester City | 447205 | P. Foden | Pass | Simple pass | [Accurate] | 24.96 | 55.08 | 10.40 | 63.92 | . | 1594 | 2499895 | 215109949 | 2H | 2815.542 | 1625 | Manchester City | 8464 | F. Delph | Pass | Simple pass | [Accurate] | 10.40 | 63.92 | 5.20 | 40.12 | . | 1603 | 2499895 | 215110119 | 2H | 2866.949 | 1624 | Tottenham Hotspur | 48 | J. Vertonghen | Pass | Simple pass | [Accurate] | 39.52 | 48.96 | 28.08 | 36.04 | . | 1604 | 2499895 | 215110120 | 2H | 2869.894 | 1624 | Tottenham Hotspur | 25381 | H. Lloris | Pass | Launch | [Accurate] | 28.08 | 36.04 | 59.28 | 17.00 | . | 1607 | 2499895 | 215110122 | 2H | 2875.703 | 1624 | Tottenham Hotspur | 210044 | E. Dier | Pass | Simple pass | [Accurate] | 36.40 | 26.52 | 48.88 | 29.92 | . 665 rows × 15 columns . (3) 람다 표현식(lamda expression) 기반 성공 여부 판단 . acc_pass_records = pass_records[pass_records['tags'].apply(lambda x : 'Accurate' in x)] acc_pass_records . | | match_id | event_id | period | time | team_id | team_name | player_id | player_name | event_type | sub_event_type | tags | start_x | start_y | end_x | end_y | . | 0 | 2499895 | 215108367 | 1H | 1.784 | 1625 | Manchester City | 8325 | S. Agüero | Pass | Simple pass | [Accurate] | 52.00 | 34.68 | 40.56 | 34.68 | . | 1 | 2499895 | 215108368 | 1H | 3.324 | 1625 | Manchester City | 105339 | Fernandinho | Pass | Simple pass | [Accurate] | 40.56 | 34.68 | 29.12 | 8.16 | . | 2 | 2499895 | 215108369 | 1H | 6.406 | 1625 | Manchester City | 8277 | K. Walker | Pass | Simple pass | [Accurate] | 29.12 | 8.16 | 44.72 | 10.20 | . | 3 | 2499895 | 215108370 | 1H | 7.124 | 1625 | Manchester City | 38021 | K. De Bruyne | Pass | Simple pass | [Accurate] | 44.72 | 10.20 | 69.68 | 6.12 | . | 4 | 2499895 | 215108371 | 1H | 8.676 | 1625 | Manchester City | 11066 | R. Sterling | Pass | Simple pass | [Accurate] | 69.68 | 6.12 | 58.24 | 12.24 | . | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . | 1593 | 2499895 | 215109948 | 2H | 2813.211 | 1625 | Manchester City | 447205 | P. Foden | Pass | Simple pass | [Accurate] | 24.96 | 55.08 | 10.40 | 63.92 | . | 1594 | 2499895 | 215109949 | 2H | 2815.542 | 1625 | Manchester City | 8464 | F. Delph | Pass | Simple pass | [Accurate] | 10.40 | 63.92 | 5.20 | 40.12 | . | 1603 | 2499895 | 215110119 | 2H | 2866.949 | 1624 | Tottenham Hotspur | 48 | J. Vertonghen | Pass | Simple pass | [Accurate] | 39.52 | 48.96 | 28.08 | 36.04 | . | 1604 | 2499895 | 215110120 | 2H | 2869.894 | 1624 | Tottenham Hotspur | 25381 | H. Lloris | Pass | Launch | [Accurate] | 28.08 | 36.04 | 59.28 | 17.00 | . | 1607 | 2499895 | 215110122 | 2H | 2875.703 | 1624 | Tottenham Hotspur | 210044 | E. Dier | Pass | Simple pass | [Accurate] | 36.40 | 26.52 | 48.88 | 29.92 | . 665 rows × 15 columns . ",
    "url": "/docs/3.Side_Projects/1.Football_Analysis/3.Aggregation_Match_record/#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A7%91%EA%B3%84-%EA%B8%B0%EC%B4%88",
    
    "relUrl": "/docs/3.Side_Projects/1.Football_Analysis/3.Aggregation_Match_record/#데이터-집계-기초"
  },"73": {
    "doc": "경기 기록 집계",
    "title": "경기 기록 집계",
    "content": ". 작성일자 : 2023-08-27 import pandas as pd import tqdm as tqdm import os . current_dir = os.getcwd() current_dir . '/Users/limjongjun/Desktop/JayJay/Growth/Python/soccer-analytics' . new_dir = '/Users/limjongjun/Desktop/JayJay/Growth/Python/soccer-analytics' os.chdir(new_dir) print(current_dir) . /Users/limjongjun/Desktop/JayJay/Growth/Python/soccer-analytics/Excercise . match_id = 2499895 match_events = pd.read_pickle(f'data/refined_events/England/2499895.pkl') #pkl 파일을 Dataframe으로 불러오기 match_events . | | match_id | event_id | period | time | team_id | team_name | player_id | player_name | event_type | sub_event_type | tags | start_x | start_y | end_x | end_y | . | 0 | 2499895 | 215108367 | 1H | 1.784 | 1625 | Manchester City | 8325 | S. Agüero | Pass | Simple pass | [Accurate] | 52.00 | 34.68 | 40.56 | 34.68 | . | 1 | 2499895 | 215108368 | 1H | 3.324 | 1625 | Manchester City | 105339 | Fernandinho | Pass | Simple pass | [Accurate] | 40.56 | 34.68 | 29.12 | 8.16 | . | 2 | 2499895 | 215108369 | 1H | 6.406 | 1625 | Manchester City | 8277 | K. Walker | Pass | Simple pass | [Accurate] | 29.12 | 8.16 | 44.72 | 10.20 | . | 3 | 2499895 | 215108370 | 1H | 7.124 | 1625 | Manchester City | 38021 | K. De Bruyne | Pass | Simple pass | [Accurate] | 44.72 | 10.20 | 69.68 | 6.12 | . | 4 | 2499895 | 215108371 | 1H | 8.676 | 1625 | Manchester City | 11066 | R. Sterling | Pass | Simple pass | [Accurate] | 69.68 | 6.12 | 58.24 | 12.24 | . | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . | 1607 | 2499895 | 215110122 | 2H | 2875.703 | 1624 | Tottenham Hotspur | 210044 | E. Dier | Pass | Simple pass | [Accurate] | 36.40 | 26.52 | 48.88 | 29.92 | . | 1608 | 2499895 | 215110123 | 2H | 2876.142 | 1624 | Tottenham Hotspur | 240070 | H. Winks | Duel | Ground attacking duel | [Anticipation, Lost, Not accurate] | 48.88 | 29.92 | 43.68 | 24.48 | . | 1609 | 2499895 | 215109959 | 2H | 2876.768 | 1625 | Manchester City | 447205 | P. Foden | Duel | Ground defending duel | [Anticipated, Won, Accurate] | 55.12 | 38.08 | 60.32 | 43.52 | . | 1610 | 2499895 | 215109960 | 2H | 2878.046 | 1625 | Manchester City | 11066 | R. Sterling | Duel | Ground attacking duel | [Free space right, Lost, Not accurate] | 60.32 | 43.52 | 60.32 | 43.52 | . | 1611 | 2499895 | 215110124 | 2H | 2878.216 | 1624 | Tottenham Hotspur | 240070 | H. Winks | Duel | Ground defending duel | [Free space left, Lost, Not accurate] | 43.68 | 24.48 | NaN | NaN | . 1612 rows × 15 columns . ",
    "url": "/docs/3.Side_Projects/1.Football_Analysis/3.Aggregation_Match_record/",
    
    "relUrl": "/docs/3.Side_Projects/1.Football_Analysis/3.Aggregation_Match_record/"
  },"74": {
    "doc": "RENAME TABLE",
    "title": "1.RENAME TABLE ",
    "content": "Ver 0.1.1 . | 1. 테이블명 변경 | . 1. 테이블명 변경 . 기존 테이블의 이름을 변경할 때는 RENAME 문을 사용한다. | Syntax | . RENAME old_table TO new_table; . | 구문 설명 . | old_table : 기존 테이블의 변경 전 이름 | new_table : 테이블의 변경 후 이름 | . | . EX) . RENAME t1 TO table1; . DESC table1 . | COLUMN | Nullable | Type | . | EMPNO |   | NUMBER(4) | . | ENAME | NOT NULL | VARCHAR2(10) | . | SAL |   | NUMBER(7,2) | . | DEPTNO | NOT NULL | NUMBER(2) | . | EMPNO | ENAME | SAL | DEPTNO | . | 7782 | CLARK |   | 10 | . | 7369 | SMITH |   | 20 | . | 7566 | JONES |   | 20 | . | 7499 | ALLEN |   | 50 | . | 7902 | JONES |   | 90 | . ",
    "url": "/docs/5.Oracle/DDL/3.RENAME_Table/",
    
    "relUrl": "/docs/5.Oracle/DDL/3.RENAME_Table/"
  },"75": {
    "doc": "RENAME TABLE",
    "title": "RENAME TABLE",
    "content": "작성일자 : 2023-09-03 ",
    "url": "/docs/5.Oracle/DDL/3.RENAME_Table/",
    
    "relUrl": "/docs/5.Oracle/DDL/3.RENAME_Table/"
  },"76": {
    "doc": "TCL",
    "title": "TCL(Transaction Control Language)",
    "content": "Ver 0.1.1 . | 1. TCL | 2. TRANSACTION | 3. LOCK | 4. COMMIT | 5. ROLLBACK | 6. SAVEPOINT | 7. 명시적 트랜잭션 VS 암시적 트랜잭션 | . 1.TCL(Transaction Control Language) . | TCL 문을 사용하면 아래와 같이 트랜잭션을 제어할 수 있다. | 현재 트랜잭션의 변경 내용을 데이터베이스에 영구적으로 저장(COMMIT)하고 트랜잭션을 종료한다. | 현재 트랜잭션의 변경 내용을 모두 취소(ROLLBACK)하고 트랜잭션을 종료한다. | ROLLBACK이 가능한 저장점(SAVEPOINT)을 생성한다. | . | . -------------------------------------------- 트랜잭션 1 시작 INSERT INTO t1 ... ; UPDATE t1 ... ; COMMIT ; -------------------------------------------- 트랜잭션 1 종료(변경 내용 저장) -------------------------------------------- 트랜잭션 2 시작 UPDATE t1 ...; DELETE t1 ...; INSERT INTO t1 ... ; ROLLBACK; -------------------------------------------- 트랜잭션 2 종료(변경 내용 취소) . 2.TRANSACTION . | 함께 수행되어야 하는 작업의 논리적인 단위이다. 즉, 의미적으로 분리될 수 없는 1개 이상의 데이터 조작(DML)을 말한다. EX) 계좌 이체 | . UPDATE Account SET Amount = Amount - 20000 WHERE Account_Num = '100912345678'; UPDATE Account SET Amount = Amount + 20000 WHERE Account_Num = '910078781234'; COMMIT . | 특징 (ACID) | . | 특징 | 설명 | . | 원자성(Atomicity) | 트랜잭션의 작업은 모두 수행되거나 모두 수행되지 않아야한다.(All or Nothing) | . | 일관성(Consistency) | 트랜잭션이 완료되면 데이터의 무결성이 일관되게 보장되어야 한다. | . | 격리성(Isolation) | 트랜잭션이 수행되는 세션은 다른 세션으로부터 격리되어야 한다. | . | 지속성(Durability) | 트랜잭션이 완료되면 변경 내용이 영구적으로 지속되어야 한다. | . 3.LOCK . | LOCK은 다중 트랜잭션 환경에서 트랜잭션의 순차적 진행을 보장하기 위한 매커니즘이다. | 서로 다른 행을 조작하는 DML문 간에는 블로킹(Blocking)이 발생하지 않는다. | . UPDATE t1 a SET a.SAL = a.SAL*1.2 WHERE a.EMPNO = 7876; COMMIT; . UPDATE t1 a SET a.SAL = a.SAL - 500 WHERE a.EMPNO = 7876; ROLLBACK . UPDATE t1 a SET a.SAL = a.SAL + 700 WHERE a.EMPNO = 7876; . 4.COMMIT . | 현재 트랜잭션의 변경 내용을 데이터베이스에 영구적으로 저장하고 트랜잭션을 종료한다. | 세션 1(or 사용자 1) . | 시간 1 | . | . INSERT INTO t1 (empno, ename, sal, deptno) VALUES (7369, 'SMITH', 800, 20); SELECT a.* FROM t1 a; . | EMPNO | ENAME | SAL | DEPTNO | . | 7369 | SMITH | 800 | 20 | . | 시간 2 | . INSERT INTO t1 (empno, ename, sal, deptno) VALUES (7876, 'ADAMS', 1100, 20); SELECT a.* FROM t1 a; . | EMPNO | ENAME | SAL | DEPTNO | . | 7369 | SMITH | 800 | 20 | . | 7867 | ADAMS | 1100 | 20 | . COMMIT; . | 시간 3 | . SELECT a.* FROM t1 a; . | EMPNO | ENAME | SAL | DEPTNO | . | 7369 | SMITH | 800 | 20 | . | 7867 | ADAMS | 1100 | 20 | . | 세션 2(or 사용자 2) . | 시간 1 | . | . SELECT a.* FROM t1 a; . no rows selected . | 시간 2 | . SELECT a.* FROM t1 a; . no rows selected . | 시간 3 (세션 1(사용자 1) commit 이후) | . SELECT a.* FROM t1 a; . | EMPNO | ENAME | SAL | DEPTNO | . | 7369 | SMITH | 800 | 20 | . | 7867 | ADAMS | 1100 | 20 | . 5.ROLLBACK . | 현재 트랜잭션의 변경 내용을 모두 취소하고 트랜잭션을 종료한다. | 세션 1(or 사용자 1) . | 시간 1 | . | . INSERT INTO t1 (empno, ename, sal, deptno) VALUES (7900, 'JAMES', 950, 30); INSERT INTO t1 (empno, ename, sal, deptno) VALUES (7934, 'MILLER', 1300, 10); UPDATE t1 a SET a.SAL = a.SAL - 1000 WHERE a.SAL &gt; 1000; SELECT a.* FROM t1 a; . | EMPNO | ENAME | SAL | DEPTNO | . | 7867 | ADAMS | 1100 | 20 | . | 7900 | JAMES | 950 | 30 | . | 7934 | MILLER | 300 | 10 | . ROLLBACK; . | 시간 2 | . SELECT a.* FROM t1 a; . | EMPNO | ENAME | SAL | DEPTNO | . | 7867 | ADAMS | 1100 | 20 | . | 세션 2(or 사용자 2) . | 시간 1 | . | . SELECT a.* FROM t1 a; . | EMPNO | ENAME | SAL | DEPTNO | . | 7867 | ADAMS | 1100 | 20 | . | 시간 2 | . SELECT a.* FROM t1 a; . | EMPNO | ENAME | SAL | DEPTNO | . | 7867 | ADAMS | 1100 | 20 | . 6.SAVEPOINT . | ROLLBACK이 가능한 저장점을 생성한다. | 세션 1(or 사용자 1) | . --- 트랜잭션 시작 INSERT INTO t1 (empno, ename, sal, deptno) VALUES (7839, 'KING', 5000, 10); . | EMPNO | ENAME | SAL | DEPTNO | . | 7839 | KING | 5000 | 10 | . | 7876 | ADAMS | 1100 | 20 | . SAVEPOINT s1; . UPDATE t1 a SET a.SAL = 3000 WHERE a.SAL &gt; 3000; . | EMPNO | ENAME | SAL | DEPTNO | . | 7839 | KING | 3000 | 10 | . | 7876 | ADAMS | 1100 | 20 | . INSERT INTO t1 (empno, ename, sal, deptno) VALUES (7499, 'ALLEN', 1600, 30); . | EMPNO | ENAME | SAL | DEPTNO | . | 7839 | KING | 3000 | 10 | . | 7876 | ADAMS | 1100 | 20 | . | 7499 | ALLEN | 1600 | 30 | . SAVEPOINT s2; . ROLLBACK TO s1; . | EMPNO | ENAME | SAL | DEPTNO | . | 7839 | KING | 3000 | 10 | . | 7876 | ADAMS | 1100 | 20 | . UPDATE t1 a SET a.SAL = 1500 WHERE a.SAL &gt; 1500; . | EMPNO | ENAME | SAL | DEPTNO | . | 7839 | KING | 1500 | 10 | . | 7876 | ADAMS | 1100 | 20 | . COMMIT; --- 트랜잭션 종료 . 7.명시적 트랜잭션 VS 암시적 트랜잭션 . | 트랜잭션의 시작을 명시하는 명시적 트랜잭션과 COMMIT/ROLLBACK 이후 처음 수행되는 DML문에 의해 트랜잭션이 시작되는 암시적 트랜잭션이 있다. | 암시적 트랜잭션(ORACLE) . | . --- 트랜잭션1 시작 INSERT INTO t1 ... ; UPDATE t1 ...; COMMIT; --- 트랜잭션1 종료 --- 트랜잭션2 시작 UPDATE t1 ...; DELETE t1 ...; INSERT INTO t1 ...; ROLLBACK; --- 트랜잭션2 종료 . | 명시적 트랜잭션 | . BEGIN TRANSACTION TR1; -- 트랜잭션1 시작 INSERT INTO t1 ... ; UPDATE t1 ...; COMMIT [TRANSACTION TR1]; -- 트랜잭션1 종료 BEGIN TRANSACTION TR2; -- 트랜잭션2 시작 UPDATE t1 ...; DELETE t1 ...; INSERT INTO t1 ...; ROLLBACK [TRANSACTION TR2]; -- 트랜잭션2 종료 . ",
    "url": "/docs/5.Oracle/DML/3.TCL/#tcltransaction-control-language",
    
    "relUrl": "/docs/5.Oracle/DML/3.TCL/#tcltransaction-control-language"
  },"77": {
    "doc": "TCL",
    "title": "TCL",
    "content": "작성일자 : 2023-08-06 ",
    "url": "/docs/5.Oracle/DML/3.TCL/",
    
    "relUrl": "/docs/5.Oracle/DML/3.TCL/"
  },"78": {
    "doc": "DROP TABLE",
    "title": "1.DROP TABLE ",
    "content": "Ver 0.1.1 . | 1. 테이블 삭제 | . 1. 테이블 삭제 . | 기존 테이블을 삭제할 때는 DROP TABLE 문을 사용한다. | 테이블의 구조와 데이터가 함께 삭제된다. | Syntax | . | . DROP TABLE [schema.]table [CASCADE CONSTRAINTS] [PURGE]; . | 구문 설명 . | table : 삭제하려는 테이블의 이름 | CASCADE CONSTRAINTS : 테이블을 참조하고 있는 FK 제약 조건을 삭제 | PURGE : recyle bin을 사용하지 않고 테이블을 즉시 삭제 (= 윈도우의 ctrl + delete) | . | . EX) . DROP TABLE t2 PURGE; SELECT a.* FROM t2 a; . ORA-00942 : 테이블 또는 뷰가 존재하지 않습니다. DESC t2; . ORA-00943 : t2 객체는 존재하지 않습니다. ",
    "url": "/docs/5.Oracle/DDL/4.DROP_Table/",
    
    "relUrl": "/docs/5.Oracle/DDL/4.DROP_Table/"
  },"79": {
    "doc": "DROP TABLE",
    "title": "DROP TABLE",
    "content": "작성일자 : 2023-09-03 ",
    "url": "/docs/5.Oracle/DDL/4.DROP_Table/",
    
    "relUrl": "/docs/5.Oracle/DDL/4.DROP_Table/"
  },"80": {
    "doc": "TRUNCATE TABLE",
    "title": "1.TRUNCATE TABLE ",
    "content": "Ver 0.1.1 . | 1. 테이블 초기화 | . 1. 테이블 초기화(TRUNCATE) . | 테이블 초기화 . | 테이블 구조는 유지한 채 데이터를 전체 삭제할 때, TRUNCATE TABLE 문을 사용한다. | 내부 처리 방식이나 Auto Commit의 특성으로 인해 DDL로 분류된다. | 위험성이 있으나, DELETE 문보다 속도가 빨라 효율성 측면에서 좋다. | Syntax | . | . TRUNCATE TABLE [schema.]table; . | 구문 설명 . | table : 초기화 하려는 테이블의 이름 | . | . EX) . TRUNCATE TABLE table1; DESC t2; . | COLUMN | Nullable | Type | . | EMPNO |   | NUMBER(4) | . | ENAME | NOT NULL | VARCHAR2(10) | . | SAL |   | NUMBER(7,2) | . | DEPTNO | NOT NULL | NUMBER(2) | . SELECT a.* FROM table1 a; . |EMPNO|ENAME|SAL|DEPTNO|—-:|:—-|–:|—–:| . no rows selected . ",
    "url": "/docs/5.Oracle/DDL/5.TRUNCATE_Table/",
    
    "relUrl": "/docs/5.Oracle/DDL/5.TRUNCATE_Table/"
  },"81": {
    "doc": "TRUNCATE TABLE",
    "title": "TRUNCATE TABLE",
    "content": "작성일자 : 2023-09-03 ",
    "url": "/docs/5.Oracle/DDL/5.TRUNCATE_Table/",
    
    "relUrl": "/docs/5.Oracle/DDL/5.TRUNCATE_Table/"
  },"82": {
    "doc": "About JayJay(Eng)",
    "title": "Career",
    "content": ". | DKBMC (‘21.08 ~ Present) . | BI Consultant . | Developed and maintained Tableau dashboards | Dealed with RDBMS(SQL), Cloud Database (Salesforce) | Implemented Tableau training sessions | Provided Tableau consulting | Implemented Tableau POC | . Youtube . | . | Nike Korea (‘20.01 ~ ‘20.08) . | Sales Team Part Timer . | Prepared and implemented NIKE KOREA’s order events scheduled for internal staffs(‘MPR’) and external clients(‘KAPM’) for 3 seasons(HO20/SP21/SU21) | Managed show rooms and all samples of NIKE KOREA | Handled VR programs for clients provided by the headquarter | . | . | . ",
    "url": "/docs/1.JayJay/About%20JayJay(Eng)/#career",
    
    "relUrl": "/docs/1.JayJay/About%20JayJay(Eng)/#career"
  },"83": {
    "doc": "About JayJay(Eng)",
    "title": "Education",
    "content": "University . | Hankuk University of Foregin Studies(HUFS) (‘15.03 ~ ‘21.08) . | Bachelor of Global Sports Industry Studies / Bachelor of Science (Statistics) | Grade: 3.88 / 4.5 | . | . High school . | Daegu Dalseong High school (‘12.03 ~ ‘15.02) | . Middle school . | Daegu Sangseo Middle school (‘10.10 ~ ‘12.02) | Suwon Yuljeon Middle school (‘09.03 ~ ‘10.10) . | Yuljeon Middle school Soccer Team | . | . Elementary school . | Suwon Yuljeon Elementary school (‘08.03 ~ ‘09.02) | Gyeongi Gwacheon Elementary school (‘07.03 ~ ‘08.02) . | Gwacheon Elementary school Soccer Team | . | Anyang Gwanyang Elementary school (‘03.03 ~ ‘07.02) | . ",
    "url": "/docs/1.JayJay/About%20JayJay(Eng)/#education",
    
    "relUrl": "/docs/1.JayJay/About%20JayJay(Eng)/#education"
  },"84": {
    "doc": "About JayJay(Eng)",
    "title": "Project",
    "content": ". | Samsung Electronics DS Memory Division SFDC (Salesforce) Establishment (Phase 3) (‘23.05 ~ Present) . | Developed tableau dashboards related with Product &amp; Sample, Opportunity &amp; Sales and System Utilization (Data Source : Oracle, Salesforce) | Performed the PL(Project Leader) Role of the Tableau team in the project | Managed tableau dashboards and responded VOC | . | LG Chemical Salesforce &amp; Tableau Establishment (‘22.07 ~ ‘23.02) (8 Months) . | Developed twenty tableau dashboards for seven business units of LG Chemical, covering areas such as Sales Progress, C&amp;C(Claim &amp; Complain ), Customer Insight, Inventory, and Business Attribute. (Data source: Salesforce) | Conducted Tableau training sessions for business users and consultants from the field and PWC (Price Waterhouse Coopers). | Installed Tableau Server (Window Server 2016) | . | Samsung Electronics DS Memory Division SFDC (Salesforce) Establishment (‘22.01 ~ ‘22.05) (4 Months) . | Developed and maintained three Tableau dashboards for the Sales Department of Samsung Electronics’ Memory Business Unit ( Data Source: Oracle data ) | . | . ",
    "url": "/docs/1.JayJay/About%20JayJay(Eng)/#project",
    
    "relUrl": "/docs/1.JayJay/About%20JayJay(Eng)/#project"
  },"85": {
    "doc": "About JayJay(Eng)",
    "title": "ETC (POC, Eduacation)",
    "content": ". | Kakao Enterprise Demo (‘23.03) . | Developed Six tableau dashboards for Kakao Enterprise demo | . | LG CNS POC (‘23.03) . | Developed Two tableau dashboards for LG CNS tableau POC (Data Source : Salesforce) | . | DongA University Visualization Hackathon Mentoring (‘21.11) . | Implemented tableau desktop training sessions for students | Mentored developing tableau dashboards | . | Hyundai Engineering Tableau Training Session (‘21.11) . | Implemented Tableau Training Session for customers (Tableau Desktop, Tableau Prep Builder) | . | Autonics Tableau POC (‘21.09 ~ ‘21.11) . | Developed Sixteen tableau dashboards for POC(sales, new product, finance) | . | . ",
    "url": "/docs/1.JayJay/About%20JayJay(Eng)/#etc-poc-eduacation",
    
    "relUrl": "/docs/1.JayJay/About%20JayJay(Eng)/#etc-poc-eduacation"
  },"86": {
    "doc": "About JayJay(Eng)",
    "title": "About JayJay(Eng)",
    "content": ". ",
    "url": "/docs/1.JayJay/About%20JayJay(Eng)/",
    
    "relUrl": "/docs/1.JayJay/About%20JayJay(Eng)/"
  },"87": {
    "doc": "About JayJay(Kor)",
    "title": "경력",
    "content": ". | DKBMC (‘21.08 ~ 현재) . | BI 컨설턴트 . | Tableau 대시보드 개발 및 관리 | RDBMS(SQL)와 Cloud(Salesforce) | Tableau 교육 | Tableau 컨설팅 | Tableau POC | . Youtube . | . | 나이키 코리아 (‘20.01 ~ ‘20.08) . | Sales 팀 파트타임 . | 나이키 코리아의 내부 직원(‘MPR’) 및 외부 고객 대상(‘KAPM’) 수주회 준비 및 실시 | 쇼룸 및 샘플 관리 | VR 프로그램 관리 | . | . | . ",
    "url": "/docs/1.JayJay/About%20JayJay(Kor)/#%EA%B2%BD%EB%A0%A5",
    
    "relUrl": "/docs/1.JayJay/About%20JayJay(Kor)/#경력"
  },"88": {
    "doc": "About JayJay(Kor)",
    "title": "학력",
    "content": "대학 . | 한국외국어 대학교 (‘15.03 ~ ‘21.08) . | 글로벌 스포츠 산업학 / 통계학 | 학점: 3.88 / 4.5 | . | . 고등학교 . | 대구 달성고등학교 (‘12.03 ~ ‘15.02) | . 중학교 . | 대구 상서중학교 (‘10.10 ~ ‘12.02) | 수원 율전중학교 (‘09.03 ~ ‘10.10) . | 율전중학교 축구부 | . | . 초등학교 . | 수원 율전초등학교 (‘08.03 ~ ‘09.02) | 경기 과천초등학교 (‘07.03 ~ ‘08.02) . | 과천초등학교 축구부 | . | 안양 관양초등학교 (‘03.03 ~ ‘07.02) | . ",
    "url": "/docs/1.JayJay/About%20JayJay(Kor)/#%ED%95%99%EB%A0%A5",
    
    "relUrl": "/docs/1.JayJay/About%20JayJay(Kor)/#학력"
  },"89": {
    "doc": "About JayJay(Kor)",
    "title": "프로젝트",
    "content": ". | 삼성 전자 DS 메모리 부분 Salesforce 구축(Phase 3) (‘23.05 ~ ‘23.12 (예정), 기흥 테라타워) (8개월) . | 제품 및 샘플, 영업기회 및 매출, 시스템 활용률 관련 대시보드 개발 (데이터 소스 : Oracle, Salesforce) | 프로젝트 내 Tableau 팀의 PL(Project Leader) 역할 수행 | 기존 개발 대시보드 운영 및 VOC 대응 | . | LG 화학 Salesforce &amp; Tableau 구축 (‘22.07 ~ ‘23.02, 여의도) (8개월) . | Tableau 서버 설치 및 운영(Window Server 2016) | 7개 사업부 대상 20개 대시보드 개발(매출 진척, 판매법인, C&amp;C(Claim&amp;Complain), 고객 인사이트, 사업부 특화) (데이터 소스: Salesforce) | 현업 및 수행사(PWC,Price Waterhouse Coopers) 대상 Tableau 사용 교육 | . | 삼성 전자 DS 메모리 부분 Salesforce 구축(Phase 1) (‘22.01 ~ ‘22.05, 기흥 테라타워) (4개월) . | 매출 관련 대시보드 3개 개발 및 운영 | . | . ",
    "url": "/docs/1.JayJay/About%20JayJay(Kor)/#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8",
    
    "relUrl": "/docs/1.JayJay/About%20JayJay(Kor)/#프로젝트"
  },"90": {
    "doc": "About JayJay(Kor)",
    "title": "기타(POC, 교육 등)",
    "content": ". | 카카오 엔터프라이즈 Demo (‘23.03, DKBMC 본사) . | 대시보드 6개 개발 | . | LG CNS POC (‘23.03, 마곡 LG 사이언스 파크) . | 대시보드 2개 개발 (데이터 소스 : Salesforce) | . | 동아 대학교 시각화 해커톤 멘토링 (‘21.11, 온라인) . | 대학생 대상 Tableau Desktop 교육 | Tableau 대시보드 관련 멘토링 | . | 현대 엔지니어링 Tableau 교육 (‘21.11, 성동구 성수동) . | 현업 대상 Tableau Desktop 및 Tableau Prep Builder 교육 | . | 오토닉스 POC (‘21.09 ~ ‘21.11, DKBMC 본사 및 부산) . | POC용 대시보드 16개 개발(매출, 신제품, 회계 관련) | . | . ",
    "url": "/docs/1.JayJay/About%20JayJay(Kor)/#%EA%B8%B0%ED%83%80poc-%EA%B5%90%EC%9C%A1-%EB%93%B1",
    
    "relUrl": "/docs/1.JayJay/About%20JayJay(Kor)/#기타poc-교육-등"
  },"91": {
    "doc": "About JayJay(Kor)",
    "title": "About JayJay(Kor)",
    "content": ". ",
    "url": "/docs/1.JayJay/About%20JayJay(Kor)/",
    
    "relUrl": "/docs/1.JayJay/About%20JayJay(Kor)/"
  },"92": {
    "doc": "01.Autonics",
    "title": "1. 요약",
    "content": ". | 기간 : ‘21.09.27 ~ ‘21.11.04 | 고객사 : 오토닉스 (제조사) | 업무 : 대시보드 16개 개발 (매출실적, 신제품, 경영지표) | 데이터 소스 : Microsoft Excel | 배운점 및 느낀점 . | 대시보드 컨테이너 사용법 공부 필요 | 날짜 함수(Datetrunc, Dateparse 등) 및 매개변수 활용법 | . | . ",
    "url": "/docs/2.Projects/Projects/Autonics/#1-%EC%9A%94%EC%95%BD",
    
    "relUrl": "/docs/2.Projects/Projects/Autonics/#1-요약"
  },"93": {
    "doc": "01.Autonics",
    "title": "2. 회고록",
    "content": "DKBMC에서 일하면서 나에게 주어진 첫번째 업무였다. 그 당시에는 POC가 무슨 의미인지, 무엇을 하는 것인지도 몰랐다. 찾아보니 Proof Of Concept의 약자로 고객 입장에서 사용하지 않았던 새로운 기술이나 솔루션을 도입하기 전에 이를 검증하기 위해 거치는 단계를 일컫는 다는 것을 알게 되었다. 입사한지 3개월차여서 역량적으로 부족함이 많다고 생각했기 때문에 프로젝트를 하는것은 개인적으로 부담스럽기도 했었고, 이에 POC가 나의 첫 업무로서 적당할 것이라는 생각이 들었고 열심히 해보고자 다짐했었다. 오토닉스는 센서, 필드계기, 전력 기기 등을 만드는 부산에 위치한 제조사이다. 고객으로부터 대시보드 개발에 사용될 엑셀 데이터틀을 전달받았고, 고객이 원하는 대시보드 화면에 대한 파일도 전달받았다. 제조사이다보니 자사의 기존 제품들의 판매 현황과 신제품 관리에 대해서 대시보드화 하고 싶었던 필요가 있어 태블로 도입을 고려하고 있었다. 매출실적, 신제품, 경영지표 관련 대시보드를 16개 개발했었고, 그 당시에는 컨테이너를 잘 사용할줄 몰라서 부동(floating)으로 다 개발을 했었다. 다수개의 대시보드 이동으로 구현된 통합문서를 모두 부동으로 만드는 것은 레이아웃 통일을 위해서 굉장한 공수가 들어가는데, 컨테이너 사용에 대해서 미숙하다보니 부동으로 일일이 개발했던 기억이 있다. 지금 생각해보면 통합문서를 전부 다 부동으로 개발하는것이 굉장히 무모하다고 생각하지만, 그 당시의 나는 추가 근무를 하는 한이 있더라도 부동으로 모든 레이아웃을 통일시켰다. 또한 날짜 함수(Dateatrunc, Dateparse)들을 잘 활용하지 못하기도 했었다. 그래서 주변의 도움을 받아서 날짜와 관련된 계산된 필드를 만들기도 했었다. 프로젝트를 하다보니 날짜 함수를 잘 다루는 것은 필수 능력이었다. 기본적으로 다룰줄 알아야 하는 함수들이었다. 확실히 공부를 목적으로 했던 샘플 데이터로 개발하는 것과는 느낌이 달랐다. 현업에서 사용되는 데이터로 대시보드를 개발과 발표 자료를 만들고, 본부장님과 태블로 코리아 영엽 및 컨설턴트와 함께 부산에 위치한 고객사에 다녀오면서 신입 사원으로서 굉장히 값진 경험을 했다고 생각한다. 그 이후 나는 삼성 프로젝트에 투입되었는데, 다른 신입 사원들의 고생해서 만드신 제안서덕분에 태블로가 채택이 되어 프로젝트로 이어져서, 다른 팀원분들께서 프로젝트를 수행하셨다. POC용 대시보드 개발에 있어서 지금 생각해보면 부족한 점이 많았고 더 잘 만들수 있을것 같지만, 그래도 그 당시의 나는 최선을 다했었고, 내가 POC로 관여 했던 영업건이 실제 프로젝트로 이어져서 뿌듯한 점도 있었다. ",
    "url": "/docs/2.Projects/Projects/Autonics/#2-%ED%9A%8C%EA%B3%A0%EB%A1%9D",
    
    "relUrl": "/docs/2.Projects/Projects/Autonics/#2-회고록"
  },"94": {
    "doc": "01.Autonics",
    "title": "1. Summary",
    "content": ". | Period : ‘21.09.27 ~ ‘21.11.04 | Customer: Autonics (manufacturer) | Task : Developed 16 dashboards (sales performance, new products, management indicators) | Data Source : Microsoft Excel | What I learned and felt . | Need to study how to use dashboard containers | Date functions (Datetrunc, Dateparse, etc.) and how to utilize parameters | . | . ",
    "url": "/docs/2.Projects/Projects/Autonics/#1-summary",
    
    "relUrl": "/docs/2.Projects/Projects/Autonics/#1-summary"
  },"95": {
    "doc": "01.Autonics",
    "title": "2. Memoirs",
    "content": "It was the first duty given to me while working for DKBMC. At that time, I didn’t know what POC meant or what it was doing. I found that Proof Of Concept stands for the steps taken to verify new technologies or solutions that were not used from the customer’s point of view. It was my third month of joining the company, so I thought I lacked a lot of competencies, so it was personally burdensome to do the project, so I thought POC would be suitable as my first work, and I vowed to work hard. Autonics is a Busan-based manufacturer that makes sensors, field instruments, and power devices. I received an Excel files from a customer to be used for dashboard development, and I also received a file on the dashboard screen that the customer wanted. As a manufacturer, there was a need to dashboard the sales status of its existing products and management of new products, so I was considering introducing it as a tablet. I developed 16 dashboards related to sales performance, new products, and management indicators, and at that time, All dashboards were developed as floating because I wans’t used to using container. Making all integrated documents implemented by multiple dashboard movements floating requires a lot of labor to unify the layout, but I remember developing them one by one because I was inexperienced in using containers. Now that I think about it, I think it’s very reckless to develop all the integrated documents in a floating way, but at the time, I unified all the layouts in a floating way, even if I had to work extra time. It also failed to make good use of date functions (Dateatrunc, Dateparse). So I also made a calculated field related to the date with the help of the people around me. Working on a project, it was an essential ability to handle date functions well. They were basically functions that needed to be handled. Certainly, it felt different from developing sample data for the purpose of studying. I think I had a very valuable experience as a new consultant while making dashboard development and presentation data with data used in the field, and visiting a client company located in Busan with my director, Tableau Korea salesperson and consultants. Since then, I have been put into the Samsung project, and thanks to the hard work of other new employees, Tableau was adopted and led to the project, and other team members carried out the project. When I think about it now, there were many shortcomings in developing dashboards for POC, and I think I could make it better, but I did my best at that time, and I was proud that the sales that I was involved in as POC led to the actual project. ",
    "url": "/docs/2.Projects/Projects/Autonics/#2-memoirs",
    
    "relUrl": "/docs/2.Projects/Projects/Autonics/#2-memoirs"
  },"96": {
    "doc": "01.Autonics",
    "title": "01.Autonics",
    "content": "작성일자 : 2023-07-01 ",
    "url": "/docs/2.Projects/Projects/Autonics/",
    
    "relUrl": "/docs/2.Projects/Projects/Autonics/"
  },"97": {
    "doc": "Basic(1)",
    "title": "Basic(1)",
    "content": "Ver 0.1.2 . | 1. Jupyter Notebook Syntax | 2. 리스트(List) . | 2.1. 리스트 인덱스 | 2.2. 리스트 업데이트 | 2.3. 자주 쓰이는 List 함수 | . | 3. 튜플(tuple) . | 3.1. 튜플 언패킹 | . | 4. 딕셔너리(dictionary) . | 4.1. 딕셔너리 업데이트 | 4.2. 딕셔너리 원소 추출 | . | 5. 집합형 | . 1. Jupyter Notebook Syntax . | Notebook은 셀(cell)이라는 네모 칸들로 구성된 . | Notebook을 새로 만들면 하나의 셀만 표시되어 있음 . | 단축키 b를 누르면 같은 결과를 얻을 수 있으며, a를 누르면 현재 셀 위에 새로운 셀이 추가됨 . | . | H 키를 눌러 다양한 단축키를 확인할 수 있음 . | . 1+2+3 . 6 . print(\"Hi I'm JayJay\") . Hi I'm JayJay . a = 10 b = a+5 b . 15 . print(a,b) print(0, \"JayJay\", a+b) . 10 15 0 JayJay 25 . a= 10 b = 10.5 c = \"jayjay\" d = (a==b) e = None print(a,b,c,d,e) print(type(a),type(b),type(c),type(d),type(e)) . 10 10.5 jayjay False None &lt;class 'int'&gt; &lt;class 'float'&gt; &lt;class 'str'&gt; &lt;class 'bool'&gt; &lt;class 'NoneType'&gt; . a = \"Hello jayjay\" print(a[2:5]) print(a[:6]) print(a[6:]) . llo Hello jayjay . a = \"Hello jayjay\" b = a.replace('jay','JAY') print(b) . Hello JAYJAY . height = 173 weight = 71 a = \"나의 키는 {}cm이고, 몸무게는 {}kg 입니다.\".format(height, weight) print(a) . 나의 키는 173cm이고, 몸무게는 71kg 입니다. a = \"I'm a boy you are a girl\" b = a.split() print(b) . [\"I'm\", 'a', 'boy', 'you', 'are', 'a', 'girl'] . c = a.split('a') print(c) . [\"I'm \", ' boy you ', 're ', ' girl'] . 2.리스트(list) . | 다양한 형태의 원소(item)를 하나의 집합으로 모아 표현하는 데이터 구조 . | 빈 list도 생성 가능 . | [ ] 형태로 표현 . | 리스트는 다른 리스트의 원소가 될 수 있음 . | . a = [] # 비어있는 리스트 b = [1,2,3] # 숫자를 요소값으로 가질 수 있음 c = ['Life', 'is', 'too', 'short'] # 문자열을 요소값으로 가질 수 있음 d = [1,2,'Life', 'is'] # 숫자와 문자열을 함께 요소값으로 가질 수 있음 e = [1,2, ['Life', 'is']] # 리스트 자체를 요소값으로 가질 수 있음 print(a) print(b) print(c) print(d) print(e) . [] [1, 2, 3] ['Life', 'is', 'too', 'short'] [1, 2, 'Life', 'is'] [1, 2, ['Life', 'is']] . #문자열 -&gt; 리스트 변환 a = \"Hello JayJay\" b = list(a) print(b) . ['H', 'e', 'l', 'l', 'o', ' ', 'J', 'a', 'y', 'J', 'a', 'y'] . #튜블 -&gt; 리스트 변환 c = (2, 5,10) d = list(c) print(d) . [2, 5, 10] . | 문자열 split() 함수를 통해 생성 . | 문자열에서 언급했던 split() 함수, 결과가 리스트 형태로 반환 . | . a = \"I'm a boy you are a girl\" b = a.split() print(b) . [\"I'm\", 'a', 'boy', 'you', 'are', 'a', 'girl'] . 2.1 리스트 인덱스 . - 문자열의 인덱스와 같은 개념으로 사용가능 - 하나의 원소만 추출할 경우 해당 원소 본래 타입으로 추출 - 두개 이상의 원소를 추출할 경우 리스트로 추출 . a = [1,2,3,4,5] print(a[2]) print(a[-1]) print(a[:3]) . 3 5 [1, 2, 3] . 2.2 리스트 업데이트 . | 인덱스를 통해 리스트의 원소를 새로운 값으로 업데이트 가능 | . a = [1,2,3,4,5] a[0] = 0 a[-1] = 7 print(a) . [0, 2, 3, 4, 7] . 2.3 자주 쓰이는 List 함수 . | append() 함수 . | 리스트의 마지막 인덱스에 항목을 추가 . | . a = [1,2,3,4,5] a.append(10) print(a) . [1, 2, 3, 4, 5, 10] . | extend() 함수 . | 해당 리스트에 다른 리스트의 원소들을 더하여 확장 . | 연산자로도 확장이 가능 . | . a = [1,2,3,4,5] b = [6,7,8,9,10] a.extend(b) print(a) . [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] . a = [1,2,3,4,5] b = [6,7,8,9,10] a += b print(a) . [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] . a = [1,2,3,4,5] b = [6,7,8,9,10] a = a+b print(a) . [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] . | insert() 함수 . | 추가하고자 하는 원소를 리스트로 원하는 위치에 추가 . | (인덱스, 추가하고자 하는 원소) 작성 . | . a = [1,2,3,4,5] a.insert(1,20) print(a) . [1, 20, 2, 3, 4, 5] . | remove() 함수 . | 지우고자 하는 값을 지워주는 함수 . | 인덱스가 아닌 item명 입력 . | . a = [\"a\",1,2,3,4,5] a.remove(\"a\") print(a) . [1, 2, 3, 4, 5] . a = [\"a\",1,2,3,4,5,\"a\"] a.remove(\"a\") print(a) . [1, 2, 3, 4, 5, 'a'] . | index() 함수 . | 찾고자 하는 값의 인덱스를 반환 . | . a = [1,2,3,4,5] a.index(5) . 4 . | in 키워드 . | 리스트 내에 해당 값이 존재하는지 확인하는 키워드 . | value in [list]의 형태로 작성 . | True, False 로 반환 . | . a = [1,2,3,4,5] b = 10 c = b in a print(c, type(c)) . False &lt;class 'bool'&gt; . a = [1,2,3,4,5] b = 4 c = b in a print(c, type(c)) . True &lt;class 'bool'&gt; . | list 정렬 . | sort() 리스트 자체를 정렬시켜주는 리스트 함수 . | sorted() 정렬된 리스트를 반환시켜주는 파이썬 기본 내장 함수 . | . a = [10,1,3,2,7,4,8,5,9,6] a.sort(reverse= True) # reverse = True 내림차순, 생략시 오름차순 print(a) . [10, 9, 8, 7, 6, 5, 4, 3, 2, 1] . 3.튜플(tuple) . | 리스트처럼 여러 값을 하나의 집합에 표현하는 데이터 구조(공통점) . | 리스트는 대괄호, 튜플은 괄호로 둘러쌈 (차이점1) . | 튜플은 1개의 요소만을 가질 때는 요소 뒤에 콤마(,)를 붙여야 함(차이점2) . | 리스트와의 차이점은 생성된 후 문자열과 같이 변경 불가능(immutable)(차이점 3) . | 파이썬에는 리스트, 딕셔너리와 같은 변경 가능한(mutable) 자료형과 문자열, 튜플 같은 변경 불가능(immutable)한 자료형이 존재 | . | 얼핏 보면 튜플과 리스는 비슷한 역할을 하지만 프로그래밍을 할 때 튜플과 리스트는 구분해서 사용하는 것이 좋음 . | 튜플과 리스트는 가장 큰 차이는 값을 변화시킬 수 있는가 없는가임 . | 즉, 리스트의 항목값은 변화가 가능하고 튜플의 항목 값은 변화가 불가능함 . | 따라서 프로그램이 실행되는 동안 그 값이 항상 변하지 않기를 바란다거나 값이 바뀔까 걱정하고싶지 않다면 주저하지 말고 튜플을 사용해야함 . | 이와는 반대로 수시로 그 값을 변화시켜야할 경우라면 리스트를 사용해야 함 . | 실제 프로그램에서는 값이 변경되는 형태의 변수가 훨씬 많기 때문에 평균적으로 튜플보다는 리스트를 더 많이 사용하게 됨 . | . | . a = [1] b = (1,) c = (1) print(a, type(a)) print(b, type(b)) print(c, type(c)) . [1] &lt;class 'list'&gt; (1,) &lt;class 'tuple'&gt; 1 &lt;class 'int'&gt; . a = [1,2,3] b = (1,2,3) print(a, type(a)) print(b, type(b)) . [1, 2, 3] &lt;class 'list'&gt; (1, 2, 3) &lt;class 'tuple'&gt; . 3.1 튜플 언패킹(tuple unpacking) . | 튜플의 요소들을 각각의 변수로 할당 . | 한 line으로 간편하게 표현이 가능하며, 괄호 또한 생략이 가능 . | . a,b,c,d = 10, 20, 30, 40 print(a,b,c,d) . 10 20 30 40 . | 튜플 언패킹은 값을 교환할 때 유용하게 사용 가능 | . # 다른 프로그램 언어는 값을 교환하려면 임시 변수가 필요 했음 a = 5 b = 4 temp = a a = b b = temp print(a) print(b) . 4 5 . a = 5 b = 4 a,b = b, a print(a) print(b) . 4 5 . 4. 딕셔너리(dictionary) . | “이름” : “송유한”와 같이 한 쌍의 대응관계를 나타낼 수 있는 데이터 구조 . | key : value의 구조를 가지고 있으며 ,로 구분 . | key에는 숫자형, 문자형, 튜플과 같이 변경불가능(immutable)한 타입만 올 수 있으며 리스트나 딕셔너리는 key로 사용할 수 없다. | value에는 모든 형태의 데이터가 올 수 있다. | . | 순서가 존재하지 않음 . | 대신, key를 인덱스처럼 활용 가능 . | key를 통해 빠른 연산이 가능 . | . | {}형태로 표현 . | . a = {\"이름\" : \"임종준\", \"키\" : \"173\", \"혈액형\" : \"O형\"} b = {0:1, 1:2, 2:3} c = {\"a\" : [1,2,3], \"b\" : a} print(a) print(b) print(c) . {'이름': '임종준', '키': '173', '혈액형': 'O형'} {0: 1, 1: 2, 2: 3} {'a': [1, 2, 3], 'b': {'이름': '임종준', '키': '173', '혈액형': 'O형'}} . 4.1 딕셔너리 업데이트 . | 기존에 key가 존재 하면 새로운 value로 업데이트 한다. 즉 key는 중복으로 존재할 수 없음 . | 기존 key가 존재하지 않는다면, 새로운 key와 value가 추가됨 . | value는 중복으로 존재 가능 . | . a = {\"이름\" : \"임종준\", \"키\" : \"173\", \"혈액형\" : \"O형\"} print(a) . {'이름': '임종준', '키': '173', '혈액형': 'O형'} . #새로운 key, value 추가 a[\"소속\"] = \"DK BMC\" print(a) . | update( ) 함수 . | 두 딕셔너리를 합쳐주는 함수 . | 중복되는 key가 있다면 합쳐지는 객체 key의 value로 덮어써짐 . | . | . a = {\"a\" : 1, \"b\" : 2, \"c\" : 3} b = {\"a\" : 2, \"d\" : 2, \"e\" : 5} a.update(b) print(a) . {'a': 2, 'b': 2, 'c': 3, 'd': 2, 'e': 5} . | key 삭제 . | del 키워들 사용하여 key 삭제 . | . a = {\"이름\" : \"임종준\", \"키\" : \"173\", \"혈액형\" : \"O형\"} print(a) del a['키'] print(a) . {'이름': '임종준', '키': '173', '혈액형': 'O형'} {'이름': '임종준', '혈액형': 'O형'} . | clear() 함수 . | 딕셔너리의 모든 값을 초기화 한다 | . | . a = {\"이름\" : \"임종준\", \"키\" : \"173\", \"혈액형\" : \"O형\"} print(a) a.clear() print(a) . {'이름': '임종준', '키': '173', '혈액형': 'O형'} {} . | in 키워드 . | key값의 존재를 확인(value는 불가) . | key값으로 검색하기 때문에 빠른 연산이 가능 . | . a = {\"a\" : 1, \"b\" : 2, \"c\" :3} print('d' in a) . False . a = {\"a\" : 1, \"b\" : 2, \"c\" :3} print('a' in a) . True . #value 값을 넣어준다면... a = {\"a\" : 1, \"b\" : 2, \"c\" :3} print('1' in a) . False . | get () 함수 . | key값으로 검색하여 value 값을 반환해주는 함수 . | dic.[key] 형식으로 접근하면 key가 없는 경우 에러가 발생 . | dic.get(key) 함수로 접근하면 None으로 반환되어 에러가 발생하지 않음 . | . | . a = {\"a\" : 1, \"b\" : 2, \"c\" :3} print(a['d']) . a = {\"a\" : 1, \"b\" : 2, \"c\" :3} print(a.get('d')) . None . a = {\"a\" : 1, \"b\" : 2, \"c\" :3} print(a.get('c')) . 3 . 4.2 딕셔너리 원소 추출 . | key() : key만 출력 . | values() : value만 출력 . | items() : (key, value) 튜플로 출력 . | . a = {\"a\" : 1, \"b\" : 2, \"c\" :3} print(a)c print(list(a.keys())) print(list(a.values())) print(list(a.items())) . {'a': 1, 'b': 2, 'c': 3} ['a', 'b', 'c'] [1, 2, 3] [('a', 1), ('b', 2), ('c', 3)] . 5.집합형(set) . | 수학에서의 집합과 동일한 개념 . | set도 딕셔너리와 같이 {} 형태로 표현되며, 딕셔너리의 key와 같이 숫자형, 문자형 타입만 올 수 있음 . | list()함수처럼 set()을 통해 리스트, 문자열 등의 데이터를 set으로 변경 할 수 있음 . | . a = [1,2,3,4,5] b = set(a) print(b) . {1, 2, 3, 4, 5} . a = {1,2,3} b = {1,2,3,4,5} print(a.union(b)) #합집합 print(a.intersection(b)) #교집합 print(b.difference(a)) #차집합 print(a.issubset(b)) #부분집합 . {1, 2, 3, 4, 5} {1, 2, 3} {4, 5} True . ",
    "url": "/docs/6.Python/markdown/Basic(1)/#basic1",
    
    "relUrl": "/docs/6.Python/markdown/Basic(1)/#basic1"
  },"98": {
    "doc": "Basic(1)",
    "title": "Basic(1)",
    "content": ". 작성일자 : 2023-07-25 수정일자 : 2023-08-02 ",
    "url": "/docs/6.Python/markdown/Basic(1)/",
    
    "relUrl": "/docs/6.Python/markdown/Basic(1)/"
  },"99": {
    "doc": "CHANGELOG",
    "title": "CHANGELOG",
    "content": "All notable user-facing changes to this project are documented in this file. The project underwent a major maintenance shift in March 2022. ",
    "url": "/CHANGELOG/",
    
    "relUrl": "/CHANGELOG/"
  },"100": {
    "doc": "CHANGELOG",
    "title": "HEAD",
    "content": "This website is built from the HEAD of the main branch of the theme repository. This website includes docs for some new features that are not available in v0.5.2! . Code changes to main that are not in the latest release: . | N/A | . Docs changes in main that are not in the latest release: . | N/A | . ",
    "url": "/CHANGELOG/#head",
    
    "relUrl": "/CHANGELOG/#head"
  },"101": {
    "doc": "CHANGELOG",
    "title": "Release v0.5.3",
    "content": "Hi all, this is a minor patch release that only includes one change: changing all text-based CSS properties to use rem instead of hard-coded px values. This has two effects: . | All deprecation warnings are now fixed on build; you should now get a clean build with jekyll build. | We have deprecated the $root-font-size SCSS variable. We will remove it in an upcoming release of the theme. | . If you use the stock Just the Docs theme, this release should have no impact on your final built site. If you change the $root-font-size SCSS variable, you might experience light layout shifts. Using Release v0.5.3 . Users who have not pinned the theme version will be automatically upgraded to v0.5.3 the next time they build their site. To use this release explicitly as a remote theme: . remote_theme: just-the-docs/just-the-docs@v0.5.3 . To use this version explicitly as a gem-based theme, pin the version in your Gemfile and re-run bundle install or bundle update just-the-docs: . gem \"just-the-docs\", \"0.5.3\" . To use and pin a previous version of the theme, replace the 0.5.3 with the desired release tag. Bugfixes . | Fixed: font-size scaling for text-related CSS properties by using rem instead of fixed px values; deprecate $root-font-size by @mattxwang in #1169 | . ",
    "url": "/CHANGELOG/#release-v053",
    
    "relUrl": "/CHANGELOG/#release-v053"
  },"102": {
    "doc": "CHANGELOG",
    "title": "Release v0.5.2",
    "content": "Hi all, this is a minor patch release that mostly focuses on accessibility. Since we follow semantic versioning, this should be a smooth upgrade with no breaking changes. In addition, the theme docs website has a new canonical URL: https://just-the-docs.com. We’ve also retroactively published the theme docs website for version v0.3.3 at https://v0-3-3-docs.just-the-docs.com/. Thank you to our GitHub sponsors for funding our domain name! . Using Release v0.5.2 . Users who have not pinned the theme version will be automatically upgraded to v0.5.2 the next time they build their site. To use this release explicitly as a remote theme: . remote_theme: just-the-docs/just-the-docs@v0.5.2 . To use this version explicitly as a gem-based theme, pin the version in your Gemfile and re-run bundle install or bundle update just-the-docs: . gem \"just-the-docs\", \"0.5.2\" . To use and pin a previous version of the theme, replace the 0.5.2 with the desired release tag. Bugfixes . | Fixed: liquid variable leakage in navigation components by @pdmosses in #1243 | Fixed: ARIA roles and labels for search, header, logo, mobile menu button, and main content by @joelhawksley in #1259 | Fixed: ARIA labels for all anchors with href=\"#\"; adds aria-pressed information for toggles by @mattxwang in #1262 | . New Contributors . | @joelhawksley made their first contribution in #1259 | . ",
    "url": "/CHANGELOG/#release-v052",
    
    "relUrl": "/CHANGELOG/#release-v052"
  },"103": {
    "doc": "CHANGELOG",
    "title": "Release v0.5.1",
    "content": "Hi all, this is a very small minor patch release that has two small behavioral bugfixes: fixing a regression introduced in v0.5.0 on Safari versions &lt;16.4 (broken media query), and the copy code button providing incorrect feedback in insecure browser contexts. This should be a smooth upgrade with no breaking changes. As always, we’d love your feedback. Open an issue or start a discussion for bug reports, feature requests, and any other feedback. Thanks for continuing to use Just the Docs! . Using Release v0.5.1 . Users who have not pinned the theme version will be automatically upgraded to v0.5.1 the next time they build their site. To use this release explicitly as a remote theme: . remote_theme: just-the-docs/just-the-docs@v0.5.1 . To use this version explicitly as a gem-based theme, pin the version in your Gemfile and re-run bundle install or bundle update just-the-docs: . gem \"just-the-docs\", \"0.5.1\" . To use and pin a previous version of the theme, replace the 0.5.1 with the desired release tag. Bugfixes . | Fixed: disable copy code button in insecure contexts @rmoff in #1226 | Fixed: context-based media feature not supported by Safari &lt;16.4 by @mattxwang in #1240 | . Documentation . | Added: document copy code button requiring secure context by @rmoff in #1225 | Fixed: typo (“them” → “theme”) in MIGRATION.md by @waldyrious in #1219 | Fixed: font-weight typo (Utilities &gt; Typography) by @mattxwang in #1229 | Fixed: just the docs typo in migration guide by @mattxwang in #1230 | . New Contributors . | @rmoff made their first contribution in #1225 | . ",
    "url": "/CHANGELOG/#release-v051",
    
    "relUrl": "/CHANGELOG/#release-v051"
  },"104": {
    "doc": "CHANGELOG",
    "title": "Release v0.5.0",
    "content": "Hope your April is going well! This new release of Just the Docs is relatively minor. It has one breaking change: we’ve reverted the import order of setup.scss to be before color schemes. In addition, we include two requested fixes: color contrast issues with ::selection and using Just the Docs with mermaid versions &gt;=10. We’ve marked this as a minor version bump due to the breaking change. In the next section, we briefly outline what migration steps should be. Users who did not migrate to v0.4.2 or who do not have a custom setup.scss are guaranteed no breaking changes. As always, we’d love your feedback. Open an issue or start a discussion for bug reports, feature requests, and any other feedback. Thanks for continuing to use Just the Docs! . Migrating to v0.5.0 . Migration: users with a custom setup.scss cannot rely on variables or functions defined in color_scheme. This reverts to the behaviour in v0.4.1. Users should instead move those variables or functions to the color_scheme files themselves. For more, refer to the migration guide. Using Release v0.5.0 . Users who have not pinned the theme version will be automatically upgraded to v0.5.0 the next time they build their site. To use this release explicitly as a remote theme: . remote_theme: just-the-docs/just-the-docs@v0.5.0 . To use this version explicitly as a gem-based theme, pin the version in your Gemfile and re-run bundle install or bundle update just-the-docs: . gem \"just-the-docs\", \"0.5.0\" . To use and pin a previous version of the theme, replace the 0.5.0 with the desired release tag. Bugfixes . | Reverted (breaking): “Fix import order for setup.scss (#1184)” by @mattxwang in #1209 | Fixed: color contrast issues with ::selection (reverting to browser defaults) @mattxwang in #1208 | Fixed: mermaid v10, bundle all mermaid code in component by @mattxwang in #1190 | Removed: unused images (just-the-docs.png, search.svg) by @mattxwang in #1107 | Removed: CODE_OF_CONDUCT, docker-compose, and Dockerfile files from site by @mattxwang in #1187 | . Full Changelog: https://github.com/just-the-docs/just-the-docs/compare/v0.4.2…v0.5.0 . ",
    "url": "/CHANGELOG/#release-v050",
    
    "relUrl": "/CHANGELOG/#release-v050"
  },"105": {
    "doc": "CHANGELOG",
    "title": "Release v0.4.2",
    "content": "Hello! We’re back again with another small release. Like v0.4.1, this release is a semver patch: it only includes bugfixes, and is fully backwards-compatible. The big highlight of this theme is fixing our light scheme code highlighting contrast issues; this was one of our most-requested features! This change is fully backwards-compatible; users can opt-in to our old highlighting theme by using legacy_light instead of light. As always, we’d love your feedback. Open an issue or start a discussion for bug reports, feature requests, and any other feedback. Thanks for continuing to use Just the Docs! . Using Release v0.4.2 . Users who have not pinned the theme version will be automatically upgraded to v0.4.2 the next time they build their site. To use this release explicitly as a remote theme: . remote_theme: just-the-docs/just-the-docs@v0.4.2 . To use this RC explicitly as a gem-based theme, pin the version in your Gemfile and re-run bundle install or bundle update just-the-docs: . gem \"just-the-docs\", \"0.4.2\" . To use and pin a previous version of the theme, replace the 0.4.2 with the desired release tag. Bugfixes . | Fixed: light scheme code highlighting contrast issues; updated to use Atom’s One Light colors, consolidate theme variables by @mattxwang in #1166 | Fixed: duplicate import of color_schemes by @mattxwang in #1173 | Fixed: import order for setup.scss by @mattxwang in #1184 | Removed: unused dark syntax themes by @mattxwang in #1192 | . Documentation . | Added: docs for using mermaid with AsciiDoc by @flyx in #1182 | . Full Changelog: https://github.com/just-the-docs/just-the-docs/compare/v0.4.1…v0.4.2 . ",
    "url": "/CHANGELOG/#release-v042",
    
    "relUrl": "/CHANGELOG/#release-v042"
  },"106": {
    "doc": "CHANGELOG",
    "title": "Release v0.4.1",
    "content": "Hello! We hope you’ve been enjoying the new v0.4.0; we appreciate all the feedback we’ve gotten already! As promised, future releases will be small with simple steps to upgrade. This is one of them! v0.4.1 is a semver patch: it only includes bugfixes, and is fully backwards-compatible. As always, we’d love your feedback. Open an issue or start a discussion for bug reports, feature requests, and any other feedback. Thanks for continuing to use Just the Docs! . Using Release v0.4.1 . Users who have not pinned the theme version will be automatically upgraded to v0.4.1 the next time they build their site. To use this release explicitly as a remote theme: . remote_theme: just-the-docs/just-the-docs@v0.4.1 . To use this RC explicitly as a gem-based theme, pin the version in your Gemfile and re-run bundle install or bundle update just-the-docs: . gem \"just-the-docs\", \"0.4.1\" . To use and pin a previous version of the theme, replace the 0.4.1 with the desired release tag. Bugfixes . | Fixed: allow later versions of bundler by @mattxwang in #1165 | Fixed: AsciiDoc code block styling by @flyx in #1168 | Fixed: main content negative margin for viewports in [$md, $nav-width + $content-width] by @Dima-369 in #1177 | Removed: unused OneDarkJekyll files by @mattxwang in #1167 | . Documentation . | Fixed: re-add jekyll-github-metadata to docs site by @mattxwang in #1108 | . New Contributors . | @flyx made their first contribution in #1168 | @Dima-369 made their first contribution in #1177 | . Full Changelog: https://github.com/just-the-docs/just-the-docs/compare/v0.4.0…v0.4.1 . ",
    "url": "/CHANGELOG/#release-v041",
    
    "relUrl": "/CHANGELOG/#release-v041"
  },"107": {
    "doc": "CHANGELOG",
    "title": "Release v0.4.0",
    "content": "We’re so excited to release Just the Docs v0.4.0. This release has been almost a year in the making - after our new maintenance team has taken over the project, we’ve added two years of backlogged features and bugfixes to modernize the theme. This CHANGELOG will summarize some of the key changes, discuss migrations strategies, and outline broad future plans for this theme. Brief Overview - Highlighted Changes . v0.4.0 contains many new features and bugfixes. We enumerate all of them in further sections in this changelog; however, we’d like to call out some of the most-requested changes: . | better support for dark theme: dark highlighting, search input color | callouts, a new design component to highlight content | configuring mermaid.js, a markdown-native diagram visualization library | copy code button for code snippets | external navigation links | major improvements to nav generation efficiency and robustness | minor improvements to built-in accessibility (SVG icons, nav titles, skip to main content) | modularized site components (advanced feature) | new custom includes: table of contents heading, navigation panel footer, search placeholder, lunr search indices | bugfixes involving WEBrick and Ruby 3, Liquid processing in CSS comments, nested task lists, relative URLs, scroll navigation, corrupted search data from rake, breadcrumbs, and more! | more documentation for custom includes, this changelog, and the migration guide | . After usage instructions and the roadmap, we enumerate all changes from v0.3.3. Using Release v0.4.0 . Unlike pre-releases, v0.4.0 is a new semver minor release for the theme. That means that users who have not pinned the theme version will be automatically upgraded to v0.4.0 the next time they build their site. To use this release explicitly as a remote theme: . remote_theme: just-the-docs/just-the-docs@v0.4.0 . To use this RC explicitly as a gem-based theme, pin the version in your Gemfile and re-run bundle install or bundle update just-the-docs: . gem \"just-the-docs\", \"0.4.0\" . If you would prefer to not upgrade, you can enforce that explicitly: . | pin your gem version in your Gemfile, like so gem \"just-the-docs\", \"0.3.3\" . | freeze the remote_theme, like so remote_theme: just-the-docs/just-the-docs@v0.3.3 . | . Migration Guide and Strategies . We’ve developed a new migration guide for users to migrate from version v0.3.3 to v0.4.0. It outlines major changes in project maintenance (e.g. new repository link, team) as well as breaking changes that may break your site (and potential solutions). We suggest that all users refer to the guide before manually upgrading their site. For the vast majority of users, we do not anticipate that this will be a breaking change. The major touch points are surrounding new includes, navigation (ordering, pages, and collections), the favicon, and a shift to relative URLs. However, users who heavily customize the theme (primarily by overriding includes) will likely have to make minor changes. Given the length of features added in this release, users may want to incrementally upgrade through the pre-releases. To follow this approach, read this changelog from v0.4.0.rc1 to v0.4.0.rc5; this breaks down the release into small chunks, each of which should be easier to upgrade. v0.4.0.rc5 is identical to this release. For support with migrating to v0.4.0, open an issue or start a discussion and let us know! . Roadmap (What’s Next?) . Moving forward, we plan to release more frequently with smaller, bite-sized changes. This should make it easier for users to upgrade in the future! . Broadly, many features are still on the radar. We anticipate the rest of v0.4.x to be bugfixes surrounding this new release. For version v0.5, our roadmap includes: . | a theme toggle (light/dark mode), with automatic theme switching based on browser preferences | better GDPR compliance for analytics | multi-level/recursive navigation (unlimited hierarchy of child pages) | . In future versions, we also plan on: . | adding better dark theme defaults | adding better internationalization support | exploring offline PDF generation | improving accessibility within the theme | improving search functionality | refactoring and improving the robustness of our codebase | . Have ideas for what’s next, or want to get involved? Open an issue or start a discussion and let us know! We’re looking for more contributors and maintainers to help us develop the theme. New Features . | Added: Combination by @pdmosses in #578 . | Added: dark highlighting in #463 | Added: pages and collections in #448 | Added: callouts in #466 | Fixed: breadcrumb behaviour … by @AdityaTiwari2102 in #477 | Fixed: prevent rake command corrupting search data in #495 (also listed below) | Fixed: nested lists in #496 | Fixed: set color for search input in #498 (also listed below) | Fixed: sites with no child pages (no PR) | Fixed: TOC/breadcrumbs for multiple collections in #494 | Added: collection configuration option nav_fold (no PR) | Fixed: indentation and color for folded collection navigation (no PR) | Fixed: scroll navigation to show the link to the current page in #639 | Fixed: Replace all uses of absolute_url by relative_url, by @svrooij in #544 | . | Added: custom favicon _includes by @burner1024 in #364 | Added: set color for search input by @pdmosses in #498 | Added: search placeholder configuration by @mattxwang in #613 | Added: ‘child_nav_order’ front matter to be able to sort navigation pages in reverse by @jmertic in #726 | Added: nav_footer_custom include by @nathanjessen in #474 | Added: style fixes for jekyll-asciidoc by @alyssais in #829 | Added: mermaid.js support by @nascosto in #857 | Added: support for external navigation links by @SPGoding in #876 | Added: refactor mermaid config to use mermaid_config.js include, only require mermaid.version in _config.yml by @mattxwang in #909 | Added: accessible titles to nested page nav toggle by @JPrevost in #950 | Added: better title styling for AsciiDoc examples by @alyssais in #944 | Added: docs for custom search placeholder by @mattxwang in #939 | Added: provide ability to skip to main content by @JPrevost in #949 | Added: styling for &lt;blockquote&gt; by @mattxwang in #965 | Added: custom include for TOC heading by @pdmosses in #980 | Added: experimental nav optimization for simple cases by @pdmosses in #992 | Added: support multiple Google Analytics tracking IDs, document UA -&gt; GA4 switch by @MichelleBlanchette in #1029 | Added: copy code button to code snippets by @simonebortolin in #945 | Added: restore simple configuration of favicon.ico via site.static_files by @pdmosses in #1095 | Added: modularize site components by @mattxwang in #1058 | Added: includes for custom lunr Liquid and JS code by @diablodale in #1068 | Added: new _sass/custom/setup.scss for variable definition by @mattxwang in #1135 | Added: configuration key to load a local version of mermaid by @fabrik42 in #1153 | . Bugfixes . | Fixed: prepend site.collections_dir if exists by @alexsegura in #519 | Fixed: nested task lists (#517) by @pdmosses in #855 | Fixed: suppress Liquid processing in CSS comments by @pdmosses in #686 | Fixed: prevent rake command from corrupting search data by @pdmosses in #495 | Fixed: anchor heading links should be visible on focus by @jacobhq in #846 | Fixed: add overflow-x: auto to figure.highlight by @iridazzle in #727 | Fixed: add overflow-wrap: word-break to body by @iridazzle in #889 | Fixed: vertical alignment for consecutive labels by @Eisverygoodletter in #893 | Fixed: allow links to wrap by @pdmosses in #905 | Fixed: nav scroll feature and absolute/relative URLs by @pdmosses in #898 | Fixed: exclude vendor/ in Jekyll config by @manuelhenke in #941 | Fixed: improve build time of navigation panel by @pdmosses in #956 | Fixed: spacing issue when search is disabled by @henryiii in #960 | Fixed: active grandchild link class by @pdmosses in #962 | Fixed: HTML validation issues (W3C validator) by @mattxwang in #964 | Fixed: link styling now uses text-decoration values by @mattxwang in #967 | Fixed: cleaning up Jekyll excludes by @pdmosses in #985 | Fixed: docs, narrow styling for code highlighting with line numbers by @pdmosses in #974 | Fixed: default syntax highlighting in custom color schemes @pdmosses in #986 | Fixed: incorrect disambiguation in generated TOCs by @pdmosses in #999 | Fixed: duplicated external links in collections by @pdmosses in #1001 | Fixed: import order of custom.scss; puts at end by @deseo in #1010 | Fixed: top-level active link styling by @pdmosses in #1015 | Fixed: external links for sites with no pages by @pdmosses in #1021 | Fixed: duplicate title if jekyll-seo-tag not in users’s plugins by @Tom-Brouwer in #1040 | Fixed: removes (duplicate) favicon.html, shifts content to head_custom.html by @mattxwang in #1027 | Fixed: add reversed, deprecate desc for nav child_nav_order by @jmertic in #1061 | Fixed: child.child_nav_order to node.child_nav_order by @mattxwang in #1065 | Fixed: remove all uses of / as SASS division by @mattxwang in #1074 . | note: this was originally merged as #1074 with a bug; it was reverted in #1076, and then reimplemented in #1077 | . | Fixed: skip nav collection generation when site has no pages by @pdmosses in #1092 | Fixed: standardize SCSS with declaration-block-no-redundant-longhand-properties by @simonebortolin in #1102 | Fixed: incorrect padding property value pair in labels.scss by @SConaway in #1104 | Fixed: various bugs with copy code button by @simonebortolin in #1096 | Fixed: replace inline styling for &lt;svg&gt; icons by @captn3m0 in #1110 | Fixed: incorrect padding property value pair in search.scss by @kevinlin1 in #1123 | Fixed: minor spacing and comment nits by @EricFromCanada in #1128 | Fixed: exclude images from being bundled with gem by @m-r-mccormick in #1142 | Fixed: dark theme code block background, line number colors by @m-r-mccormick in #1124 | Fixed: copy code button interaction with kramdown line numbers by @mattxwang in #1143 | . Maintenance . | Added: VScode devcontainer by @max06 in #783 | Added: webrick to Gemfile by @mattxwang in #799 | Added: ‘This site is powered by Netlify.’ to the footer by @mattxwang in #797 | Updated: new repo path by @pmarsceill in #775 | Updated: rename master -&gt; main by @pmarsceill in #776 | Updated: README by @pmarsceill in #777 | Updated: Code of Conduct to Contributor Covenant v2.1 by @mattxwang in #790 | Updated: CI files, Ruby &amp; Node Versions by @mattxwang in #820 | Updated: Stylelint to v14, extend SCSS plugins, remove primer-* configs, resolve issues by @mattxwang in #821 | Deleted: unused script directory by @mattxwang in #937 | Vendor: update jekyll-anchor-headings, lunr.js by @mattxwang in #1071 | . Documentation . | Added: docs on how to break an ol by @pdmosses in #856 | Added: docs for custom includes by @nathanjessen in #806 | Added: document caveat about variable dependencies by @waldyrious in #555 | Added: docs on how to use custom_head to add a custom favicon by @UnclassedPenguin in #814 | Added: docs load mermaid.js by default by @mattxwang in #935 | Added: warning about mandatory _-prefix for collections by @max06 in #1091 | Added: migration guide by @pdmosses in #1059 | Added: label new features introduced in v0.4 by @mattxwang in #1138 | Fixed: ol on index.md by @pmarsceill in #778 | Fixed: image link in Markdown kitchen sink by @JeffGuKang in #221 | Fixed: images in Markdown kitchen sink by @dougaitken in #782 | Fixed: clearer label of link to Jekyll quickstart by @waldyrious in #549 | Fixed: remove extra spaces in component docs by @MichelleBlanchette in #554 | Fixed: double “your” typo in index.md by @sehilyi in #499 | Fixed: “you” -&gt; “your” typo in index.md by @nathanjessen in #473 | Fixed: spacing in toc example by @henryiii in #835 | Fixed: typo in README on _config.yml by @ivanskodje in #891 | Fixed: missing code fence in navigation structure docs by @mattxwang in #906 | Fixed: table of contents on search docs by @robinpokorny in #940 | Fixed: broken docs link (custom footer) by @olgarithms in #951 | Fixed: clarify version docs by @pdmosses in #955 | Fixed: typo in changelog links @koppor in #1000 | Fixed: two bugs in “Customization” (custom favicon, new annotation) by @mattxwang in #1090 | Fixed: “View Typography Utilities” link by @agabrys in #1130 | Fixed: broken relative page links by @mattxwang in #1106 | Fixed: clarify steps to add custom lunr index code by @diablodale in #1139 | Updated: homepage (focus: new features, conciseness, deduplication) by @pdmosses in #1018 | Updated: README (focus: new features, conciseness, deduplication) by @pdmosses in #1019 | Updated: README demo video by @codewithfan in #1097 | . New Contributors . | @AdityaTiwari2102 made their first contribution in #477 | @svrooij made their first contribution in #544 | @alexsegura made their first contribution in #519 | @burner1024 made their first contribution in #364 | @JeffGuKang made their first contribution in #221 | @dougaitken made their first contribution in #782 | @max06 made their first contribution in #783 | @sehilyi made their first contribution in #499 | @nathanjessen made their first contribution in #473 | @waldyrious made their first contribution in #549 | @MichelleBlanchette made their first contribution in #554 | @henryiii made their first contribution in #835 | @jmertic made their first contribution in #726 | @jacobhq made their first contribution in #846 | @UnclassedPenguin made their first contribution in #814 | @alyssais made their first contribution in #829 | @nascosto made their first contribution in #857 | @SPGoding made their first contribution in #876 | @iridazzle made their first contribution in #727 | @ivanskodje made their first contribution in #891 | @Eisverygoodletter made their first contribution in #893 | @robinpokorny made their first contribution in #940 | @olgarithms made their first contribution in #951 | @manuelhenke made their first contribution in #941 | @JPrevost made their first contribution in #950 | @koppor made their first contribution in #1000 | @deseo made their first contribution in #1010 | @Tom-Brouwer made their first contribution in #1040 | @simonebortolin made their first contribution in #945 | @SConaway made their first contribution in #1104 | @captn3m0 made their first contribution in #1110 | @kevinlin1 made their first contribution in #1123 | @codewithfan made their first contribution in #1097 | @agabrys made their first contribution in #1130 | @diablodale made their first contribution in #1068 | @m-r-mccormick made their first contribution in #1142 | @fabrik42 made their first contribution in #1153 | . ",
    "url": "/CHANGELOG/#release-v040",
    
    "relUrl": "/CHANGELOG/#release-v040"
  },"108": {
    "doc": "CHANGELOG",
    "title": "Pre-release v0.4.0.rc5",
    "content": "Hi everyone, we’re so excited to finally release v0.4.0! For posterity’s sake, we’re going to release v0.4.0.rc5 and then immediately re-release it as v0.4.0; this should make it more clear what changes were introduced in the lead up to the minor release. This RC does not introduce any major user-facing features. It adds more customizability for custom SCSS variables (fixing a bug with callout introduction order), lunr indexing, and loading mermaid locally. In addition, it fixes bugs introduced in .rc4: incorrect CSS, inconsistencies with code block backgrounds in dark theme, and the copy code button. It also adds a migration guide for users coming from v0.3.3. Trying out pre-release v0.4.0.rc5 . Simlar to the prior release, v0.4.0.rc5 is a release candidate for the theme (i.e., a pre-release) with release v0.4.0 following immediately after. While we don’t anticipate many users using this RC, it is still possible to opt-in. To use this RC explicitly as a remote theme: . remote_theme: just-the-docs/just-the-docs@v0.4.0.rc5 . To use this RC explicitly as a gem-based theme, pin the version in your Gemfile and re-run bundle install or bundle update just-the-docs: . gem \"just-the-docs\", \"0.4.0.rc5\" . By default, users will not be upgraded to 0.4.0.rc5. To enforce that explicitly, either: . | pin your gem version in your Gemfile, like so gem \"just-the-docs\", \"0.3.3\" . | freeze the remote_theme, like so remote_theme: just-the-docs/just-the-docs@v0.3.3 . | . New Features . | Added: includes for custom lunr Liquid and JS code by @diablodale in #1068 | Added: new _sass/custom/setup.scss for variable definition by @mattxwang in #1135 | Added: configuration key to load a local version of mermaid by @fabrik42 in #1153 | . Bugfixes and Maintenance . | Fixed: incorrect padding property value pair in search.scss by @kevinlin1 in #1123 | Fixed: minor spacing and comment nits by @EricFromCanada in #1128 | Fixed: exclude images from being bundled with gem by @m-r-mccormick in #1142 | Fixed: dark theme code block background, line number colors by @m-r-mccormick in #1124 | Fixed: copy code button interaction with kramdown line numbers by @mattxwang in #1143 | . Docs . | Docs: add a migration guide by @pdmosses in #1059 | Docs: update README demo video by @codewithfan in #1097 | Docs: update “View Typography Utilities” link by @agabrys in #1130 | Docs: fix broken relative page links by @mattxwang in #1106 | Docs: clarify steps to add custom lunr index code by @diablodale in #1139 | Docs: label new features introduced in v0.4 by @mattxwang in #1138 | . New Contributors . | @kevinlin1 made their first contribution in #1123 | @codewithfan made their first contribution in #1097 | @agabrys made their first contribution in #1130 | @diablodale made their first contribution in #1068 | @m-r-mccormick made their first contribution in #1142 | @fabrik42 made their first contribution in #1153 | . ",
    "url": "/CHANGELOG/#pre-release-v040rc5",
    
    "relUrl": "/CHANGELOG/#pre-release-v040rc5"
  },"109": {
    "doc": "CHANGELOG",
    "title": "Pre-release v0.4.0.rc4",
    "content": "Happy new year! We’re celebrating with another pre-release, with features that should help theme users better adapt to changes moving forward. We aim to re-release this as v0.4.0, with only few changes. Notable new additions include: . | modular site components, which split up the site into smaller reusable components; advanced theme users can then remix layouts quickly without duplication | a “copy code” button to code blocks | fixing bugs in generated TOCs and navigation from previous prereleases | various cleanups of CSS and HTML markup | . The roadmap to v0.4.0 is small. We are only looking to: . | finish a migration guide, so users can easily upgrade from v0.3.3 to v0.4.0 | fix one last bug relating to callouts and custom colors | fix any new bugs introduced by this pre-release | . Have any questions, thoughts, or concerns? We’d love to hear from you! Please open an issue or start a discussion and let us know! . Trying out pre-release v0.4.0.rc4 . Simlar to the prior release, v0.4.0.rc4 is a release candidate for the theme (i.e., a pre-release) with release v0.4.0 coming soon. We want your help in testing the changes! As of now, the gem on RubyGems and the repository are updated to v0.4.0.rc4. To use this RC explicitly as a remote theme: . remote_theme: just-the-docs/just-the-docs@v0.4.0.rc4 . To use this RC explicitly as a gem-based theme, pin the version in your Gemfile and re-run bundle install or bundle update just-the-docs: . gem \"just-the-docs\", \"0.4.0.rc4\" . By default, users will not be upgraded to 0.4.0.rc4. To enforce that explicitly, either: . | pin your gem version in your Gemfile, like so gem \"just-the-docs\", \"0.3.3\" . | freeze the remote_theme, like so remote_theme: just-the-docs/just-the-docs@v0.3.3 . | . New Features . | Added: support multiple Google Analytics tracking IDs, document UA -&gt; GA4 switch by @MichelleBlanchette in #1029 | Added: copy code button to code snippets by @simonebortolin in #945 | Added: restore simple configuration of favicon.ico via site.static_files by @pdmosses in #1095 | Added: modularize site components by @mattxwang in #1058 | . Bugfixes and Maintenance . | Fixed: incorrect disambiguation in generated TOCs by @pdmosses in #999 | Fixed: duplicated external links in collections by @pdmosses in #1001 | Fixed: import order of custom.scss; puts at end by @deseo in #1010 | Fixed: top-level active link styling by @pdmosses in #1015 | Fixed: external links for sites with no pages by @pdmosses in #1021 | Fixed: duplicate title if jekyll-seo-tag not in users’s plugins by @Tom-Brouwer in #1040 | Fixed: removes (duplicate) favicon.html, shifts content to head_custom.html by @mattxwang in #1027 | Fixed: add reversed, deprecate desc for nav child_nav_order by @jmertic in #1061 | Fixed: child.child_nav_order to node.child_nav_order by @mattxwang in #1065 | Fixed: remove all uses of / as SASS division by @mattxwang in #1074 . | note: this was originally merged as #1074 with a bug; it was reverted in #1076, and then reimplemented in #1077 | . | Fixed: skip nav collection generation when site has no pages by @pdmosses in #1092 | Fixed: standardize SCSS with declaration-block-no-redundant-longhand-properties by @simonebortolin in #1102 | Fixed: incorrect padding property value pair in labels.scss by @SConaway in #1104 | Fixed: various bugs with copy code button by @simonebortolin in #1096 | Fixed: replace inline styling for &lt;svg&gt; icons by @captn3m0 in #1110 | Vendor: update jekyll-anchor-headings, lunr.js by @mattxwang in #1071 | . Docs . | Docs: fix typo in changelog links @koppor in #1000 | Docs: update homepage (focus: new features, conciseness, deduplication) by @pdmosses in #1018 | Docs: update README (focus: new features, conciseness, deduplication) by @pdmosses in #1019 | Docs: fix two bugs in “Customization” (custom favicon, new annotation) by @mattxwang in #1090 | Docs: Add warning about mandatory _-prefix for collections by @max06 in #1091 | Docs: remove Google Analytics on main site by @mattxwang in #1113 | . New Contributors . | @koppor made their first contribution in #1000 | @deseo made their first contribution in #1010 | @Tom-Brouwer made their first contribution in #1040 | @simonebortolin made their first contribution in #945 | @SConaway made their first contribution in #1104 | @captn3m0 made their first contribution in #1110 | . Full Changelog: https://github.com/just-the-docs/just-the-docs/compare/v0.4.0.rc3…v0.4.0.rc4 . ",
    "url": "/CHANGELOG/#pre-release-v040rc4",
    
    "relUrl": "/CHANGELOG/#pre-release-v040rc4"
  },"110": {
    "doc": "CHANGELOG",
    "title": "Pre-release v0.4.0.rc3",
    "content": "Hi there! This is (actually) hopefully the last prerelease before v0.4.0; in particular, if we find that this prerelease is stable, we’ll re-release it as v0.4.0. In general, this is a more mature pre-release; there are few new features. However, we’ll highlight @pdmosses’s work in #992 to better optimize nav generation for large sites (ex 100+ pages). We don’t expect this to affect most users; however, it is technically a breaking change, and we suggest testing your site before upgrading to this prerelease. We want your feedback! Please open an issue or start a discussion and let us know! . As soon as we get stable test results from major downstream users, we’ll push out a v0.4.0 ASAP - closing out almost 2 years of backlogged work! . Trying out pre-release v0.4.0.rc3 . Simlar to the prior release, v0.4.0.rc3 is a release candidate for the theme (i.e., a pre-release) with release v0.4.0 coming soon. We want your help in testing the changes! As of now, the gem on RubyGems and the repository are updated to v0.4.0.rc3. To use this RC explicitly as a remote theme: . remote_theme: just-the-docs/just-the-docs@v0.4.0.rc3 . To use this RC explicitly as a gem-based theme, pin the version in your Gemfile and re-run bundle install or bundle update just-the-docs: . gem \"just-the-docs\", \"0.4.0.rc3\" . By default, users will not be upgraded to 0.4.0.rc3. To enforce that explicitly, either: . | pin your gem version in your Gemfile, like so gem \"just-the-docs\", \"0.3.3\" . | freeze the remote_theme, like so remote_theme: just-the-docs/just-the-docs@v0.3.3 . | . Features . Broadly, this prerelease is feature-light! . | Added: styling for &lt;blockquote&gt; by @mattxwang in #965 | Added: custom include for TOC heading by @pdmosses in #980 | . Bugfixes and Experimental Features . Note: experimental nav optimization may be unstable. Please give us feedback! . | Added: experimental nav optimization for simple cases by @pdmosses in #992 | Fixed: spacing issue when search is disabled by @henryiii in #960 | Fixed: active grandchild link class by @pdmosses in #962 | Fixed: HTML validation issues (W3C validator) by @mattxwang in #964 | Fixed: link styling now uses text-decoration values by @mattxwang in #967 | Fixed: cleaning up Jekyll excludes by @pdmosses in #985 | Fixed: docs, narrow styling for code highlighting with line numbers by @pdmosses in #974 | Fixed: default syntax highlighting in custom color schemes @pdmosses in #986 | . Full Changelog: https://github.com/just-the-docs/just-the-docs/compare/v0.4.0.rc2…v0.4.0.rc3 . ",
    "url": "/CHANGELOG/#pre-release-v040rc3",
    
    "relUrl": "/CHANGELOG/#pre-release-v040rc3"
  },"111": {
    "doc": "CHANGELOG",
    "title": "Pre-release v0.4.0.rc2",
    "content": "This website includes docs for some new features that are not available in v0.4.0.rc1 and v0.3.3! . Hey there! This is likely the last pre-release before releasing v0.4.0, which we plan on doing soon (i.e. before the end of the month) - very exciting! Some new additions to highlight: . | significant improvement on build time of navigation panel by @pdmosses . | this is big: for a community member with over 300 pages, we shortened the build time from 3 minutes to 30 seconds! | . | improved accessibility features led by @JPrevost | more docs! | . The intention of this release candidate is to gather even more feedback on a potential v0.4.0. As it stands, we have not encountered any breaking changes with early adopters of v0.4.0.rc1. If you encounter any - for either of our pre-releases - please let us know! . Trying out pre-release v0.4.0.rc2 . Simlar to the prior release, v0.4.0.rc2 is a release candidate for the theme (i.e., a pre-release) with release v0.4.0 coming soon. We want your help in testing the changes! As of now, the gem on RubyGems and the repository are updated to v0.4.0.rc2. To use this RC explicitly as a remote theme: . remote_theme: just-the-docs/just-the-docs@v0.4.0.rc2 . To use this RC explicitly as a gem-based theme, pin the version in your Gemfile and re-run bundle install or bundle update just-the-docs: . gem \"just-the-docs\", \"0.4.0.rc2\" . By default, users will not be upgraded to 0.4.0.rc2. To enforce that explicitly, either: . | pin your gem version in your Gemfile, like so gem \"just-the-docs\", \"0.3.3\" . | freeze the remote_theme, like so remote_theme: just-the-docs/just-the-docs@v0.3.3 . | . Features . | Added: accessible titles to nested page nav toggle by @JPrevost in #950 | Added: better title styling for AsciiDoc examples by @alyssais in #944 | Added: docs for custom search placeholder by @mattxwang in #939 | Added: provide ability to skip to main content by @JPrevost in #949 | Fixed: exclude vendor/ in Jekyll config by @manuelhenke in #941 | Fixed: improve build time of navigation panel by @pdmosses in #956 | . Documentation and Maintenance . | Added: docs load mermaid.js by default by @mattxwang in #935 | Fixed: table of contents on search docs by @robinpokorny in #940 | Fixed: broken docs link (custom footer) by @olgarithms in #951 | Fixed: clarify version docs by @pdmosses in #955 | Deleted: unused script directory by @mattxwang in #937 | . New Contributors . | @robinpokorny made their first contribution in #940 | @olgarithms made their first contribution in #951 | @manuelhenke made their first contribution in #941 | @JPrevost made their first contribution in #950 | . ",
    "url": "/CHANGELOG/#pre-release-v040rc2",
    
    "relUrl": "/CHANGELOG/#pre-release-v040rc2"
  },"112": {
    "doc": "CHANGELOG",
    "title": "Pre-release v0.4.0.rc1",
    "content": "We’re back! . Hi all! The Just the Docs team is excited to have our first pre-release in over two years! It is jam-packed with features and bugfixes that have been requested by the community since 2020. They include: . | The new callouts component | Allowing pages and collections to coexist on the navigation pane | New styling: dark syntax highlighting, support for jekyll-asciidoc, word-wrapping instead of overflow for various elements | More customization: external nav links, custom nav footers, favicon includes, search color and placeholder configuration, mermaid.js support, and nav sorting | Over 20 bugfixes! Big ones include fixing the rake command, using relative_url, and search input color | More documentation, especially on using custom includes | Updating core dependencies to stable Ruby versions | A WIP template repository that allows you to setup your own repository using Just the Docs and GitHub Pages with one click - give it a shot! More documentation, etc. is on the way! | . We want your feedback! Are these changes helpful? Are our docs easy to understand? Should new features like mermaid be opt-in or opt-out? Please open an issue or start a discussion and let us know! . Trying out pre-release v0.4.0.rc1 . Due to the massive scope of these changes, we’re making v0.4.0.rc1 avaialble as a release candidate for the theme (i.e., a pre-release) with release v0.4.0 coming soon. We want your help in testing the changes! As of now, the gem on RubyGems and the repository are updated to v0.4.0.rc1. To use this RC explicitly as a remote theme: . remote_theme: just-the-docs/just-the-docs@v0.4.0.rc1 . To use this RC explicitly as a gem-based theme, pin the version in your Gemfile and re-run bundle install or bundle update just-the-docs: . gem \"just-the-docs\", \"0.4.0.rc1\" . Staying on v0.3.3 . If you’re not ready to make the switch, that’s alright! If your version of just-the-docs is pinned to v0.3.3 (i.e. by a Gemfile.lock or in remote_theme, then there’s nothing you need to do. If you have not pinned your theme version, you should either: . | pin your gem version in your Gemfile, like so gem \"just-the-docs\", \"0.3.3\" . | freeze the remote_theme, like so remote_theme: just-the-docs/just-the-docs@v0.3.3 . | . Use of branches for closed PRs (e.g., #466, #578) is now deprecated, as those branches have been (directly or indirectly) merged, and they may be deleted after the pre-release of v0.4.0.rc1. Maintenance . Internally, our maintainer team has expanded: Patrick Marsceill, the original maintainer, has stepped down from an active role after almost 4 years! We’re very thankful for the work that he’s done to create and maintain one of the most popular Jekyll themes. Please join us in giving him thanks! . The new core team currently consists of @mattxwang, @pdmosses, @skullface, @dougaitken, and @max06. Over the past six months, we’ve been triaging and merging in PRs, as well as contributing our own fixes. We’ll continue to address open issues, merge in PRs from the community, and plan out the future of Just the Docs. If you’d like to contribute, now is a great time! . Roadmap . In the short-term, we’re committed to tidying up everything for a v0.4.0 release. This involves fixing bugs reported from the community in this pre-release, as well as continually merging in minor PRs. We’re also scoping out medium and long-term projects, and want to keep you in the loop. These include: . | upgrading to Jekyll 4, and stopping support for Jekyll 3 | versioned docs - issue #728 | improved accessibility - issues #566, #870 | internationalization (i18n) - issue #59 | recursive/multi-level navigation - PR #462 | toggleable dark mode - issue #234 | . as well as DX improvements like better regression tests, CI, and tooling. If you’re interested in any of these, please join us on GitHub - any contribution (raising an issue, writing docs, or submitting a PR) is welcome! . Features . | Added: Combination by @pdmosses in #578 . | Added: dark highlighting in #463 | Added: pages and collections in #448 | Added: callouts in #466 | Fixed: breadcrumb behaviour … by @AdityaTiwari2102 in #477 | Fixed: prevent rake command corrupting search data in #495 (also listed below) | Fixed: nested lists in #496 | Fixed: set color for search input in #498 (also listed below) | Fixed: sites with no child pages (no PR) | Fixed: TOC/breadcrumbs for multiple collections in #494 | Added: collection configuration option nav_fold (no PR) | Fixed: indentation and color for folded collection navigation (no PR) | Fixed: scroll navigation to show the link to the current page in #639 | Fixed: Replace all uses of absolute_url by relative_url, by @svrooij in #544 | . | Added: custom favicon _includes by @burner1024 in #364 | Added: set color for search input by @pdmosses in #498 | Added: search placeholder configuration by @mattxwang in #613 | Added: ‘child_nav_order’ front matter to be able to sort navigation pages in reverse by @jmertic in #726 | Added: nav_footer_custom include by @nathanjessen in #474 | Added: style fixes for jekyll-asciidoc by @alyssais in #829 | Added: mermaid.js support by @nascosto in #857 | Added: support for external navigation links by @SPGoding in #876 | Added: refactor mermaid config to use mermaid_config.js include, only require mermaid.version in _config.yml by @mattxwang in #909 | Fixed: prepend site.collections_dir if exists by @alexsegura in #519 | Fixed: nested task lists (#517) by @pdmosses in #855 | Fixed: suppress Liquid processing in CSS comments by @pdmosses in #686 | Fixed: prevent rake command from corrupting search data by @pdmosses in #495 | Fixed: anchor heading links should be visible on focus by @jacobhq in #846 | Fixed: add overflow-x: auto to figure.highlight by @iridazzle in #727 | Fixed: add overflow-wrap: word-break to body by @iridazzle in #889 | Fixed: vertical alignment for consecutive labels by @Eisverygoodletter in #893 | Fixed: allow links to wrap by @pdmosses in #905 | Fixed: nav scroll feature and absolute/relative URLs by @pdmosses in #898 | . Documentation . | Added: docs on how to break an ol by @pdmosses in #856 | Added: docs for custom includes by @nathanjessen in #806 | Added: document caveat about variable dependencies by @waldyrious in #555 | Added: docs on how to use custom_head to add a custom favicon by @UnclassedPenguin in #814 | Fixed: ol on index.md by @pmarsceill in #778 | Fixed: image link in Markdown kitchen sink by @JeffGuKang in #221 | Fixed: images in Markdown kitchen sink by @dougaitken in #782 | Fixed: clearer label of link to Jekyll quickstart by @waldyrious in #549 | Fixed: remove extra spaces in component docs by @MichelleBlanchette in #554 | Fixed: double “your” typo in index.md by @sehilyi in #499 | Fixed: “you” -&gt; “your” typo in index.md by @nathanjessen in #473 | Fixed: spacing in toc example by @henryiii in #835 | Fixed: typo in README on _config.yml by @ivanskodje in #891 | Fixed: missing code fence in navigation structure docs by @mattxwang in #906 | . Maintenance . | Added: VScode devcontainer by @max06 in #783 | Added: webrick to Gemfile by @mattxwang in #799 | Added: ‘This site is powered by Netlify.’ to the footer by @mattxwang in #797 | Updated: new repo path by @pmarsceill in #775 | Updated: rename master -&gt; main by @pmarsceill in #776 | Updated: README by @pmarsceill in #777 | Updated: Code of Conduct to Contributor Covenant v2.1 by @mattxwang in #790 | Updated: CI files, Ruby &amp; Node Versions by @mattxwang in #820 | Updated: Stylelint to v14, extend SCSS plugins, remove primer-* configs, resolve issues by @mattxwang in #821 | . Dependencies . | Upgrade to GitHub-native Dependabot by @dependabot-preview in #627 | [Security] Bump y18n from 3.2.1 to 3.2.2 by @dependabot-preview in #606 | [Security] Bump hosted-git-info from 2.7.1 to 2.8.9 by @dependabot-preview in #641 | [Security] Bump lodash from 4.17.19 to 4.17.21 by @dependabot-preview in #640 | [Security] Bump ini from 1.3.5 to 1.3.8 by @dependabot-preview in #511 | Bump path-parse from 1.0.6 to 1.0.7 by @dependabot in #699 | Bump ajv from 6.10.0 to 6.12.6 by @dependabot in #766 | Bump prettier from 2.1.2 to 2.5.1 by @dependabot in #787 | Bump prettier from 2.5.1 to 2.6.2 by @dependabot in #809 | Bump prettier from 2.6.2 to 2.7.1 by @dependabot in #864 | . New Contributors . | @AdityaTiwari2102 made their first contribution in #477 | @svrooij made their first contribution in #544 | @alexsegura made their first contribution in #519 | @burner1024 made their first contribution in #364 | @JeffGuKang made their first contribution in #221 | @dougaitken made their first contribution in #782 | @max06 made their first contribution in #783 | @sehilyi made their first contribution in #499 | @nathanjessen made their first contribution in #473 | @waldyrious made their first contribution in #549 | @MichelleBlanchette made their first contribution in #554 | @henryiii made their first contribution in #835 | @jmertic made their first contribution in #726 | @jacobhq made their first contribution in #846 | @UnclassedPenguin made their first contribution in #814 | @alyssais made their first contribution in #829 | @nascosto made their first contribution in #857 | @SPGoding made their first contribution in #876 | @iridazzle made their first contribution in #727 | @ivanskodje made their first contribution in #891 | @Eisverygoodletter made their first contribution in #893 | . Full Changelog: https://github.com/just-the-docs/just-the-docs/compare/v0.3.3…v0.4.0.rc1 . ",
    "url": "/CHANGELOG/#pre-release-v040rc1",
    
    "relUrl": "/CHANGELOG/#pre-release-v040rc1"
  },"113": {
    "doc": "CHANGELOG",
    "title": "v0.3.3",
    "content": "🚀 Features . | Add custom header and footer include files @CodeSandwich (#334) | . 🐛 Bug Fixes . | Limit the effect of nav_exclude to the main navigation @pdmosses (#443) | Update normalize.scss @pdmosses (#444) | Update code.scss @pdmosses (#445) | Fix list alignment @pdmosses (#446) | . 🧰 Maintenance . | Bump stylelint-config-primer from 9.0.0 to 9.2.1 @dependabot-preview (#451) | Bump stylelint from 13.6.1 to 13.7.2 @dependabot-preview (#440) | Bump @primer/css from 15.1.0 to 15.2.0 @dependabot-preview (#436) | Bump prettier from 2.1.1 to 2.1.2 @dependabot-preview (#429) | . ",
    "url": "/CHANGELOG/#v033",
    
    "relUrl": "/CHANGELOG/#v033"
  },"114": {
    "doc": "CHANGELOG",
    "title": "v0.3.2",
    "content": "Changes . | Safe page sorting @pdmosses (#411) | v0.3.2 @pmarsceill (#388) | . 🚀 Features . | make font-sizes sass variables so they can be changed @pdebruic (#361) | run the site locally inside docker container @fogfish (#398) | Feature/doc collections @SgtSilvio (#379) | Adjust dl layout @pdmosses (#401) | . 🐛 Bug Fixes . | Add site.gh_edit_source to “Edit this page on GitHub” link @mrfleap (#418) | Inhibit text-transform for code in h4 @pdmosses (#404) | Fix native font stack precedence issue on Windows systems. @hvianna (#331) | Support for the linenos option on highlighted code @pdmosses (#375) | Update anchor_headings.html @pdmosses (#399) | Fix https @marksie1988 (#359) | . 🧰 Maintenance . | Bump prettier from 2.0.5 to 2.1.1 @dependabot-preview (#427) | Bump prettier from 2.0.5 to 2.1.1 @dependabot-preview (#419) | [Security] Bump lodash from 4.17.15 to 4.17.19 @dependabot-preview (#389) | Bump @primer/css from 14.4.0 to 15.1.0 @dependabot-preview (#402) | Bump lodash from 4.17.15 to 4.17.19 @dependabot (#384) | Bump @primer/css from 14.4.0 to 15.0.0 @dependabot-preview (#371) | . ",
    "url": "/CHANGELOG/#v032",
    
    "relUrl": "/CHANGELOG/#v032"
  },"115": {
    "doc": "CHANGELOG",
    "title": "v0.3.1",
    "content": "Changes . 🐛 Bug Fixes . | Improve accessibility by adding label to Anchor links. @mscoutermarsh (#376) | . 🧰 Maintenance . | Remove collapsible TOC on nav doc @pmarsceill (#368) | Pdmosses collapsible toc @pmarsceill (#367) | . ",
    "url": "/CHANGELOG/#v031",
    
    "relUrl": "/CHANGELOG/#v031"
  },"116": {
    "doc": "CHANGELOG",
    "title": "v0.3.0",
    "content": "Changes . | v0.2.9 @pmarsceill (#306) | . 🚀 Features . | Add print styles @pmarsceill (#362) | Navigation improvements and search sections @SgtSilvio (#352) | . 🐛 Bug Fixes . | Remove constraint with jekyll 4.1.0 @PierrickMartos (#348) | . 🧰 Maintenance . | Bump version numbers @pmarsceill (#360) | Bump stylelint from 13.3.3 to 13.6.1 @dependabot-preview (#343) | Bump stylelint-config-prettier from 8.0.1 to 8.0.2 @dependabot-preview (#349) | . ",
    "url": "/CHANGELOG/#v030",
    
    "relUrl": "/CHANGELOG/#v030"
  },"117": {
    "doc": "CHANGELOG",
    "title": "v0.2.9",
    "content": "Bug fixes . | Horizontal Alignment #103 @pmarsceill | Code snippet in headers do not inherit font size #140 @pmarsceill | Fix duplicated title and description tags #294 @iefserge | Update nav.html for handling nav_exclude #282 @blawqchain | Fix duplicate entries in nav.html and default.html #239 @KasparEtter | Don’t show pages with no title (e.g. redirects in nav) https://github.com/pmarsceill/just-the-docs/pull/295/commits/672de29f2e332a9350af7237e4fb6693c848989e @SgtSilvio | [SEARCH RAKE] Fix search generator #319 @RoiArthurB | . Enhancements . | Improvement/custom themes #186 @SgtSilvio | feat: adds “edit this page” and “page last modified” to footer #217 @malsf21 | feat: adds option to open aux links in new tab #229 @malsf21 | Default nav order #236 @pdmosses | Enable IP anonymization in Google Analytics (GDPR) #250 @r-brown | . closes #240 #308 #266 #140 #103 . ",
    "url": "/CHANGELOG/#v029",
    
    "relUrl": "/CHANGELOG/#v029"
  },"118": {
    "doc": "CHANGELOG",
    "title": "v0.2.8",
    "content": "Bugfixes . | bugfix in search.rake #218 @tiaitsch85 | . Dependency and security updates: . | Update jekyll requirement from ~&gt; 3.8.5 to &gt;= 3.8.5, &lt; 4.1.0 #197 @dependabot-preview | Update rake requirement from ~&gt; 12.3.1 to &gt;= 12.3.1, &lt; 13.1.0 #227 @dependabot-preview | Bump stylelint-config-primer from 8.0.0 to 9.0.0 #247 @dependabot-preview | Update bundler requirement from ~&gt; 2.0.1 to ~&gt; 2.1.4 #268 @dependabot-preview | Bump @primer/css from 12.7.0 to 14.3.0 #296 @dependabot-preview | . Operations . | Update CI to test multiple versions of Jekyll | Update CI to check the rake command that builds the search file | . fixes #291 #256 #293 #177 . ",
    "url": "/CHANGELOG/#v028",
    
    "relUrl": "/CHANGELOG/#v028"
  },"119": {
    "doc": "CHANGELOG",
    "title": "v0.2.7",
    "content": "Bugs fixed . | Anchor headings are now displayed on hover, not only on heading hover | Deduplicated anchor heading svg | If last page of site.html_pages was excluded from search, search json breaks | Config variable should be blanklines not blank_lines for html compression | list-style-none does not hide bullets on ul | . Enhancements . | Summary for child pages appears in generated TOC | Site logo configuration supported replacing title text with image | Allow custom CSS overrides (new scss partial at the end of the cascade) separate from variable overrides. | Configuration around search strings added to allow search for hyphenated words | . Maintenance . | Update docs to suggest using index.md as section page filename | Bump @primer/css from 12.6.0 to 12.7.0 | Bump mixin-deep from 1.3.1 to 1.3.2 | Bump stylelint-config-primer from 7.0.1 to 8.0.0 | . PR included . | #98 by @stefanoborini Introduces the possibility for a summary in the table of contents | #141 by @ghabs Fix trailing comma bug in search-data.json | #153 by @jacobherrington Change button copy on theme preview | #181 by @m3nu Recommend using index.md as parent page for sections | #183 by @SgtSilvio Improve heading anchors | #187 by @SgtSilvio Improvement/site logo | #200 Bump mixin-deep from 1.3.1 to 1.3.2 | #203 by @pdmosses Search config | #205 by @pdmosses Fix blank_lines var to blanklines in config.yml | #206 by @iamcarrico Allow for custom overrides by the user | #208 Bump @primer/css from 12.6.0 to 12.7.0 | #213 Bump mixin-deep from 1.3.1 to 1.3.2 | #214 Bump stylelint-config-primer from 7.0.1 to 8.0.0 | #215 Bump @primer/css from 12.6.0 to 12.7.0 | . ",
    "url": "/CHANGELOG/#v027",
    
    "relUrl": "/CHANGELOG/#v027"
  },"120": {
    "doc": "CHANGELOG",
    "title": "v0.2.6",
    "content": "Bugs fixed . | Google Analytics tag has been updated #162 | ~BaseURL has been modified #109~ Reverted – seems the existing implementation worked | Titles can now wrap fixes #106 | . Enhancements . | Search now displays content preview #135 | Custom footer content added #179 | Now using GitHub Actions for CI #170 | . Maintenance . | lunrjs upgraded #135 | Nav generation is optimized #159 | Stylelint upgrade #143 | Stylelint config primer upgrade #149 | Lodash upgrade #160 | . PR included . ~#109 by @daviddarnes - Fix baseurl link~ Reverted #135 by @SgtSilvio - Upgrades lunr.js, improves search UI, adds heading anchors #152 by @yavorg - Improves syntax highlighting for js readablity #159 by @julienduchesne - Optimizes nav generation #162 by @nergmada - Modifies the google analytics code to match the new tags used by GA . ",
    "url": "/CHANGELOG/#v026",
    
    "relUrl": "/CHANGELOG/#v026"
  },"121": {
    "doc": "CHANGELOG",
    "title": "v0.2.5",
    "content": "Bugs fixed . | Duplicate title tag when Jekyll SEO Plugin gem is used #125 #126 | . Enhancements . | Favicon support added #118 | . Maintenance . | Bump stylelint-config-primer from 6.0.0 to 7.0.0 #123 | Bump @primer/css from 12.2.3 to 12.3.1 #129 | Add workflow to publish to GPR | Fix workflow to publish to Ruby Gems | . ",
    "url": "/CHANGELOG/#v025",
    
    "relUrl": "/CHANGELOG/#v025"
  },"122": {
    "doc": "CHANGELOG",
    "title": "v0.2.4",
    "content": "Bugs . | #102 Remove unnecessary console.log() @JoeNyland | #97 Import custom Sass variable overrides before default variables are defined @montchr and @ptvandi | . Additions . | #117 Add links to docs for setting up GH pages locally @gnarea | #95 Add SEO and ‘lang’ param for _config @gebeto | . ",
    "url": "/CHANGELOG/#v024",
    
    "relUrl": "/CHANGELOG/#v024"
  },"123": {
    "doc": "CHANGELOG",
    "title": "v0.2.3",
    "content": "Enhancements . | Adds ability to use Google Analytics tracking by @pmarsceill | . Bug fixes . | Fixes 404 error for “/assets/js//search-data.json” by @stephenedmondson | Fixes #80 Single quotes in the string were unescaped and ruby attempted variable substitution of amp within it (which failed) by @novelistparty | Fixes bug that would only show 2 or more search results (not one) by @ilivewithian | Fixes a typo on the layout example by @woernfl | Fixes #78 Page scroll position too far down on load by @pmarsceill | Fixds ability to nest ul in ol without breaking style or counters | . Dependency updates . | Bumps stylelint dependency from 9.9.0 to 9.10.1 | . ",
    "url": "/CHANGELOG/#v023",
    
    "relUrl": "/CHANGELOG/#v023"
  },"124": {
    "doc": "CHANGELOG",
    "title": "v0.2.2",
    "content": ". | Bumps stylelint-config-primer to 3.0.1 #44 | Bumps bundler req to 2.0.1 #61 | Adds custom 404 page | Excludes package-lock.json from jekyll build #47 | Fixes keyboard scrolling / focus #48 | Adds ARIA roles to navigation elements | Adds support for optional page description metadata (if present in yaml front matter) | Addresses some issues with search in #46 | Option to hide TOC on parent pages if turned off in page’s YAML front matter #30 | Option to suppress an item from being indexed by search if present in page’s YAML front matter #32 | . ",
    "url": "/CHANGELOG/#v022",
    
    "relUrl": "/CHANGELOG/#v022"
  },"125": {
    "doc": "CHANGELOG",
    "title": "v0.2.1",
    "content": "This update fixes security vulnerablities in the lodash sub-dependency and bumps other dev dependencies to their latest version. ",
    "url": "/CHANGELOG/#v021",
    
    "relUrl": "/CHANGELOG/#v021"
  },"126": {
    "doc": "CHANGELOG",
    "title": "v0.2.0",
    "content": "Adds: . | Dark mode via color_scheme parameter | Ability to exclude a page from the main nav with nav_exclude parameter closes #21 | Ability for create children of children pages (3 nav levels) closes #25 | . Changes: . | Permalink structure for tiered navigation has been updated | Some colors have been updated for consistency / accessibility | . ",
    "url": "/CHANGELOG/#v020",
    
    "relUrl": "/CHANGELOG/#v020"
  },"127": {
    "doc": "CHANGELOG",
    "title": "v0.1.6",
    "content": "Added . | Support for task list styles #19 | Configuration docs | Configuration option to enable / disable search | Normalize.scss dependency pulled into project #16 # | . Fixed . | Layout bug in navigation #17 | . ",
    "url": "/CHANGELOG/#v016",
    
    "relUrl": "/CHANGELOG/#v016"
  },"128": {
    "doc": "CHANGELOG",
    "title": "v0.1.5",
    "content": "Major changes: . | Fixed bug where the rake task would fail when the assets/js directory didn’t exist | . ",
    "url": "/CHANGELOG/#v015",
    
    "relUrl": "/CHANGELOG/#v015"
  },"129": {
    "doc": "CHANGELOG",
    "title": "v0.1.4",
    "content": "Major changes: . | Adds Rake as a runtime dependency | Definition list styled | Sidebar and support cleaned up for smaller screen support | Updated some stale docs | . ",
    "url": "/CHANGELOG/#v014",
    
    "relUrl": "/CHANGELOG/#v014"
  },"130": {
    "doc": "CHANGELOG",
    "title": "v0.1.3",
    "content": "Major changes: . | Fix path problems, typos, and general clean-up for OSS. | . ",
    "url": "/CHANGELOG/#v013",
    
    "relUrl": "/CHANGELOG/#v013"
  },"131": {
    "doc": "CHANGELOG",
    "title": "v0.1.2",
    "content": "Fix paths when deployed to gh-pages . ",
    "url": "/CHANGELOG/#v012",
    
    "relUrl": "/CHANGELOG/#v012"
  },"132": {
    "doc": "CHANGELOG",
    "title": "v0.1.1",
    "content": "Major updates: . | Adds search to mobile nav | Pulls footer to bottom of the page on mobile (not hidden in nav) | . Minor updates: . | Cleans up h1 typography spacing | . ",
    "url": "/CHANGELOG/#v011",
    
    "relUrl": "/CHANGELOG/#v011"
  },"133": {
    "doc": "DCL",
    "title": "DCL(Data Control Language)",
    "content": "Ver 0.1.1 . 데이터를 관리 목적으로 보안, 무결성, 회복, 병행 제어 등을 정의하는데 사용한다.DCL을 사용하면 데이터베이스에 접근하여 읽거나 쓰는 것을 제한할 수 있는 권한을 부여하거나 박탈할 수 있고 트랜잭션을 명시하거나 조작할 수 있다. 불법적인 사용자로부터 데이터를 보호하기 위한 데이터 보안의 역할을 수행하며, 데이터의 정확성을 위한 무결성을 유지하기도 한다. 마지막으로 시스템 장애에 대비한 회복과 병행수행을 제어한다. 1) GRANT . 권한을 정의할때 사용하는 명령어 . 2) REVOKE . 권한을 삭제하는 명령어 . ",
    "url": "/docs/5.Oracle/DCL/DCL_info/#dcldata-control-language",
    
    "relUrl": "/docs/5.Oracle/DCL/DCL_info/#dcldata-control-language"
  },"134": {
    "doc": "DCL",
    "title": "DCL",
    "content": "작성일자 : 2023-07-08 ",
    "url": "/docs/5.Oracle/DCL/DCL_info/",
    
    "relUrl": "/docs/5.Oracle/DCL/DCL_info/"
  },"135": {
    "doc": "03.LG Chemical",
    "title": "1. 요약",
    "content": "Ver 0.1.2 . | 프로젝트 명칭 : LG 화학 세일즈 포스 &amp; 태블로 구축 | 기간 : ‘22.07.01 ~ ‘23.02.28 (8개월) | 장소 : 여의도 IFC, 여의도 코켐 빌딩 | 고객사 : LG 화학 (화학사) | 업무 . | 태블로 서버 설치 (Window 2016 Server) 및 관리 | 대시보드 20개 개발 (매출 진척, 판매법인, C&amp;C (Claim&amp;Complain), 고객 인사이트, 사업부 특화) | 현업 및 수행사(PWC) 대상 태블로 사용 교육 | . | 데이터 소스 : Salesforce | 배운점 및 느낀점 . | Salesforce Sales Cloud 경험 . | SFDC Sales cloud의 전반적인 과정을 경험 | CRM의 중요성을 데이터를 보고 분석하고 대시보드를 만들면서 몸소 경험 | . | 커뮤니케이션 능력 향상 . | 수행사와의 요건 조율 및 프로젝트 팀원간 협력을 통해 커뮤니케이션 능력 향상 | 여러 차례 수행사 및 현업 교육을 통해 커뮤니케이션 능력 향상 | . | Salesforce Objects를 데이터 원본으로 Tableau Dashboard 개발 . | 별도의 DW(Data Warehouse) / DM(Data Mart) 없이 직접 Salesforce를 연결하여 대시보드 개발 | 제한 사항 및 대체 적용 사항 . | 추출의 최소 주기 1시간(일반 RDB는 15분) | SOQL 사용시 증분 추출 사용 불가(사용하지 않는 필드는 ‘필드 숨기기’ 적용) | Union 불가능 | Object가 Blending의 보조 데이터 원본으로 사용 불가 | Fomula Field 사용 불가(Lookup 필드는 데이터 원본 생성시 관계 또는 Join, 계산 로직은 Tableau 내에서 계산식 적용) | . | . | SOQL(Salesforce Objects Query Language) . | 일반 SQL과 대부분은 비슷하지만 Salesforce만의 지원 함수들이 있음 | . | 태블로 계산식을 활용한 대시보드 권한 관리 . | 태블로에서는 ismemberof() 함수를 지원하지만, 대규모 조직에서는 계산식에 대한 유지보수에 어려움이 있음 | 조직 정보 테이블이 있기 때문에 username() 함수와 조직 정보를 활용해 계산식으로 데이터에 대한 권한 관리 실행 | . | 다양한 데이터 모델링(Self Join, Relationship, Blending)을 활용한 대시보드 개발 . | 대시보드 요건 충족을 위해서 계산식으로 해결할 수 없는 부분은 데이터 원본을 활용해 해결 | . | 대시보드 URL 매개변수 컨트롤 . | Embedding시 URL 매개변수를 통해 데이터를 필터링 또는 대시보드의 옵션을 컨트롤 할 수 있음 | . | LOD 함수, 날짜, 테이블 계산 등 다양하고 복잡한 계산식 활용 및 다양한 형태의 다이나믹 대시보드 개발 . | 요건 충족을 위해 LOD 함수, 날짜, 테이블 계산의 고급 계산식을 사용 | 매개변수 동작, Radar 차트, Scatter Plot, Table 등 새로운 형태의 차트 개발과 기본적인 차트와 계산식을 응용한 다이나믹 대시보드 개발 | . | . | . ",
    "url": "/docs/2.Projects/Projects/LG%20Chemical/#1-%EC%9A%94%EC%95%BD",
    
    "relUrl": "/docs/2.Projects/Projects/LG%20Chemical/#1-요약"
  },"136": {
    "doc": "03.LG Chemical",
    "title": "2. 회고록",
    "content": "“시작부터 끝까지 경험해본 나의 첫 프로젝트이며, 다사다난했던 만큼 배우는 것도 정말 많았던 프로젝트” . 삼성전자 프로젝트와 LG 화학 프로젝트의 가장 큰 차이점은 프로젝트 처음 투입되어서 끝날때까지 경험을 했다는 것이다. 입사한지 만으로 1년이 되어가는 시점에서 1년차를 감안하더라도 나는 여전히 배울 것들이 많다고 생각했다. 물론 삼성전자 프로젝트에서도 배우고 느낀 것이 많았지만, 프로젝트 중간에 투입되어서 프로젝트 첫 단게에서의 해야할 일들에 대해서 경험하고 싶은 개인적인 바램이 있었다. 또한 선택할 수 있다면 규모가 상대적으로 큰 고객사 사이트에서 프로젝트를 하고 싶었다. 위 같은 이유로 POC를 했던 오토닉스 프로젝트와 LG화학 프로젝트 중에서 어떤걸 더 하고 싶은지에 대한 질문을 받았을 때 주저없이 LG 화학 프로젝트를 하고 싶다고 어필했었다. 감사하게도 본부장님은 나의 의사를 반영하여 나를 LG화학 프로젝트로 보내주셨다. 우선 Tableau 팀은 부장님 1명과 대리님 1명 그리고 사원인 나를 포함한 3명이 1차 투입을 하고 이후에 사원 1명이 더 들어와 총 4명이 프로젝트를 이끌어 가는 상황이었다. 해당 프로젝트는 Salesforce 구축 및 Tableau 구축으로 Salesforce는 이미 오래전부터 프로젝트를 진행하고 있었고, 어느정도 구축이 되고 데이터가 쌓인 시점이 되어 Tableau 팀이 투입되어 데이터를 대시보드화 하여 시스템 운영에 활용하고자 함이었다. 프로젝트 투입 이후 다소 당황스러웠던 점은 PC 세팅도 되지 않았는데 바로 대시보드를 만들어야했던 점이다. 일정이 여유롭지 않았는지, 보고가 얼마 남지 않아 빨리 대시보드를 만들어야 한다는 것이었다. 더군다나 나는 Salesforce Objects를 직접 연결하여 개발해본적도 없었다. SOQL도 존재하는 것만 알았지 다루는 방법도 잘 몰랐다. 지식 수준이 거의 0%에 수렴한다고 봐도 무방할 정도였다. 같이 투입된 부장님도 Salesforce 프로젝트는 처음이라 하셨고,내가 기대할 곳은 같이 온 대리님이었다. 직전 프로젝트가 Salesforce를 이용한 프로젝트였기 때문이었고, Tableau 개발도 나보다는 경험이 많았기 때문이다. 하지만 대리님에게 도움을 많이 받기보다는 내가 스스로 많이 알아낸 것들이 많았다. SOQL을 잘 작성하려면 Objects간 구조를 잘 알아야하는데, 맨땅에 헤딩하며 공식 문서를 보면서 작성했다. Tableau 개발적인 측면에서도 아무리 투입되자마자 개발을 해야했었지만, 여러명이 개발을 하게되는 만큼 개발 표준 문서를 만들고 그 이후에 개발을 착수했어야 함이 맞지만, 우리는 빨리 개발을 하기에 급급했다. 물론 3년차가 된 이시점에서는 SOQL도 제법 다루고, 개발 표준문서를 작성한 후 개발해야한다는 것을 알고 있지만, 당시 1년도 되지 않았던 나는 그것이 필요한지도 몰랐었다. 당시에 같이 투입되었던 대리님에 대해서 비하한다기 보다는 나는 그 경험을 통해 여러명이 프로젝트 투입을 했을 때 무엇을 먼저 해야하며, Salesforce 프로젝트를 하려면 무엇이 필요한지 알게 되었다. 내가 왜 프로젝트 첫 단계부터 경험하고 싶어했는지와 이유와 같은 맥락이다. 그렇게 맨땅에 헤딩하며 내 나름대로 Salesforce Objects의 세계관에 대해서 적응이 어느정도 되었고, 개발을 하며 여러 어려움에 봉착하기도 했었지만 Salesforce 개발자분들과 Tableau Community 검색을 통해서 개발을 이어나갔다. 그러다 또 한번 어러움에 봉착한 적도 있었다. 업무 과정에서 대리님께서 부장님과 트러블이 생기고 수행사 컨선털트분들과도 트러블이 생겼다. 바로 옆에서 트러블이 생기는 것을 목격한 나는 아무래도 감정적으로 영향을 받지 않을 수가 없었다. 꽤나 긴 갈등 끝에 인원교체가 결정되었다. 대리님이 나가고 사원 한분이 들어오셨고, 다른 선배 동료가 본부장님과 자주 오시면서 로직 개발이나 대시보드 개발에 도움을 주셨다. 결국 초기 멤버의 개발자 중에서 내가 데이터에 대한 이해도와 히스토리를 가장 많이 알고 있는 사람이 되었다. 지금 회상해보면 막중한 책임감이 있어 부담도 되었지만, 나름 즐기기도 했던거 같다. 게다가 나보다 선배인 개발자 분도 자주 오시면서 어려운 로직이 있으면 적용해주시면서 어려움에 봉착했던 프로젝트는 정상 궤도에 가까워졌다. 1차오픈(22.09.30)후 한달정도 지난 시점을 기점으로 프로젝트는 정상궤도에 오른것 처럼 보였다. 하지만 거기에 이르기까지가 정말 쉽지 않았었다. 개발적인 측면에서 로직 구현에 어려움도 있었고, 협업 측면에서 어려움도 있었다. 당시 일이 잘 안풀리다보니 밥맛도 없어졌고 그러다보니 살도 4kg 정도 빠졌었다. 로직 개발을 위해 밤을 새서 개발했던 적도 있었고, 남양주에서 예비군 훈련을 마치고 바로 출근, 개천절, 한글날 연휴때에도 모두 출근해서 로직 개발 및 대시보드 개발을 하기도 했었다. 선배 개발자의 도움으로 프로젝트 내내 적용하기 어려웠었던 로직을 구현해 냈고, 우리는 바로 2차 오픈 대상 대시보드 개발로 이어갔다. 그 과정에서 나랑 합을 맞췄던 수행사 컨설턴트는 프로젝트에서 빠지고 새로운 컨설턴트 분께서 오시게 되었다. Sales Could에서 가장 중요하다고 할수 있는 매출진척 분석용 대시보드를 만들어야 했는데, 컨설턴트분께서 업무 파악 및 진행하는데 있어서 어려움이 많아보이셨다. 결국 어느정도 진행되다가 개인적인 일까지 겹치셨는지 급작스럽게 프로젝트 롤아웃을 하시게 되었다. 중요한 대시보드인데 또 한번의 어려움에 봉착했었다. 급하게 기존에 계시던 컨설턴트분이 인수인계를 받아 나와 함께 합을 맞춰 나갔다. 매출 진척이니 만큼 그 무엇보다 데이터 정합성이 중요했는데, 모델링하는데 있어서도 어려움이 많았고, 개발 및 검증하는데에도 어려움이 진짜 많았다. WBS에 작성했던 원래 계획보다 지연되기 시작했고, 그 이후에 개발해야하는 대시보드와 같이 개발을 하게 되어 업무가 가증되기 시작했다. 동시에 개발해야하는 대시보드 역시 결코 쉽지 않았던 대시보드였다. 솔직히 야근도 정말 정말 많이 했다. 어떻게든 오픈전까지 해내야했기 때문이다. 매일 같이 택시를 타고 퇴근했던거 같다. 노력도 많이하고 도움도 받아 극적으로 새해를 맞이하면서 2차 오픈(23.01.02)을 할 수 있었다. 오픈 이후 수정사항을 반영하고 그런 시점에서 이번엔 조직개편을 겪게 되었다. 몇년에 한번 있는 조직개편을 이때 겪게 되다니,,,데이터 정합성적인 측면에서 이미 맞추어 운영중인 것을 조직개편에 맞게 수정해야하여 기존에 구현된 로직들을 해치지 않으면서 로직 추가를 해내야했다. 결국에는 요건대로 개발을 완료했고, 이후 문서 작성 및 현업 교육도 하기도 했고, 롤 아웃(23.02.28)을 하는 날까지도 대시보드 수정을 하고 나와 프로젝트가 마무리 되었다. 8개월 동안 LG화학 Salesforce 프로젝트를 하면서 위에도 적어뒀지만, 배운것이 정말 많다. 당시에는 정말 힘든 순간들이 많았으나, 이때 배우고 느낀 것이 정말 많아 이때 배운 것을 토대로 삼성 전자 프로젝트를 하고 있다. 삼성 전자 프로젝트 Phase 1과 3 사이에 LG 화학 프로젝트를 하고 온 것인데, 내가 봐도 나의 역량 차이가 체감될 정도 이다. 이제는 3년차가 되었고, 내가 개발적인 측면에서 PL이 되어 이끌어가고 있는 걸보니 말이다. 다시 생각해봐도 LG 화학 프로젝트를 하고 오길 잘한것 같다. BI 컨설턴트로서 성장을 많이 하게된 터닝 포인트가 된 8개월 동안의 프로젝트였다. 이때 배우고 느낀 것을 잊지 않고 앞으로 좋은 컨설턴트 및 개발자가 되어야겠음을 다짐하며 회고록을 마친다. ",
    "url": "/docs/2.Projects/Projects/LG%20Chemical/#2-%ED%9A%8C%EA%B3%A0%EB%A1%9D",
    
    "relUrl": "/docs/2.Projects/Projects/LG%20Chemical/#2-회고록"
  },"137": {
    "doc": "03.LG Chemical",
    "title": "1. Summary",
    "content": "Ver 0.1.2 . | Name : LG Chemical Salesforce &amp; Tableau Establishment | Period : ‘22.07.01 ~ ‘23.02.28 (8 Months) | Location : IFC &amp; Cocam buildings, Yeoui-do, Seoul | Customer: LG Chem (Chemical industry) | Task . | Installed Tableau Server (Window 2016 Server) | Developed 20 dashboards (sales progress, sales corporation, C&amp;C (Claim &amp; Complain), customer insight, division attribute) | Conducted Tableau training sessions for business users and consultants from the field and PWC (Price Waterhouse Coopers). | . | Data Source : Salesforce | What I learned and felt . | Experienced Salesforce Sales Cloud . | Experience the overall process of Salesforce Sales Cloud | . | Enhanced communication skills . | Improve communication skills through coordination of requirements with performers and collaboration between project team members | . | Developed tableau dashboards with Salesforce Objects as a data source . | Developed dashboards by connecting Salesforce directly without a separate Data Warehouse &amp; Data Mart | Restrictions . | Minimum cycle of extraction 1 hour | Incremental extraction disabled when using SOQL (using field hiding) | Union impossible | Object not available as secondary data source for Blending | Formula Field unavailable | . | . | SOQL(Salesforce Objects Query Language) . | Most of them are similar to regular SQL, but have support functions unique to Salesforce | . | Managed dashboard and data permisiions using calculated fields . | Tableau supports ismemberof() function, but large organizations have difficulty maintaining computational expressions | Because there is an organizational information table, use the username() function and organizational information to perform permission management on the data in a computational manner | . | Developed of dashboars using Data modeling(Self-Join, Relation, and Blending) | Dashboard URL parameter Control . | When Embedded, URL parameters allow you to filter data or control options on the dashboard | . | Utilize various and complex calculated fields like LOD, Dates etc . | Use advanced calculation expressions of LOD functions, dates, and table calculations to meet requirements | Development of new types of charts such as parameter behavior, Radar chart, Scatter Plot, Table, etc., and Dynamic Dashboard using basic charts and calculation formulas | . | . | . ",
    "url": "/docs/2.Projects/Projects/LG%20Chemical/#1-summary",
    
    "relUrl": "/docs/2.Projects/Projects/LG%20Chemical/#1-summary"
  },"138": {
    "doc": "03.LG Chemical",
    "title": "03.LG Chemical",
    "content": "작성일자 : 2023-07-11 수정일자 : 2023-09-10 ",
    "url": "/docs/2.Projects/Projects/LG%20Chemical/",
    
    "relUrl": "/docs/2.Projects/Projects/LG%20Chemical/"
  },"139": {
    "doc": "Migration and Upgrading",
    "title": "Migrating and Upgrading",
    "content": "Summary A site that uses just-the-docs (as a theme or as a remote theme) automatically switches to a new release, unless it is pinned to a previous version. This migration guide draws attention to: . | changes that might break your site, | features added in the latest release, and | features that have become deprecated (and are likely to be removed in a future release). | . This document contains instructions on how to migrate and upgrade Just the Docs sites from every minor or major version bump, starting from v0.3.3 to v0.4.0. | v0.4.x - v0.5.0 . | POTENTIALLY-BREAKING CHANGES in v0.5.0 | . | v0.3.3 … v0.4.x . | REPOSITORY CHANGES . | Just the Docs | Deploy previews | Just the Docs Template | Just the Docs Tests | . | POTENTIALLY-BREAKING CHANGES in v0.4.0 . | New includes and SCSS | favicons | Custom callout colors | Pages and collections | Relative URLs | Navigation order | . | DEPRECATIONS . | Jekyll 3 | Footer content configuration | . | THEME WEBSITE CHANGES . | Home page | CHANGELOG | . | NON-BREAKING CHANGES (OUTLINE ONLY) . | Accessibility | Configuration | Customization | Custom Includes | Modular Components | Navigation | Search | Styling | . | . | . If your configuration states remote_theme: just-the-docs/just-the-docs, your website is built using the current main branch of the theme, which may include changes made after the latest release; see the CHANGELOG. If your configuration states theme: just_the_docs and your Gemfile specifies gem \"just-the-docs\", your website is always built using the latest release. If you have cloned/forked and customised the theme repo, and pull the changes of a new release to your clone, you may need to resolve merge conflicts. ",
    "url": "/MIGRATION/#migrating-and-upgrading",
    
    "relUrl": "/MIGRATION/#migrating-and-upgrading"
  },"140": {
    "doc": "Migration and Upgrading",
    "title": "v0.4.x - v0.5.0",
    "content": "POTENTIALLY-BREAKING CHANGES in v0.5.0 . There is one potentially-breaking change for users migrating from v0.4.2 to v0.5.0 concering setup.scss. To provide context: . | setup.scss was introduced in v0.4.0 | in v0.4.0 and v0.4.1, setup.scss was imported before color scheme SCSS code | in v0.4.2, we adjusted the order to import setup.scss after color scheme SCSS code | in v0.5.0, we have reverted the previous change: setup.scss is now again imported before color scheme SCSS code | . This does not affect most users. Users who did not migrate to v0.4.2 or who do not have a custom setup.scss are guaranteed no breaking changes. Explicit migration steps are only needed if: . | a custom setup.scss has been defined, | and the setup.scss depends on variables or functions defined in color scheme SCSS code; this change was only possible on v0.4.2 | . For those users, we suggest moving those variables and functions to each relevant color scheme. ",
    "url": "/MIGRATION/#v04x---v050",
    
    "relUrl": "/MIGRATION/#v04x---v050"
  },"141": {
    "doc": "Migration and Upgrading",
    "title": "v0.3.3 … v0.4.x",
    "content": "REPOSITORY CHANGES . Just the Docs . The theme repo is now at https://github.com/just-the-docs/just-the-docs. The name of its default branch is now main. The theme docs website is now published at https://just-the-docs.github.io/just-the-docs. We’ve also retroactively published the theme docs website for version v0.3.3 at https://v0-3-3-docs.just-the-docs.com/. GitHub provides access to previous versions of the theme repo. You can browse previous versions of the theme docs website on the Internet Archive. The README page on the theme repo repeats much of the information from the home page, formatted for browsing on GitHub. It also explains how to install the theme as a Ruby Gem, without creating a new site. Deploy previews . When a PR builds successfully, Netlify provides a preview of how the theme docs website will look if the PR is merged. You can find links to the preview near the bottom of the Conversation tab of the PR. Just the Docs Template . The template at https://github.com/just-the-docs/just-the-docs-template creates a repo with the minimal source files for a Just the Docs website. After configuring the relevant parameters, you can build and serve the website both locally and on GitHub Pages – using either Jekyll 3 or Jekyll 4! . Just the Docs Tests . The tests website at https://just-the-docs.github.io/just-the-docs-tests consists mainly of regression tests for bug fixes and new features. The test source files at https://github.com/just-the-docs/just-the-docs-tests illustrate the use of many Markdown and Jekyll features, including some that are not included in the theme docs. For example, see how to add support for rendering TeX/LaTeX math formulas with KaTeX and MathJax. POTENTIALLY-BREAKING CHANGES in v0.4.0 . If switching to a new release of the theme breaks your website, check that you don’t have any files in the _includes, _layouts, and _sass directories with the same names as files provided by the theme. If your repo has a customised copy of _layouts/default.html from a previous release, try removing it, or replace it by a fresh copy of the theme file. The following changes made in v0.4.0 might break or adversely affect your website when you next rebuild it, unless you have pinned it! . New includes and SCSS . Version 0.4.0 introduces many new _includes files. If you already have an existing include with the same name as a new addition, you will need to migrate or update that include. The new files are (relative to the _includes folder): . | mermaid_config.js | nav_footer_custom | search_placeholder_custom | toc_heading_custom | the entire components/ folder: . | aux_nav, breadcrumbs, children_nav, footer, header, mermaid, search_footer, search_header, sidebar | . | the entire icons/ folder . | code_copy, document, expand, external_link, icons, link, menu, search | . | the entire lunr/ folder . | custom-data.json, custom-index.js | . | . We have removed some code in _sass/vendor and added a new file at _sass/custom/setup.scss. favicons . The file _includes/favicon.html is now ignored by the theme. If you’re using it, your website’s favicon is no longer displayed by browsers. To fix: Move the content of _includes/favicon.html to _includes/head_custom.html. Custom callout colors . The file _sass/custom/custom.scss is now imported last: after the configuration of callouts. If you’ve defined custom color variables for callouts in _sass/custom/custom.scss (and used them when configuring your callouts in _config.yml) you will not be able to rebuild your website. To fix: Move custom color variables for callouts in _sass/custom/custom.scss to _sass/custom/variables.scss. Pages and collections . Links to ordinary pages now appear in the navigation on sites that use collections. You might want the navigation of your site to consist entirely of collections. To fix: Add the front matter nav_exclude: true to pages that the navigation should not display. Relative URLs . All generated URLs are now relative. This is a bug fix, and unlikely to break any site. Relative links to pages within a website support deployment to different servers. Navigation order . The order in which the navigation panel lists pages has been simplified. All pages with nav_order values now come before all pages that are ordered by title. If your website has a group of sibling pages where some siblings have nav_order string values, and others are ordered by numerical title values, the former now come before the latter. To fix: Add numerical nav_order values to the pages with numerical title values. DEPRECATIONS . The following features are deprecated, and to be removed in a future release. Jekyll 3 . You can still use Jekyll 3 (3.8.5 or later) to build websites using v0.4.0 of the theme. However, future releases of the theme may require the use of Jekyll 4. You can already use Jekyll 4 to build your website locally. It should look exactly the same as when built with Jekyll 3.1 . To use Jekyll 4 when building your website on GitHub Pages, you need to run GitHub Actions. The simplest way of setting that up in a new repo is to create the repo using the Just the Docs template. To start running Jekyll 4 to build an existing repo on GitHub Pages, you can create a new repo with the template, then copy its .github/workflows directory, and update your repo settings to use Actions. Footer content configuration . Currently, if your configuration sets footer_content to some text, the theme displays that text at the bottom of the main section of each page. The file _includes/footer_custom.html provides a more general way of customizing not only the text but also the markup for the page footer area. You can replicate the current display of TEXT in the footer using the following markup: . &lt;p class=\"text-small text-grey-dk-100 mb-0\"&gt;TEXT&lt;/p&gt; . THEME WEBSITE CHANGES . The website now uses callouts2 to draw attention to important information. The theme uses semantic versioning. A normal version number takes the form X.Y.Z, where X is the major version, Y is the minor version, and Z is the patch version. The theme uses version X.Y.Z.rcN for pre-release N of version X.Y.Z. When referring to version numbers on GitHub, we usually prefix them by ‘v’. Major version zero (0.Y.Z) is for initial development, where anything may change at any time. In practice, we increment the patch version Z for bug fixes and backwards compatible changes; we increment the minor version Y for changes that could break websites using the theme without pinning it to a specific version. The label NEW in the theme website indicates a feature that has been changed or added since the release of the previous minor version. For example, after the release of v0.4.Z, the theme website should label NEW all features that we have changed or added since v0.3.0 – not just since v0.3.3. When we release v0.5.0, we will remove all those labels, and add labels on features since v0.4.0. The theme docs website is not itself versioned. It changes incrementally, independently of theme releases. Home page . The theme home page now focuses on the simplest ways of using the theme. It also notes the different behaviour of theme and remote_theme in connection with interim versions of the theme, such as pre-releases. CHANGELOG . The CHANGELOG page lists the changes made in all previous releases and pre-releases of new versions of the theme gem. It also lists changes made to the main branch of the theme since the latest release or pre-release. For changes since v0.3.3, the log usually references the merged PR that made the change and its author. NON-BREAKING CHANGES (OUTLINE ONLY) . Accessibility . | Skip to main content: the first keyboard-navigatable item is now a link to skip over the sidebar and header to the main content of the page. PR: #949. | Aria-labels: improved aria-labels have been added to various site elements. PRs: #950, … | Other general improvements: gradual changes have improved tab focusability, contrast, and semantic elements. More work still to come. PRs: #498, #846 | . Configuration . | Mermaid support: first-class support for Mermaid - a JavaScript-based diagram and charting tool supported by GitHub - has been added to the theme. This feature is opt-in. See the new doc subsections in Configuration and Code for more. | Multiple Google Analytics tags are now supported. PR: #1029 | . Customization . | all user-facing text is now customizable; previously, several elements (ex search placeholder) were hardwired into the theme. Now, users can blend custom includes and layouts to internationalize their sites. | we’ve clarified the role of custom.scss to be imported last; to allow users to define custom or override variables, we’ve added a new file setup.scss. PR: #1135 | . Custom Includes . We’ve added several custom _includes to provide users with more customization options for different site elements. We’ve also added a section to Configuration to outline these. All of these are opt-in by default; however, these may be breaking if you have existing _includes with the same name. Each item is listed with the relevant file and PR. | TOC heading: toc_heading_custom.html, PR: #980 | Navigation panel footer: nav_footer_custom.html, PR: #474 | Search placeholder: search_placeholder_custom.html, PR: #613 | Modular site components: components/ and icons/, PR: [#1058] | Custom search indices: lunr/, PR: #1068 | . In a future (version 1) release, we may rename the custom include files. Modular Components . We’ve broken up the default layout (_layouts/default.html) into multiple reusable components. This should have no impact on most users; however, it should make it easier to implement custom layouts. For more, see Custom layouts and includes. PR: [#1058]. Navigation . | Collections: nav panel shows links to ordinary pages before collections | Collection folding; part of “Combination”. PR: #578 | Scrolling to show link to selected page. PR: #639 | External nav links are now supported. PR: #876 | Child nav order: sort navigation pages with child_nav_order. PR: #726 | Order when mixing different ways of specifying nav order | . Search . In addition to customizing the search placeholder, we’ve also added the ability to provide custom content to the search index. for more, see Custom content for search index. PR: #1068. Styling . | Code copying: code blocks now allow users to easily copy their contents. PR: #945 | Blockquote: shows vertical bar on left. PR: #965 | Links wrap. PR: #905 | Callouts: a new component similar to alerts or banners. See UI Components - Callouts. PR: #466 | . | Jekyll 4 depends on more recent versions of other gems than Jekyll 3, and the differences between those versions may affect the files of your built site. &#8617; . | The theme website configuration defines the callout titles and colors used there. Websites that use the theme have to configure their own callout titles and colors. &#8617; . | . ",
    "url": "/MIGRATION/#v033--v04x",
    
    "relUrl": "/MIGRATION/#v033--v04x"
  },"142": {
    "doc": "Migration and Upgrading",
    "title": "Migration and Upgrading",
    "content": " ",
    "url": "/MIGRATION/",
    
    "relUrl": "/MIGRATION/"
  },"143": {
    "doc": "Matplotlib",
    "title": "Matplotlib",
    "content": " ",
    "url": "/docs/6.Python/markdown/Matplotlib/",
    
    "relUrl": "/docs/6.Python/markdown/Matplotlib/"
  },"144": {
    "doc": "Numpy",
    "title": "1. Numpy란?",
    "content": ". | Numerical python의 줄임말로써 고성능의 수치 계산을 하기 위해 만들어진 파이썬 package . | Numpy는 과학 계산을 위한 수치해석용 라이브러리로서 다차원 배열을 처리하는데 필요한 여러 유용한 기능을 제공하고 있음 . | 기본적으로 array라는 자료 구조를 제공하며 선형대수용 행렬, 벡터 수학 계산을 위한 자료구조와 계산 함수를 제공 . | 보통 과학용 일반 함수 목록으로 SciPy, 차트용 라이브러리인 Matplotlib, 고수준 DataFrame 제공 모듈인 Pandas와 함께 사용 . | . 1.1 Numpy 특징 . | 특징, 메트릭스, 고수준의 배열은 과학계산 컴퓨팅에 있어 필수 도구라 할 수 있음 . | 입력 값 세트를 통해 계산이 반복될 때, 배열로 데이터를 나타내는 것이 자연스럽고 장점이 많음 . | 파이썬 과학계산 환경에서, 배열을 다루기 좋은 구조를 제공하는 라이브러리가 Numpy임 . | Numpy의 핵심 기능은 C로 구현되어 있어 배열을 계산하고 처리하는데 효율적인 기능들을 제공하고, 속도 또한 빠름 . | 파이썬 프로그램이 일반적으로 C에 비해 느린 이유는 for 루프문 때문인데, Numpy의 벡터 연산을 이용하면 for 루프면 없이 빠르게 동작하는 코드를 작성할 수 있음 . | 첫눈에 보기에 Numpy 배열은 파이썬 리스트 데이터 구조와 유사해보임 . | 하지만 파이썬 리스트는 다양한 객체를 담을 수 있는 컨테이너인데 반해 Numpy 배열은 동일한 자료형만 담을 수 있다는 점이 중요한 차이점 . | Numpy에는 고수준의 데이터 분석 기능을 제공하지는 않음 . | 그러므로 나중에 Scipy나 Pandas 같은 도구를 사용해 데이터 분석을 수행하는 것이 효과적임 . | . import numpy as np . list1 = [7,2,8,10] print(list1) print(type(list1)) . [7, 2, 8, 10] &lt;class 'list'&gt; . array1 = np.array(list1) print(array1) print(type(array1)) . [ 7 2 8 10] &lt;class 'numpy.ndarray'&gt; . list2 = [[5.2,3.0,4.5],[9.1,0.1,0.3]] print(list2) print(type(list2)) . [[5.2, 3.0, 4.5], [9.1, 0.1, 0.3]] &lt;class 'list'&gt; . array2 = np.array(list2) print(array2) print(type(array2)) . [[5.2 3. 4.5] [9.1 0.1 0.3]] &lt;class 'numpy.ndarray'&gt; . array1.shape . (4,) . array2.shape . (2, 3) . a = np.array([1,2,3,4]) print(a) print(type(a)) print(a.shape) . [1 2 3 4] &lt;class 'numpy.ndarray'&gt; (4,) . b = np.array([[1,2,3,4]]) print(b) print(type(b)) print(b.shape) . [[1 2 3 4]] &lt;class 'numpy.ndarray'&gt; (1, 4) . Transpose . | np.transpose() . | .T . | . print(a) print(a.T) . [1 2 3 4] [1 2 3 4] . print(b) print(b.T) . [[1 2 3 4]] [[1] [2] [3] [4]] . array3 = np.array([[[0,1],[2,3],[4,5]], [[6,7],[8,9],[10,11]], [[12,13],[14,15],[16,17]], [[18,19],[20,21],[22,23]]]) print(array3) print(array3.shape) . [[[ 0 1] [ 2 3] [ 4 5]] [[ 6 7] [ 8 9] [10 11]] [[12 13] [14 15] [16 17]] [[18 19] [20 21] [22 23]]] (4, 3, 2) . 2.2 Numpy array 변형하기 . | np.arange() | . np.arange(10) . array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]) . np.arange(1,10) . array([1, 2, 3, 4, 5, 6, 7, 8, 9]) . np.arange(1,10,2) . array([1, 3, 5, 7, 9]) . | reshape | . a = np.arange(1,11) print(a) print(a.shape) . [ 1 2 3 4 5 6 7 8 9 10] (10,) . b = a.reshape(2,5) print(b) print(b.shape) . [[ 1 2 3 4 5] [ 6 7 8 9 10]] (2, 5) . c = a.reshape(5,2) print(c) print(c.shape) . [[ 1 2] [ 3 4] [ 5 6] [ 7 8] [ 9 10]] (5, 2) . d = c.reshape(10,) print(d) print(d.shape) . [ 1 2 3 4 5 6 7 8 9 10] (10,) . e = d.reshape(-1,2) print(e) print(e.shape) . [[ 1 2] [ 3 4] [ 5 6] [ 7 8] [ 9 10]] (5, 2) . f = d.reshape(2,-1) print(f) print(f.shape) . [[ 1 2 3 4 5] [ 6 7 8 9 10]] (2, 5) . 2.3 numpy에서 제공하는 함수를 사용하여 numpy array 만들기 . np.zeros((2,2)) #모든 값 0 . array([[0., 0.], [0., 0.]]) . np.ones((2,3)) #모든 값 1 . array([[1., 1., 1.], [1., 1., 1.]]) . np.full((2,3),5) #사용자가 지정한 특정 값을 모든 값으로 하는 array 생성 . array([[5, 5, 5], [5, 5, 5]]) . np.eye(3) #단위 행렬 . array([[1., 0., 0.], [0., 1., 0.], [0., 0., 1.]]) . x = np.array([[0,1,2],[3,4,5]]) print(x) x . [[0 1 2] [3 4 5]] . array([[0, 1, 2], [3, 4, 5]]) . np.zeros_like(x) #모든 값을 0으로 대체하고 싶을때 사용 . array([[0, 0, 0], [0, 0, 0]]) . random 서브모듈 함수를 통해 난수 생성 . | rand 함수 . | 0,1 사이의 균일 분포에서 난수 matrix array 생성 . | . np.random.rand(2,3,3) . array([[[0.30531114, 0.50297347, 0.02134391], [0.91955662, 0.81454713, 0.40047712], [0.88202009, 0.13273599, 0.81733349]], [[0.26466386, 0.05006526, 0.5808811 ], [0.35161347, 0.85831735, 0.86023872], [0.97791561, 0.07154844, 0.38946964]]]) . | randn 함수 . | 평균 0, 분산 1의 표준 정규분포 난수 matrix array 생성 . | . np.random.randn(3,3) . array([[ 0.04997603, -0.95190023, 0.44591015], [ 0.41734562, -0.91598104, 0.55968764], [ 1.06786417, -1.08018472, 0.14578862]]) . | seed 함수 . | 랜덤한 값을 동일하게 다시 생성하고자 할때 사용 . | . np.random.seed(1234) np.random.rand(2,3,3) . array([[[0.19151945, 0.62210877, 0.43772774], [0.78535858, 0.77997581, 0.27259261], [0.27646426, 0.80187218, 0.95813935]], [[0.87593263, 0.35781727, 0.50099513], [0.68346294, 0.71270203, 0.37025075], [0.56119619, 0.50308317, 0.01376845]]]) . | choice 함수 . | 주어진 1차원 array부터 랜덤으로 샘플링 . | replace = True 복원추출(기본값) . | replace = False 비복원추출 . | . x = np.arange(20) y = np.random.choice(x, size=(2,3,3), replace = False) print(x) print(y) . [ 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19] [[[12 18 13] [16 5 8] [ 1 4 10]] [[19 17 14] [15 9 0] [11 7 3]]] . 3. 부분 추출하기 . | 3.1 슬라이싱 . | numpy array는 파이썬 리스트와 마찬가지로 슬라이스(slice)를 지원함 . | numpy array를 슬라이싱하기 위해서는 각 차원별로 슬라이스 범위를 지정해야 함 . | . x = np.arange(1,10).reshape(3,3) x . array([[1, 2, 3], [4, 5, 6], [7, 8, 9]]) . x[0,2] . 3 . x[2] . array([7, 8, 9]) . x[1:] . array([[4, 5, 6], [7, 8, 9]]) . x[1:2] . array([[4, 5, 6]]) . x[:,1:3] . array([[2, 3], [5, 6], [8, 9]]) . x[1:,1:] . array([[5, 6], [8, 9]]) . x[1:,:2] . array([[4, 5], [7, 8]]) . 3.2 인덱싱 . 정수 인덱싱 . | numpy 슬라이싱이 각 array 차원별 최소-최대의 범위를 정하여 부분 집합을 구하는 것이라면, 정수 인덱싱은 각 차원별로 선택되어지는 array 요소의 인덱스들을 일렬로 나열하여 부분집합을 구하는 방식임 . | 즉, 임의의 numpy array a에 대해 a[[row1, row2], [col1, col2]] 와 같이 표현하는 것인데, 이는 a[row1, col1] 과 a[row2, col2] 라는 두 개의 array 요소의 집합을 의미함 . | 예를 들어, 아래 예제에서 a[[0, 2], [1, 3]] 은 정수 인덱싱으로서 이는 a[0, 1] 과 a[2, 3] 등 2개의 array 요소를 가리킴 . | . lst = [[1,2,3,4], [5,6,7,8], [9,10,11,12]] a = np.array(lst) a . array([[ 1, 2, 3, 4], [ 5, 6, 7, 8], [ 9, 10, 11, 12]]) . s = a[[0,2],[1,3]] s . array([ 2, 12]) . f = a[[1,2],[2,1]] f . array([ 7, 10]) . 다중조건 사용하기 . | 파이썬은 논리 연산자인 and, or, not 사용불가 . | | &amp;, | 사용 | . | . a = np.array([[1,2,3], [4,5,6], [7,8,9]]) a . array([[1, 2, 3], [4, 5, 6], [7, 8, 9]]) . a[(a%2 == 0) &amp; (a&gt;5) ] . array([6, 8]) . a[(a%2 == 0) | (a&gt;5) ] . array([2, 4, 6, 7, 8, 9]) . ",
    "url": "/docs/6.Python/markdown/Numpy/#1-numpy%EB%9E%80",
    
    "relUrl": "/docs/6.Python/markdown/Numpy/#1-numpy란"
  },"145": {
    "doc": "Numpy",
    "title": "4. 연산",
    "content": "### 4.1 기본 연산 . | numpy를 사용하면 array간 연산을 쉽게 실행할 수 있음 . | 연산은 +, -, *, / 등의 연산자를 사용할 수도 있고, add(), substract(), multiply(), divide() 등의 함수를 사용할 수도 있음 . | 예를 들어, 아래 예제와 같이 array a 와 b 가 있을때, a + b를 하면 각 array 요소의 합을 구하게 됨 . | 즉 a[0]+b[0], a[1]+b[1], … 과 같은 방식으로 결과를 리턴하게 됨 . | . a = np.array([1,2,3]) b = np.array([6,5,9]) print(a) print(b) . [1 2 3] [6 5 9] . print(a+b) print(np.add(a,b)) . [ 7 7 12] [ 7 7 12] . print(a-b) print(np.subtract(a,b)) . [-5 -3 -6] [-5 -3 -6] . print(a*b) print(np.multiply(a,b)) . [ 6 10 27] [ 6 10 27] . print(a/b) print(np.divide(a,b)) . [0.16666667 0.4 0.33333333] [0.16666667 0.4 0.33333333] . 4.2 행렬 곱 연산 . | numpy에서 matrix의 product를 구하기 위해서 dot() 함수를 사용함 . | 아래 예제는 두 matrix의 product를 구한 예시 . | . lst1 = [[1,2], [3,4]] lst2 = [[5,6], [7,8]] a = np.array(lst1) b = np.array(lst2) c = np.dot(a,b) c . array([[19, 22], [43, 50]]) . 4.3 기준이 있는 연산 . | numpy는 array간 연산을 위한 함수들을 제공하는데, 각 array 요소들을 더하는 sum() 함수, 각 array 요소들을 곱하는 prod() 함수, 평균을 구하는 mean() 함수 등이 있음 . | 이들 함수에 선택옵션으로 axis를 지정할 수 있음 . | 예를 들어 sum() 함수에서 axis가 0이면 행끼리 더하는 것(각 열의 합)이고, axis가 1이면 열끼리(각 행의 합) 더하는 것임 . | np.sum() . | . a = np.array([[1,2,3], [4,5,6], [7,8,9]]) a . array([[1, 2, 3], [4, 5, 6], [7, 8, 9]]) . np.sum(a) . 45 . np.sum(a, axis =0) . array([12, 15, 18]) . np.sum(a, axis =1) . array([ 6, 15, 24]) . a.sum(axis=1) . array([ 6, 15, 24]) . | np.prod() # 곱 . | np.mean() # 평균 . | . 4.4 array에 nan이 있을 때 연산 . | sum() 함수를 사용할 때, array에 nan이 있는 경우 nan을 제외하고 합을 구하는 함수로 nansum()함수를 사용 | . a = np.array([[1,2],[4,np.nan]]) a . array([[ 1., 2.], [ 4., nan]]) . np.sum(a) . nan . a.prod() . nan . np.nansum(a) . 7.0 . np.nanprod(a) . 8.0 . np.nansum(a, axis=0) #열의 합 . array([5., 2.]) . np.nansum(a, axis = 1) #행의 합 . array([3., 4.]) . ",
    "url": "/docs/6.Python/markdown/Numpy/#4-%EC%97%B0%EC%82%B0",
    
    "relUrl": "/docs/6.Python/markdown/Numpy/#4-연산"
  },"146": {
    "doc": "Numpy",
    "title": "5. 기타함수",
    "content": "5.1 where() 함수 . | 특정 조건을 만족할 때와 그렇지 않을 때 값을 각각 출력해주는 함수로 where() 함수를 사용 . | where(조건, 만족할때의 출력값, 만족하지 않을 때의 출력값) . | . a = np.random.randn(4,4) a . array([[-0.99245009, -1.33743291, 1.21481458, -0.35214466], [ 1.36081077, 0.55253634, 1.22364139, -0.23659903], [ 0.95692038, -1.67469107, 0.26323924, 0.15985934], [ 1.58592928, -0.28960769, -0.64400765, 1.7661651 ]]) . np.where(a &gt; 0, \"양수\", \"음수\") . array([['음수', '음수', '양수', '음수'], ['양수', '양수', '양수', '음수'], ['양수', '음수', '양수', '양수'], ['양수', '음수', '음수', '양수']], dtype='&lt;U2') . ",
    "url": "/docs/6.Python/markdown/Numpy/#5-%EA%B8%B0%ED%83%80%ED%95%A8%EC%88%98",
    
    "relUrl": "/docs/6.Python/markdown/Numpy/#5-기타함수"
  },"147": {
    "doc": "Numpy",
    "title": "Numpy",
    "content": ". 작성일자 : 2023-08-28 ",
    "url": "/docs/6.Python/markdown/Numpy/",
    
    "relUrl": "/docs/6.Python/markdown/Numpy/"
  },"148": {
    "doc": "Optimization",
    "title": "Optimization",
    "content": "참고 서적 : SQL 레벨업 이 페이지는 성능 좋은 SQL을 쓰는 방법, 특히 대량의 데이터를 처리하는 SQL의 성능을 향상시키는 방법을 정리한 페이지입니다. 프로젝트를 하면서 SQL을 많이 사용하게 되었습니다. 작성일 기준으로 저의 메인 직무는 Tableau를 이용한 대시보드 개발이기에 Tableau를 잘 다루는 것이 중요합니다. 하지만, 대시보드를 만들기 위해 데이터에 대한 분석과 DB를 다루는 역량 또한 매우 중요합니다. 마치 요리사가 음식을 만들기에 앞서 식재료에 대해서 잘 알아야하며(어떤 식재료를 써야하며, 어떻게 써야할지 등), 요리 도구를 잘 다루어야하는 것과 동일합니다. 어떤 관점에서는 대시보드 개발자에게 DB를 다루는 능력이 Tableau를 활용하는 능력보다도 더 중요하다고 볼 수도 있을 것 같습니다. 아무리 대시보드를 만드는 능력이 뛰어나다고 하더라도 데이터 정합성을 충족시키지 못한다면, 그 대시보드는 의미가 없기 때문입니다. 처음에는 대시보드 검증을 위해서 데이터 조회의 목적으로 주로 사용했었지만, 이제는 대시보드 개발을 위해 구조를 바꾸거나 결합 등 다양한 쿼리를 이용해 대시보드 개발을 하기도 했습니다. 또한, Tableau 입장에서 DB에서 집계나 로직에 대한 부담을 덜어가 준다면 대시보드의 성능 향상으로도 이어질수 있기에 대시보드 개발에 있어서 고민해볼 포인트이기도 합니다.이에 쿼리를 많이 작성해보게 되면서 자연스럽게 요건을 충족시킬 수 있으면서 성능이 좋은 쿼리에 대해 알고싶은 마음이 커졌습니다. SQL의 첫 번째 목적은 사용자가 원하는 데이터를 선택하는 것 또는 데이터를 갱신하는 것입니다. 일반적인 프로그램 언어와 마찬가지로, 한 가지 목적을 구현하는 코드는 많고 다양합니다. 다만 그러한 구현 방법은 기능적으로는 차이가 없어도 성능적으로는 큰 차이가 있습니다. 따라서 SQL을 작성할 때는 효율과 성능을 중시해서 코드를 작성해야 합니다. 데이터베이스 성능을 이해하려면, SQL뿐만 아니라 데이터 베이스 내부 아키텍쳐와 같이 저장소 같은 하드웨어 특성을 고려해야합니다. 어떤 SQL이 빠르고 왜 그러한 결과가 나오는지, 왜 다른 SQL은 느린지를 이해하려면 블랙박스의 뚜껑을 열어 안을 들여다봐야 합니다. 성능 최적화는 뚜껑을 열고 실행 계획을 들여다봄으로써 블랙박스를 화이트박스로 만드는 것이 목적입니다. 최적화된 쿼리문을 작성하는 방법을 익히고 적용하여 더 나은 데이터 분석가이자 BI 컨설턴트가 되기를 저 스스로에게 기대해봅니다. ",
    "url": "/docs/5.Oracle/Optimization/Optimization_info/#optimization",
    
    "relUrl": "/docs/5.Oracle/Optimization/Optimization_info/#optimization"
  },"149": {
    "doc": "Optimization",
    "title": "Optimization",
    "content": "작성일자 : 2023-09-10 ",
    "url": "/docs/5.Oracle/Optimization/Optimization_info/",
    
    "relUrl": "/docs/5.Oracle/Optimization/Optimization_info/"
  },"150": {
    "doc": "Oracle",
    "title": "Oracle",
    "content": "Learn More SQL 실행순서 . SQL ➡️ Syntax Check ➡️ Semantic Check ➡️ Library Cache Check ➡️ Optimization ➡️ Raw Source Generation ➡️ Execution . 오라클은 기업용 데이터베이스 관리 시스템과 클라우드 서비스를 제공하는 선도적인 기업이며, RDBMS 중에서 세계 최고의 점유율을 차지하고 있는 제품이기도 합니다. 데이터 저장, 검색 및 분석을 위한 포괄적인 솔루션을 제공하며, 비즈니스의 데이터를 효율적으로 관리하는 데 도움을 줍니다. Oracle is a leading company that provides enterprise-level database management systems and cloud services, and it holds the highest market share among RDBMS products worldwide. It offers comprehensive solutions for data storage, retrieval, and analysis, assisting businesses in efficient data management. ",
    "url": "/docs/5.Oracle/Oracle_Info/",
    
    "relUrl": "/docs/5.Oracle/Oracle_Info/"
  },"151": {
    "doc": "Pandas",
    "title": "0. Pandas",
    "content": ". | Pandas 는 데이터 분석을 위한 자료구조로 데이터 분석 도구를 제공하는 파이썬 라이브러리이며, Pandas 의 특징은 다음과 같음 . | 각각의 행,열에 따라 데이터를 정렬할 수 있는 자료구조 . | 시계열, 비시계열 데이터를 함께 다룰 수 있는 통합 자료구조 . | 데이터의 결측치값을 유연하게 처리할 수 있는 기능 . | 데이터 핸들링 및 특정 행,열의 모든 값을 더하는 등의 데이터 연산 기능 . | . | Pandas 의 자료구조로는 Series와 DataFrame이 있음 . | Series는 1차원 데이터를 다루는 데 효과적인 자료구조임 . | DataFrame은 행과 열로 구성된 2차원 데이터를 다루는 데 효과적인 자료구조임 . | . | . import pandas as pd import numpy as np . ",
    "url": "/docs/6.Python/markdown/Pandas/#0-pandas",
    
    "relUrl": "/docs/6.Python/markdown/Pandas/#0-pandas"
  },"152": {
    "doc": "Pandas",
    "title": "1. Series",
    "content": ". | pandas의 series로 데이터를 선언할 때 따로 인덱스를 지정하지 않았다면 기본적으로 0부터 시작하는 정수값으로 인덱싱됨 . | 아래 예제 처럼 index를 사용자가 지정할 수 있음 . | 선언 후 데이터 값을 확인할 때는 values, index를 확인할 때는 index 함수를 이용해서 확인 할 수 있음 . | 기본 함수 사용법 : pd.Series(data, index=index) . | Series객체 생성 시 인덱스값을 통해 데이터에 접근할 수 있음 . | 파이썬의 리스트와 달리 사용자가 index 값을 지정해 줄 수 있으며, 지정한 index 값으로 데이터에 접근 할 수 있음 . | . | . s1 = pd.Series([1,2,3]) s1 . 0 1 1 2 2 3 dtype: int64 . s2 = pd.Series([\"a\",\"b\",\"c\"]) s2 . 0 a 1 b 2 c dtype: object . s3 = pd.Series([\"a\",1,\"b\",2]) s3 . 0 a 1 1 2 b 3 2 dtype: object . s4 = pd.Series([\"a\",\"b\",\"c\"], index=[1,2,3]) s4 . 1 a 2 b 3 c dtype: object . s5 = pd.Series([1,2,3],[\"a\",\"b\",\"c\"]) s5 . a 1 b 2 c 3 dtype: int64 . s5.values . array([1, 2, 3]) . s5.index . Index(['a', 'b', 'c'], dtype='object') . s6 = pd.Series([1,2,3,4]) s6 . 0 1 1 2 2 3 3 4 dtype: int64 . s6.index = (\"a\", \"b\", \"c\", \"d\") s6 . a 1 b 2 c 3 d 4 dtype: int64 . 1.1 Series 기본 함수 . s7 = pd.Series([1,1,1,4,5,6,7,8,9,9,np.NaN]) s7 . 0 1.0 1 1.0 2 1.0 3 4.0 4 5.0 5 6.0 6 7.0 7 8.0 8 9.0 9 9.0 10 NaN dtype: float64 . s7.size #개수 반환 . 11 . len(s7) . 11 . s7.count() #NaN을 제외한 개수를 반환 . 10 . s7.shape() #tuple 형태로 shape 반환 . a1 = np.array(s7) a1 . array([ 1., 1., 1., 4., 5., 6., 7., 8., 9., 9., nan]) . print(a1.mean()) print(s7.mean()) #NaN을 제외한 평균 반환 . nan 5.1 . s7.unique() #유일한 값만 array 형태로 반환 . array([ 1., 4., 5., 6., 7., 8., 9., nan]) . s7.value_counts() #NaN을 제외하고 각 값들의 빈도를 반환 . 1.0 3 9.0 2 4.0 1 5.0 1 6.0 1 7.0 1 8.0 1 dtype: int64 . 1.2 Series 연산 . | Series와 스칼라의 연산은 각 원소별로 스칼라와의 연산이 적용 . | Series끼리의 사칙연산도 가능함. 단, index별로 계산이 되는 점을 유의하여야 함 . | . s1 = pd.Series([1,2,3,4,5],[\"a\",\"b\",\"c\",\"d\",\"e\"]) s2 = pd.Series([2,2,2,2,2],[\"a\",\"b\",\"c\",\"d\",\"e\"]) print(s1) print(s2) . a 1 b 2 c 3 d 4 e 5 dtype: int64 a 2 b 2 c 2 d 2 e 2 dtype: int64 . s1*3 . a 3 b 6 c 9 d 12 e 15 dtype: int64 . s1 + s2 . a 3 b 4 c 5 d 6 e 7 dtype: int64 . s1[\"f\"] = 100 s2[\"f\"] = 200 print(s1) print(s2) . a 1 b 2 c 3 d 4 e 5 f 100 dtype: int64 a 2 b 2 c 2 d 2 e 2 f 200 dtype: int64 . 1.3 Series update . s1 = pd.Series(np.arange(2,13,2),[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\"]) s1 . a 2 b 4 c 6 d 8 e 10 f 12 dtype: int64 . s1[\"a\"] = 200 s1 . a 200 b 4 c 6 d 8 e 10 f 12 dtype: int64 . s1.drop(\"a\") . b 4 c 6 d 8 e 10 f 12 dtype: int64 . s1 . a 200 b 4 c 6 d 8 e 10 f 12 dtype: int64 . s1.drop(\"a\", inplace = True) #inplace를 통해 원 데이터 업데이트 s1 . b 4 c 6 d 8 e 10 f 12 dtype: int64 . 1.4 Series selection . | slicing . | 리스트, array와 동일하게 적용 . | . s1 = pd.Series(np.arange(2,11,2),[\"a\",\"b\",\"c\",\"d\",\"e\"]) s1 . a 2 b 4 c 6 d 8 e 10 dtype: int64 . s1[1:3] . b 4 c 6 dtype: int64 . s1 = pd.Series(np.arange(2,21,2),np.arange(10)) s1 . 0 2 1 4 2 6 3 8 4 10 5 12 6 14 7 16 8 18 9 20 dtype: int64 . s1 &gt; 10 . 0 False 1 False 2 False 3 False 4 False 5 True 6 True 7 True 8 True 9 True dtype: bool . s1[s1&gt;10] . 5 12 6 14 7 16 8 18 9 20 dtype: int64 . (s1 &gt; 10).sum() . 5 . s1[s1&gt;10].sum() . 80 . s1 = pd.Series([1,2,3,4,5,np.NaN]) s1 . 0 1.0 1 2.0 2 3.0 3 4.0 4 5.0 5 NaN dtype: float64 . pd.isnull(s1) . 0 False 1 False 2 False 3 False 4 False 5 True dtype: bool . s1[pd.isnull(s1)] . 5 NaN dtype: float64 . pd.notnull(s1) . 0 True 1 True 2 True 3 True 4 True 5 False dtype: bool . s1[pd.notnull(s1)] . 0 1.0 1 2.0 2 3.0 3 4.0 4 5.0 dtype: float64 . ",
    "url": "/docs/6.Python/markdown/Pandas/#1-series",
    
    "relUrl": "/docs/6.Python/markdown/Pandas/#1-series"
  },"153": {
    "doc": "Pandas",
    "title": "2. DataFrame",
    "content": ". | Pandas의 Series가 1차원 형태의 자료구조라면 DataFrame은 여러 개의 열로 구성된 2차원 형태의 자료구조임 . | numpy array를 받아 만들 수 있으며, Series 처럼 변환 가능한 오브젝트들을 갖고 있는 dict 형태를 인자로 넣어주어 DataFrame을 만들 수 있음 . | . ex = pd.DataFrame({'A': 1., 'B': pd.Timestamp('20130102'), 'C': pd.Series(1, index=list(range(5)), dtype='float32'), 'D': np.array(np.arange(3,8,1), dtype='int32'), 'E': pd.Categorical(['test', 'train', 'test', 'train','test']), 'F': 'foo'}) ex . | | A | B | C | D | E | F | . | 0 | 1.0 | 2013-01-02 | 1.0 | 3 | test | foo | . | 1 | 1.0 | 2013-01-02 | 1.0 | 4 | train | foo | . | 2 | 1.0 | 2013-01-02 | 1.0 | 5 | test | foo | . | 3 | 1.0 | 2013-01-02 | 1.0 | 6 | train | foo | . | 4 | 1.0 | 2013-01-02 | 1.0 | 7 | test | foo | . | DataFrame의 컬럼들은 각기 특별한 자료형을 갖고 있음 . | 이는 DataFrame 내에 있는 dtypes라는 속성을 통해 확인 가능함 . | 파이썬의 기본적인 소수점은 float64로 잡히고, 기본적은 문자열은 str이 아니라 object라는 자료형으로 나타남 . | . ex.dtypes . A float64 B datetime64[ns] C float32 D int32 E category F object dtype: object . ex2 = pd.DataFrame(np.random.randn(5,2), columns = ['A','B']) ex2 . | | A | B | . | 0 | 0.406282 | 0.368642 | . | 1 | 1.140642 | -0.077410 | . | 2 | -0.812914 | -0.273615 | . | 3 | -0.448528 | 0.854089 | . | 4 | -0.237988 | 0.196074 | . ex2.head() #기본값 = 5 . | | A | B | . | 0 | 0.406282 | 0.368642 | . | 1 | 1.140642 | -0.077410 | . | 2 | -0.812914 | -0.273615 | . | 3 | -0.448528 | 0.854089 | . | 4 | -0.237988 | 0.196074 | . ex2.tail(3) . | | A | B | . | 2 | -0.812914 | -0.273615 | . | 3 | -0.448528 | 0.854089 | . | 4 | -0.237988 | 0.196074 | . ex2.index #check index . RangeIndex(start=0, stop=5, step=1) . ex2.columns #check columns . Index(['A', 'B'], dtype='object') . ex2.values #check values . array([[ 0.40628183, 0.36864168], [ 1.14064213, -0.07741036], [-0.81291384, -0.27361517], [-0.44852821, 0.85408865], [-0.23798752, 0.1960742 ]]) . ex2.describe() #simple statistic information of DataFrame . | | A | B | . | count | 5.000000 | 5.000000 | . | mean | 0.009499 | 0.213556 | . | std | 0.772063 | 0.434924 | . | min | -0.812914 | -0.273615 | . | 25% | -0.448528 | -0.077410 | . | 50% | -0.237988 | 0.196074 | . | 75% | 0.406282 | 0.368642 | . | max | 1.140642 | 0.854089 | . ex2.sort_index(axis =1 , ascending = False) . | | B | A | . | 0 | 0.368642 | 0.406282 | . | 1 | -0.077410 | 1.140642 | . | 2 | -0.273615 | -0.812914 | . | 3 | 0.854089 | -0.448528 | . | 4 | 0.196074 | -0.237988 | . ex2.sort_index(axis = 0 , ascending = False) . | | A | B | . | 4 | -0.237988 | 0.196074 | . | 3 | -0.448528 | 0.854089 | . | 2 | -0.812914 | -0.273615 | . | 1 | 1.140642 | -0.077410 | . | 0 | 0.406282 | 0.368642 | . ex2.sort_index() . | | A | B | . | 0 | 0.406282 | 0.368642 | . | 1 | 1.140642 | -0.077410 | . | 2 | -0.812914 | -0.273615 | . | 3 | -0.448528 | 0.854089 | . | 4 | -0.237988 | 0.196074 | . ex2.sort_values(by='B') . | | A | B | . | 2 | -0.812914 | -0.273615 | . | 1 | 1.140642 | -0.077410 | . | 4 | -0.237988 | 0.196074 | . | 0 | 0.406282 | 0.368642 | . | 3 | -0.448528 | 0.854089 | . Selection using pandas . ex2 . | | A | B | . | 0 | 0.406282 | 0.368642 | . | 1 | 1.140642 | -0.077410 | . | 2 | -0.812914 | -0.273615 | . | 3 | -0.448528 | 0.854089 | . | 4 | -0.237988 | 0.196074 | . ex2['A'] . 0 0.406282 1 1.140642 2 -0.812914 3 -0.448528 4 -0.237988 Name: A, dtype: float64 . ex2.A . 0 0.406282 1 1.140642 2 -0.812914 3 -0.448528 4 -0.237988 Name: A, dtype: float64 . ex2[['A']] . | | A | . | 0 | 0.406282 | . | 1 | 1.140642 | . | 2 | -0.812914 | . | 3 | -0.448528 | . | 4 | -0.237988 | . type(ex2['A']) . pandas.core.series.Series . type(ex2[['A']]) . pandas.core.frame.DataFrame . ex2[0:3] . | | A | B | . | 0 | 0.406282 | 0.368642 | . | 1 | 1.140642 | -0.077410 | . | 2 | -0.812914 | -0.273615 | . ",
    "url": "/docs/6.Python/markdown/Pandas/#2-dataframe",
    
    "relUrl": "/docs/6.Python/markdown/Pandas/#2-dataframe"
  },"154": {
    "doc": "Pandas",
    "title": "Merge DataFrame",
    "content": "df1 = pd.DataFrame({'key' : list('ABCDE'), 'value' : np.random.randn(5)}) df1 . | | key | value | . | 0 | A | -0.604176 | . | 1 | B | -0.882808 | . | 2 | C | -0.253994 | . | 3 | D | 0.461608 | . | 4 | E | -0.507770 | . df2 = pd.DataFrame({'key' : list('ABCXZ'), 'value' : np.random.randn(5)}) df2 . | | key | value | . | 0 | A | 0.071220 | . | 1 | B | 0.957223 | . | 2 | C | 0.622761 | . | 3 | X | 1.802048 | . | 4 | Z | -0.531795 | . pd.concat([df1,df2]) # axis = 0 (Default), concat by rows . | | key | value | . | 0 | A | -0.604176 | . | 1 | B | -0.882808 | . | 2 | C | -0.253994 | . | 3 | D | 0.461608 | . | 4 | E | -0.507770 | . | 0 | A | 0.071220 | . | 1 | B | 0.957223 | . | 2 | C | 0.622761 | . | 3 | X | 1.802048 | . | 4 | Z | -0.531795 | . pd.concat([df1, df2], axis = 0, ignore_index = True) . | | key | value | . | 0 | A | -0.604176 | . | 1 | B | -0.882808 | . | 2 | C | -0.253994 | . | 3 | D | 0.461608 | . | 4 | E | -0.507770 | . | 5 | A | 0.071220 | . | 6 | B | 0.957223 | . | 7 | C | 0.622761 | . | 8 | X | 1.802048 | . | 9 | Z | -0.531795 | . pd.concat([df1, df2]).reset_index() . | | index | key | value | . | 0 | 0 | A | -0.604176 | . | 1 | 1 | B | -0.882808 | . | 2 | 2 | C | -0.253994 | . | 3 | 3 | D | 0.461608 | . | 4 | 4 | E | -0.507770 | . | 5 | 0 | A | 0.071220 | . | 6 | 1 | B | 0.957223 | . | 7 | 2 | C | 0.622761 | . | 8 | 3 | X | 1.802048 | . | 9 | 4 | Z | -0.531795 | . pd.concat([df1,df2], axis = 1) . | | key | value | key | value | . | 0 | A | -0.604176 | A | 0.071220 | . | 1 | B | -0.882808 | B | 0.957223 | . | 2 | C | -0.253994 | C | 0.622761 | . | 3 | D | 0.461608 | X | 1.802048 | . | 4 | E | -0.507770 | Z | -0.531795 | . df2.columns = ['key','values2'] df2 . | | key | values2 | . | 0 | A | 0.071220 | . | 1 | B | 0.957223 | . | 2 | C | 0.622761 | . | 3 | X | 1.802048 | . | 4 | Z | -0.531795 | . pd.concat([df1,df2]) . | | key | value | values2 | . | 0 | A | -0.604176 | NaN | . | 1 | B | -0.882808 | NaN | . | 2 | C | -0.253994 | NaN | . | 3 | D | 0.461608 | NaN | . | 4 | E | -0.507770 | NaN | . | 0 | A | NaN | 0.071220 | . | 1 | B | NaN | 0.957223 | . | 2 | C | NaN | 0.622761 | . | 3 | X | NaN | 1.802048 | . | 4 | Z | NaN | -0.531795 | . pd.merge() . df1 . | | key | value | . | 0 | A | -0.604176 | . | 1 | B | -0.882808 | . | 2 | C | -0.253994 | . | 3 | D | 0.461608 | . | 4 | E | -0.507770 | . df2 . | | key | values2 | . | 0 | A | 0.071220 | . | 1 | B | 0.957223 | . | 2 | C | 0.622761 | . | 3 | X | 1.802048 | . | 4 | Z | -0.531795 | . pd.merge(df1, df2, on = 'key', how = 'inner') . | | key | value | values2 | . | 0 | A | -0.604176 | 0.071220 | . | 1 | B | -0.882808 | 0.957223 | . | 2 | C | -0.253994 | 0.622761 | . pd.merge(df1, df2, on = 'key', how = 'left') . | | key | value | values2 | . | 0 | A | -0.604176 | 0.071220 | . | 1 | B | -0.882808 | 0.957223 | . | 2 | C | -0.253994 | 0.622761 | . | 3 | D | 0.461608 | NaN | . | 4 | E | -0.507770 | NaN | . pd.merge(df1, df2, on = 'key', how = 'right') . | | key | value | values2 | . | 0 | A | -0.604176 | 0.071220 | . | 1 | B | -0.882808 | 0.957223 | . | 2 | C | -0.253994 | 0.622761 | . | 3 | X | NaN | 1.802048 | . | 4 | Z | NaN | -0.531795 | . pd.merge(df1, df2, on = 'key', how = 'outer') . | | key | value | values2 | . | 0 | A | -0.604176 | 0.071220 | . | 1 | B | -0.882808 | 0.957223 | . | 2 | C | -0.253994 | 0.622761 | . | 3 | D | 0.461608 | NaN | . | 4 | E | -0.507770 | NaN | . | 5 | X | NaN | 1.802048 | . | 6 | Z | NaN | -0.531795 | . 4. Practice using data set - iris dataset . from sklearn.datasets import load_iris . print(iris) # 로드된 데이터가 속성-스타일 접근을 제공하는 딕셔너리와 번치 객체로 표현된 것을 확인 print(iris.DESCR) # Description 속성을 이용해서 데이터셋의 정보를 확인 # 각 key에 저장된 value 확인 # feature print(iris.data) print(iris.feature_names) # label print(iris.target) print(iris.target_names) # feature_names 와 target을 레코드로 갖는 데이터프레임 생성 df = pd.DataFrame(data=iris.data, columns=iris.feature_names) . {'data': array([[5.1, 3.5, 1.4, 0.2], [4.9, 3. , 1.4, 0.2], [4.7, 3.2, 1.3, 0.2], [4.6, 3.1, 1.5, 0.2], [5. , 3.6, 1.4, 0.2], [5.4, 3.9, 1.7, 0.4], [4.6, 3.4, 1.4, 0.3], [5. , 3.4, 1.5, 0.2], [4.4, 2.9, 1.4, 0.2], [4.9, 3.1, 1.5, 0.1], [5.4, 3.7, 1.5, 0.2], [4.8, 3.4, 1.6, 0.2], [4.8, 3. , 1.4, 0.1], [4.3, 3. , 1.1, 0.1], [5.8, 4. , 1.2, 0.2], [5.7, 4.4, 1.5, 0.4], [5.4, 3.9, 1.3, 0.4], [5.1, 3.5, 1.4, 0.3], [5.7, 3.8, 1.7, 0.3], [5.1, 3.8, 1.5, 0.3], [5.4, 3.4, 1.7, 0.2], [5.1, 3.7, 1.5, 0.4], [4.6, 3.6, 1. , 0.2], [5.1, 3.3, 1.7, 0.5], [4.8, 3.4, 1.9, 0.2], [5. , 3. , 1.6, 0.2], [5. , 3.4, 1.6, 0.4], [5.2, 3.5, 1.5, 0.2], [5.2, 3.4, 1.4, 0.2], [4.7, 3.2, 1.6, 0.2], [4.8, 3.1, 1.6, 0.2], [5.4, 3.4, 1.5, 0.4], [5.2, 4.1, 1.5, 0.1], [5.5, 4.2, 1.4, 0.2], [4.9, 3.1, 1.5, 0.2], [5. , 3.2, 1.2, 0.2], [5.5, 3.5, 1.3, 0.2], [4.9, 3.6, 1.4, 0.1], [4.4, 3. , 1.3, 0.2], [5.1, 3.4, 1.5, 0.2], [5. , 3.5, 1.3, 0.3], [4.5, 2.3, 1.3, 0.3], [4.4, 3.2, 1.3, 0.2], [5. , 3.5, 1.6, 0.6], [5.1, 3.8, 1.9, 0.4], [4.8, 3. , 1.4, 0.3], [5.1, 3.8, 1.6, 0.2], [4.6, 3.2, 1.4, 0.2], [5.3, 3.7, 1.5, 0.2], [5. , 3.3, 1.4, 0.2], [7. , 3.2, 4.7, 1.4], [6.4, 3.2, 4.5, 1.5], [6.9, 3.1, 4.9, 1.5], [5.5, 2.3, 4. , 1.3], [6.5, 2.8, 4.6, 1.5], [5.7, 2.8, 4.5, 1.3], [6.3, 3.3, 4.7, 1.6], [4.9, 2.4, 3.3, 1. ], [6.6, 2.9, 4.6, 1.3], [5.2, 2.7, 3.9, 1.4], [5. , 2. , 3.5, 1. ], [5.9, 3. , 4.2, 1.5], [6. , 2.2, 4. , 1. ], [6.1, 2.9, 4.7, 1.4], [5.6, 2.9, 3.6, 1.3], [6.7, 3.1, 4.4, 1.4], [5.6, 3. , 4.5, 1.5], [5.8, 2.7, 4.1, 1. ], [6.2, 2.2, 4.5, 1.5], [5.6, 2.5, 3.9, 1.1], [5.9, 3.2, 4.8, 1.8], [6.1, 2.8, 4. , 1.3], [6.3, 2.5, 4.9, 1.5], [6.1, 2.8, 4.7, 1.2], [6.4, 2.9, 4.3, 1.3], [6.6, 3. , 4.4, 1.4], [6.8, 2.8, 4.8, 1.4], [6.7, 3. , 5. , 1.7], [6. , 2.9, 4.5, 1.5], [5.7, 2.6, 3.5, 1. ], [5.5, 2.4, 3.8, 1.1], [5.5, 2.4, 3.7, 1. ], [5.8, 2.7, 3.9, 1.2], [6. , 2.7, 5.1, 1.6], [5.4, 3. , 4.5, 1.5], [6. , 3.4, 4.5, 1.6], [6.7, 3.1, 4.7, 1.5], [6.3, 2.3, 4.4, 1.3], [5.6, 3. , 4.1, 1.3], [5.5, 2.5, 4. , 1.3], [5.5, 2.6, 4.4, 1.2], [6.1, 3. , 4.6, 1.4], [5.8, 2.6, 4. , 1.2], [5. , 2.3, 3.3, 1. ], [5.6, 2.7, 4.2, 1.3], [5.7, 3. , 4.2, 1.2], [5.7, 2.9, 4.2, 1.3], [6.2, 2.9, 4.3, 1.3], [5.1, 2.5, 3. , 1.1], [5.7, 2.8, 4.1, 1.3], [6.3, 3.3, 6. , 2.5], [5.8, 2.7, 5.1, 1.9], [7.1, 3. , 5.9, 2.1], [6.3, 2.9, 5.6, 1.8], [6.5, 3. , 5.8, 2.2], [7.6, 3. , 6.6, 2.1], [4.9, 2.5, 4.5, 1.7], [7.3, 2.9, 6.3, 1.8], [6.7, 2.5, 5.8, 1.8], [7.2, 3.6, 6.1, 2.5], [6.5, 3.2, 5.1, 2. ], [6.4, 2.7, 5.3, 1.9], [6.8, 3. , 5.5, 2.1], [5.7, 2.5, 5. , 2. ], [5.8, 2.8, 5.1, 2.4], [6.4, 3.2, 5.3, 2.3], [6.5, 3. , 5.5, 1.8], [7.7, 3.8, 6.7, 2.2], [7.7, 2.6, 6.9, 2.3], [6. , 2.2, 5. , 1.5], [6.9, 3.2, 5.7, 2.3], [5.6, 2.8, 4.9, 2. ], [7.7, 2.8, 6.7, 2. ], [6.3, 2.7, 4.9, 1.8], [6.7, 3.3, 5.7, 2.1], [7.2, 3.2, 6. , 1.8], [6.2, 2.8, 4.8, 1.8], [6.1, 3. , 4.9, 1.8], [6.4, 2.8, 5.6, 2.1], [7.2, 3. , 5.8, 1.6], [7.4, 2.8, 6.1, 1.9], [7.9, 3.8, 6.4, 2. ], [6.4, 2.8, 5.6, 2.2], [6.3, 2.8, 5.1, 1.5], [6.1, 2.6, 5.6, 1.4], [7.7, 3. , 6.1, 2.3], [6.3, 3.4, 5.6, 2.4], [6.4, 3.1, 5.5, 1.8], [6. , 3. , 4.8, 1.8], [6.9, 3.1, 5.4, 2.1], [6.7, 3.1, 5.6, 2.4], [6.9, 3.1, 5.1, 2.3], [5.8, 2.7, 5.1, 1.9], [6.8, 3.2, 5.9, 2.3], [6.7, 3.3, 5.7, 2.5], [6.7, 3. , 5.2, 2.3], [6.3, 2.5, 5. , 1.9], [6.5, 3. , 5.2, 2. ], [6.2, 3.4, 5.4, 2.3], [5.9, 3. , 5.1, 1.8]]), 'target': array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]), 'frame': None, 'target_names': array(['setosa', 'versicolor', 'virginica'], dtype='&lt;U10'), 'DESCR': '.. _iris_dataset:\\n\\nIris plants dataset\\n--------------------\\n\\n**Data Set Characteristics:**\\n\\n :Number of Instances: 150 (50 in each of three classes)\\n :Number of Attributes: 4 numeric, predictive attributes and the class\\n :Attribute Information:\\n - sepal length in cm\\n - sepal width in cm\\n - petal length in cm\\n - petal width in cm\\n - class:\\n - Iris-Setosa\\n - Iris-Versicolour\\n - Iris-Virginica\\n \\n :Summary Statistics:\\n\\n ============== ==== ==== ======= ===== ====================\\n Min Max Mean SD Class Correlation\\n ============== ==== ==== ======= ===== ====================\\n sepal length: 4.3 7.9 5.84 0.83 0.7826\\n sepal width: 2.0 4.4 3.05 0.43 -0.4194\\n petal length: 1.0 6.9 3.76 1.76 0.9490 (high!)\\n petal width: 0.1 2.5 1.20 0.76 0.9565 (high!)\\n ============== ==== ==== ======= ===== ====================\\n\\n :Missing Attribute Values: None\\n :Class Distribution: 33.3% for each of 3 classes.\\n :Creator: R.A. Fisher\\n :Donor: Michael Marshall (MARSHALL%PLU@io.arc.nasa.gov)\\n :Date: July, 1988\\n\\nThe famous Iris database, first used by Sir R.A. Fisher. The dataset is taken\\nfrom Fisher\\'s paper. Note that it\\'s the same as in R, but not as in the UCI\\nMachine Learning Repository, which has two wrong data points.\\n\\nThis is perhaps the best known database to be found in the\\npattern recognition literature. Fisher\\'s paper is a classic in the field and\\nis referenced frequently to this day. (See Duda &amp; Hart, for example.) The\\ndata set contains 3 classes of 50 instances each, where each class refers to a\\ntype of iris plant. One class is linearly separable from the other 2; the\\nlatter are NOT linearly separable from each other.\\n\\n.. topic:: References\\n\\n - Fisher, R.A. \"The use of multiple measurements in taxonomic problems\"\\n Annual Eugenics, 7, Part II, 179-188 (1936); also in \"Contributions to\\n Mathematical Statistics\" (John Wiley, NY, 1950).\\n - Duda, R.O., &amp; Hart, P.E. (1973) Pattern Classification and Scene Analysis.\\n (Q327.D83) John Wiley &amp; Sons. ISBN 0-471-22361-1. See page 218.\\n - Dasarathy, B.V. (1980) \"Nosing Around the Neighborhood: A New System\\n Structure and Classification Rule for Recognition in Partially Exposed\\n Environments\". IEEE Transactions on Pattern Analysis and Machine\\n Intelligence, Vol. PAMI-2, No. 1, 67-71.\\n - Gates, G.W. (1972) \"The Reduced Nearest Neighbor Rule\". IEEE Transactions\\n on Information Theory, May 1972, 431-433.\\n - See also: 1988 MLC Proceedings, 54-64. Cheeseman et al\"s AUTOCLASS II\\n conceptual clustering system finds 3 classes in the data.\\n - Many, many more ...', 'feature_names': ['sepal length (cm)', 'sepal width (cm)', 'petal length (cm)', 'petal width (cm)'], 'filename': 'iris.csv', 'data_module': 'sklearn.datasets.data'} .. _iris_dataset: Iris plants dataset -------------------- **Data Set Characteristics:** :Number of Instances: 150 (50 in each of three classes) :Number of Attributes: 4 numeric, predictive attributes and the class :Attribute Information: - sepal length in cm - sepal width in cm - petal length in cm - petal width in cm - class: - Iris-Setosa - Iris-Versicolour - Iris-Virginica :Summary Statistics: ============== ==== ==== ======= ===== ==================== Min Max Mean SD Class Correlation ============== ==== ==== ======= ===== ==================== sepal length: 4.3 7.9 5.84 0.83 0.7826 sepal width: 2.0 4.4 3.05 0.43 -0.4194 petal length: 1.0 6.9 3.76 1.76 0.9490 (high!) petal width: 0.1 2.5 1.20 0.76 0.9565 (high!) ============== ==== ==== ======= ===== ==================== :Missing Attribute Values: None :Class Distribution: 33.3% for each of 3 classes. :Creator: R.A. Fisher :Donor: Michael Marshall (MARSHALL%PLU@io.arc.nasa.gov) :Date: July, 1988 The famous Iris database, first used by Sir R.A. Fisher. The dataset is taken from Fisher's paper. Note that it's the same as in R, but not as in the UCI Machine Learning Repository, which has two wrong data points. This is perhaps the best known database to be found in the pattern recognition literature. Fisher's paper is a classic in the field and is referenced frequently to this day. (See Duda &amp; Hart, for example.) The data set contains 3 classes of 50 instances each, where each class refers to a type of iris plant. One class is linearly separable from the other 2; the latter are NOT linearly separable from each other.. topic:: References - Fisher, R.A. \"The use of multiple measurements in taxonomic problems\" Annual Eugenics, 7, Part II, 179-188 (1936); also in \"Contributions to Mathematical Statistics\" (John Wiley, NY, 1950). - Duda, R.O., &amp; Hart, P.E. (1973) Pattern Classification and Scene Analysis. (Q327.D83) John Wiley &amp; Sons. ISBN 0-471-22361-1. See page 218. - Dasarathy, B.V. (1980) \"Nosing Around the Neighborhood: A New System Structure and Classification Rule for Recognition in Partially Exposed Environments\". IEEE Transactions on Pattern Analysis and Machine Intelligence, Vol. PAMI-2, No. 1, 67-71. - Gates, G.W. (1972) \"The Reduced Nearest Neighbor Rule\". IEEE Transactions on Information Theory, May 1972, 431-433. - See also: 1988 MLC Proceedings, 54-64. Cheeseman et al\"s AUTOCLASS II conceptual clustering system finds 3 classes in the data. - Many, many more ... [[5.1 3.5 1.4 0.2] [4.9 3. 1.4 0.2] [4.7 3.2 1.3 0.2] [4.6 3.1 1.5 0.2] [5. 3.6 1.4 0.2] [5.4 3.9 1.7 0.4] [4.6 3.4 1.4 0.3] [5. 3.4 1.5 0.2] [4.4 2.9 1.4 0.2] [4.9 3.1 1.5 0.1] [5.4 3.7 1.5 0.2] [4.8 3.4 1.6 0.2] [4.8 3. 1.4 0.1] [4.3 3. 1.1 0.1] [5.8 4. 1.2 0.2] [5.7 4.4 1.5 0.4] [5.4 3.9 1.3 0.4] [5.1 3.5 1.4 0.3] [5.7 3.8 1.7 0.3] [5.1 3.8 1.5 0.3] [5.4 3.4 1.7 0.2] [5.1 3.7 1.5 0.4] [4.6 3.6 1. 0.2] [5.1 3.3 1.7 0.5] [4.8 3.4 1.9 0.2] [5. 3. 1.6 0.2] [5. 3.4 1.6 0.4] [5.2 3.5 1.5 0.2] [5.2 3.4 1.4 0.2] [4.7 3.2 1.6 0.2] [4.8 3.1 1.6 0.2] [5.4 3.4 1.5 0.4] [5.2 4.1 1.5 0.1] [5.5 4.2 1.4 0.2] [4.9 3.1 1.5 0.2] [5. 3.2 1.2 0.2] [5.5 3.5 1.3 0.2] [4.9 3.6 1.4 0.1] [4.4 3. 1.3 0.2] [5.1 3.4 1.5 0.2] [5. 3.5 1.3 0.3] [4.5 2.3 1.3 0.3] [4.4 3.2 1.3 0.2] [5. 3.5 1.6 0.6] [5.1 3.8 1.9 0.4] [4.8 3. 1.4 0.3] [5.1 3.8 1.6 0.2] [4.6 3.2 1.4 0.2] [5.3 3.7 1.5 0.2] [5. 3.3 1.4 0.2] [7. 3.2 4.7 1.4] [6.4 3.2 4.5 1.5] [6.9 3.1 4.9 1.5] [5.5 2.3 4. 1.3] [6.5 2.8 4.6 1.5] [5.7 2.8 4.5 1.3] [6.3 3.3 4.7 1.6] [4.9 2.4 3.3 1. ] [6.6 2.9 4.6 1.3] [5.2 2.7 3.9 1.4] [5. 2. 3.5 1. ] [5.9 3. 4.2 1.5] [6. 2.2 4. 1. ] [6.1 2.9 4.7 1.4] [5.6 2.9 3.6 1.3] [6.7 3.1 4.4 1.4] [5.6 3. 4.5 1.5] [5.8 2.7 4.1 1. ] [6.2 2.2 4.5 1.5] [5.6 2.5 3.9 1.1] [5.9 3.2 4.8 1.8] [6.1 2.8 4. 1.3] [6.3 2.5 4.9 1.5] [6.1 2.8 4.7 1.2] [6.4 2.9 4.3 1.3] [6.6 3. 4.4 1.4] [6.8 2.8 4.8 1.4] [6.7 3. 5. 1.7] [6. 2.9 4.5 1.5] [5.7 2.6 3.5 1. ] [5.5 2.4 3.8 1.1] [5.5 2.4 3.7 1. ] [5.8 2.7 3.9 1.2] [6. 2.7 5.1 1.6] [5.4 3. 4.5 1.5] [6. 3.4 4.5 1.6] [6.7 3.1 4.7 1.5] [6.3 2.3 4.4 1.3] [5.6 3. 4.1 1.3] [5.5 2.5 4. 1.3] [5.5 2.6 4.4 1.2] [6.1 3. 4.6 1.4] [5.8 2.6 4. 1.2] [5. 2.3 3.3 1. ] [5.6 2.7 4.2 1.3] [5.7 3. 4.2 1.2] [5.7 2.9 4.2 1.3] [6.2 2.9 4.3 1.3] [5.1 2.5 3. 1.1] [5.7 2.8 4.1 1.3] [6.3 3.3 6. 2.5] [5.8 2.7 5.1 1.9] [7.1 3. 5.9 2.1] [6.3 2.9 5.6 1.8] [6.5 3. 5.8 2.2] [7.6 3. 6.6 2.1] [4.9 2.5 4.5 1.7] [7.3 2.9 6.3 1.8] [6.7 2.5 5.8 1.8] [7.2 3.6 6.1 2.5] [6.5 3.2 5.1 2. ] [6.4 2.7 5.3 1.9] [6.8 3. 5.5 2.1] [5.7 2.5 5. 2. ] [5.8 2.8 5.1 2.4] [6.4 3.2 5.3 2.3] [6.5 3. 5.5 1.8] [7.7 3.8 6.7 2.2] [7.7 2.6 6.9 2.3] [6. 2.2 5. 1.5] [6.9 3.2 5.7 2.3] [5.6 2.8 4.9 2. ] [7.7 2.8 6.7 2. ] [6.3 2.7 4.9 1.8] [6.7 3.3 5.7 2.1] [7.2 3.2 6. 1.8] [6.2 2.8 4.8 1.8] [6.1 3. 4.9 1.8] [6.4 2.8 5.6 2.1] [7.2 3. 5.8 1.6] [7.4 2.8 6.1 1.9] [7.9 3.8 6.4 2. ] [6.4 2.8 5.6 2.2] [6.3 2.8 5.1 1.5] [6.1 2.6 5.6 1.4] [7.7 3. 6.1 2.3] [6.3 3.4 5.6 2.4] [6.4 3.1 5.5 1.8] [6. 3. 4.8 1.8] [6.9 3.1 5.4 2.1] [6.7 3.1 5.6 2.4] [6.9 3.1 5.1 2.3] [5.8 2.7 5.1 1.9] [6.8 3.2 5.9 2.3] [6.7 3.3 5.7 2.5] [6.7 3. 5.2 2.3] [6.3 2.5 5. 1.9] [6.5 3. 5.2 2. ] [6.2 3.4 5.4 2.3] [5.9 3. 5.1 1.8]] ['sepal length (cm)', 'sepal width (cm)', 'petal length (cm)', 'petal width (cm)'] [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2] ['setosa' 'versicolor' 'virginica'] . df.head() . | | sepal length (cm) | sepal width (cm) | petal length (cm) | petal width (cm) | . | 0 | 5.1 | 3.5 | 1.4 | 0.2 | . | 1 | 4.9 | 3.0 | 1.4 | 0.2 | . | 2 | 4.7 | 3.2 | 1.3 | 0.2 | . | 3 | 4.6 | 3.1 | 1.5 | 0.2 | . | 4 | 5.0 | 3.6 | 1.4 | 0.2 | . df.tail() . | | sepal length (cm) | sepal width (cm) | petal length (cm) | petal width (cm) | . | 145 | 6.7 | 3.0 | 5.2 | 2.3 | . | 146 | 6.3 | 2.5 | 5.0 | 1.9 | . | 147 | 6.5 | 3.0 | 5.2 | 2.0 | . | 148 | 6.2 | 3.4 | 5.4 | 2.3 | . | 149 | 5.9 | 3.0 | 5.1 | 1.8 | . df.index #인덱스 확인 . RangeIndex(start=0, stop=150, step=1) . df.columns #컬럼 확인 . Index(['sepal length (cm)', 'sepal width (cm)', 'petal length (cm)', 'petal width (cm)'], dtype='object') . df.dtypes #형식 확인 . sepal length (cm) float64 sepal width (cm) float64 petal length (cm) float64 petal width (cm) float64 dtype: object . df[['sepal length (cm)', 'sepal width (cm)']] = df[['sepal length (cm)', 'sepal width (cm)']].astype(object) df.dtypes #형식 변경 . sepal length (cm) object sepal width (cm) object petal length (cm) float64 petal width (cm) float64 dtype: object . df[['sepal length (cm)', 'sepal width (cm)']] = df[['sepal length (cm)', 'sepal width (cm)']].astype(float) df.dtypes . sepal length (cm) float64 sepal width (cm) float64 petal length (cm) float64 petal width (cm) float64 dtype: object . df.info() #데이터 타입, 각 아이템 개수 확인 . &lt;class 'pandas.core.frame.DataFrame'&gt; RangeIndex: 150 entries, 0 to 149 Data columns (total 4 columns): # Column Non-Null Count Dtype --- ------ -------------- ----- 0 sepal length (cm) 150 non-null float64 1 sepal width (cm) 150 non-null float64 2 petal length (cm) 150 non-null float64 3 petal width (cm) 150 non-null float64 dtypes: float64(4) memory usage: 4.8 KB . 4.2 데이터 전처리 . df = df.rename(columns={'sepal length (cm)': 'sepal length', 'sepal width (cm)': 'sepal width', 'petal length (cm)' : 'petal length', 'petal width (cm)': 'petal width', 'variety' : 'species'}) #변수 이름 변경 df.head() . | | sepal length | sepal width | petal length | petal width | . | 0 | 5.1 | 3.5 | 1.4 | 0.2 | . | 1 | 4.9 | 3.0 | 1.4 | 0.2 | . | 2 | 4.7 | 3.2 | 1.3 | 0.2 | . | 3 | 4.6 | 3.1 | 1.5 | 0.2 | . | 4 | 5.0 | 3.6 | 1.4 | 0.2 | . Dataframe column 선택 . | dataframe[ ] 으로 컬럼 추출 . | [] -&gt; Series로 변환 . | [[]] -&gt; dataframe으로 반환 . | . df.columns . Index(['sepal length', 'sepal width', 'petal length', 'petal width'], dtype='object') . df['sepal length'] . 0 5.1 1 4.9 2 4.7 3 4.6 4 5.0 ... 145 6.7 146 6.3 147 6.5 148 6.2 149 5.9 Name: sepal length, Length: 150, dtype: float64 . df[['sepal length']] . | | sepal length | . | 0 | 5.1 | . | 1 | 4.9 | . | 2 | 4.7 | . | 3 | 4.6 | . | 4 | 5.0 | . | ... | ... | . | 145 | 6.7 | . | 146 | 6.3 | . | 147 | 6.5 | . | 148 | 6.2 | . | 149 | 5.9 | . 150 rows × 1 columns . df[['sepal length', 'sepal width']] . | | sepal length | sepal width | . | 0 | 5.1 | 3.5 | . | 1 | 4.9 | 3.0 | . | 2 | 4.7 | 3.2 | . | 3 | 4.6 | 3.1 | . | 4 | 5.0 | 3.6 | . | ... | ... | ... | . | 145 | 6.7 | 3.0 | . | 146 | 6.3 | 2.5 | . | 147 | 6.5 | 3.0 | . | 148 | 6.2 | 3.4 | . | 149 | 5.9 | 3.0 | . 150 rows × 2 columns . dataframe row 선택 . | dataframe의 경우 []연산자는 컬럼(column) 선택, 하지만 슬라이싱(slicing)은 행(row) 선택 . | .loc(),iloc()로 행 선택 가능 . | .loc() : 인덱스 자체를 사용 . | .iloc() : 0 based 인덱스 사용 . | . df.head(10) . | | sepal length | sepal width | petal length | petal width | . | 0 | 5.1 | 3.5 | 1.4 | 0.2 | . | 1 | 4.9 | 3.0 | 1.4 | 0.2 | . | 2 | 4.7 | 3.2 | 1.3 | 0.2 | . | 3 | 4.6 | 3.1 | 1.5 | 0.2 | . | 4 | 5.0 | 3.6 | 1.4 | 0.2 | . | 5 | 5.4 | 3.9 | 1.7 | 0.4 | . | 6 | 4.6 | 3.4 | 1.4 | 0.3 | . | 7 | 5.0 | 3.4 | 1.5 | 0.2 | . | 8 | 4.4 | 2.9 | 1.4 | 0.2 | . | 9 | 4.9 | 3.1 | 1.5 | 0.1 | . df[0:5] . | | sepal length | sepal width | petal length | petal width | . | 0 | 5.1 | 3.5 | 1.4 | 0.2 | . | 1 | 4.9 | 3.0 | 1.4 | 0.2 | . | 2 | 4.7 | 3.2 | 1.3 | 0.2 | . | 3 | 4.6 | 3.1 | 1.5 | 0.2 | . | 4 | 5.0 | 3.6 | 1.4 | 0.2 | . df.index = df.index + 100 df.head() . | | sepal length | sepal width | petal length | petal width | . | 100 | 5.1 | 3.5 | 1.4 | 0.2 | . | 101 | 4.9 | 3.0 | 1.4 | 0.2 | . | 102 | 4.7 | 3.2 | 1.3 | 0.2 | . | 103 | 4.6 | 3.1 | 1.5 | 0.2 | . | 104 | 5.0 | 3.6 | 1.4 | 0.2 | . df.loc[[100]] . | | sepal length | sepal width | petal length | petal width | . | 100 | 5.1 | 3.5 | 1.4 | 0.2 | . df.iloc[[30]] . | | sepal length | sepal width | petal length | petal width | . | 130 | 4.8 | 3.1 | 1.6 | 0.2 | . df.iloc[[0]] . | | sepal length | sepal width | petal length | petal width | . | 100 | 5.1 | 3.5 | 1.4 | 0.2 | . df.loc[[100,101,102],[\"sepal length\", \"sepal width\"]] . | | sepal length | sepal width | . | 100 | 5.1 | 3.5 | . | 101 | 4.9 | 3.0 | . | 102 | 4.7 | 3.2 | . df.iloc[[0,1,2],[0,3]] . | | sepal length | petal width | . | 100 | 5.1 | 0.2 | . | 101 | 4.9 | 0.2 | . | 102 | 4.7 | 0.2 | . ",
    "url": "/docs/6.Python/markdown/Pandas/#merge-dataframe",
    
    "relUrl": "/docs/6.Python/markdown/Pandas/#merge-dataframe"
  },"155": {
    "doc": "Pandas",
    "title": "Pandas",
    "content": ". 작성일자 : 2023-08-28 ",
    "url": "/docs/6.Python/markdown/Pandas/",
    
    "relUrl": "/docs/6.Python/markdown/Pandas/"
  },"156": {
    "doc": "Projects",
    "title": "Projects",
    "content": ". 프로젝트를 하면 배우고 느끼는 것이 정말 많습니다. 단순히 태블로 개발뿐만 아니라 서버, 보안, 권한관리, 이슈 관리, 문서 작성, 커뮤니케이션 스킬 등등 다양한 soft skill과 hard skill에 대한 필요성을 느낍니다. 이 페이지는 프로젝트를 하면서 배운점과 느낀점을 기록해 두는 페이지입니다. 이 기록들은 나에게 큰 지적 자산이 될 것이고, 나의 성장에 있어서 큰 도움이 될 것이라고 생각합니다. There’s a lot I really learn and feel while doing the project. I feel the need for various soft skills and hard skills such as server, security, permission management, issue management, document writing, communication skills, etc., as well as simply developing tableau. This page is a page that records what you learned and felt during the project. I think these records will be a great intellectual asset to me and a great help to my growth. ",
    "url": "/docs/2.Projects/Projects_Info/",
    
    "relUrl": "/docs/2.Projects/Projects_Info/"
  },"157": {
    "doc": "Python",
    "title": "Python",
    "content": "Learn More 파이썬은 인터프리터 방식의 고급 프로그래밍 언어로, 간결하고 가독성이 높은 문법을 가지며 다양한 분야에서 활용되고 있습니다. 파이썬은 강력한 데이터 분석 도구로 널리 사용되며, 다양한 라이브러리와 도구를 통해 데이터 분석 작업을 수행할 수 있습니다. | NumPy는 고성능 수치 연산을 위한 핵심 라이브러리로, 다차원 배열을 다루는 데 사용됩니다. | Pandas는 데이터 조작과 분석을 위한 핵심 도구로, 표 형식의 데이터를 다루는데 효과적입니다. | Scikit-learn은 머신 러닝 알고리즘의 구현과 평가를 위한 라이브러리로 많이 사용됩니다. | TensorFlow와 PyTorch는 딥러닝과 인공지능 분야에서 주로 사용되며, 신경망 모델의 개발과 학습에 특화되어 있습니다. | . 이러한 다양한 도구와 라이브러리의 조합으로 파이썬은 데이터 분석에 탁월한 선택지가 됩니다. Python is an interpreted high-level programming language that offers concise and readable syntax. Python is a powerful tool for data analysis and is widely used, offering various libraries and tools for performing data analysis tasks. | NumPy is a core library that provides high-performance numerical operations and is used for working with multi-dimensional arrays. | Pandas, a popular data analysis tool in Python, enables data manipulation, cleaning, transformation, and analysis, particularly with tabular data using its core data structure, the DataFrame. | In the field of machine learning and artificial intelligence, libraries like Scikit-learn, TensorFlow, and PyTorch are widely used. Scikit-learn implements and evaluates various machine learning algorithms. | TensorFlow and PyTorch are focused on developing and training neural network models. | . By leveraging this wide range of tools and libraries, Python stands out as an excellent choice for data analysis tasks. ",
    "url": "/docs/6.Python/Python_Info/",
    
    "relUrl": "/docs/6.Python/Python_Info/"
  },"158": {
    "doc": "02.Samsung(Phase1)",
    "title": "1. 요약",
    "content": ". | 프로젝트 명칭 : 삼성 전자 DS 메모리 부분 세일즈포스 구축(Phase 1) | 기간 : ‘22.01.04 ~ ‘22.05.06 | 장소 : 경기도 용인시, 테라타워 | 고객사 : 삼성전자 DS 메모리사업부 (제조사) | 업무 : 대시보드 3개 개발 (C360 관련 매출 대시보드) | 데이터 소스 : 오라클 | 배운점 및 느낀점 . | 대시보드 컨테이너 사용 | 커스텀 쿼리를 활용한 대시보드 개발 | Swapping 차트를 이용한 다이나믹 대시보드 개발 | 복잡한 계산식 및 숨기기, 참조선을 활용한 대시보드 개발 | 대시보드 퍼포먼스 향상 방법 | 세일즈포스 공부 필요성 | 대시보드 임베딩 매개변수 | . | . ",
    "url": "/docs/2.Projects/Projects/Samsung(P1)/#1-%EC%9A%94%EC%95%BD",
    
    "relUrl": "/docs/2.Projects/Projects/Samsung(P1)/#1-요약"
  },"159": {
    "doc": "02.Samsung(Phase1)",
    "title": "2. 회고록",
    "content": "23년의 시작과 동시에 나의 커리어 첫 프로젝트가 시작되었다. 첫 프로젝트의 장소는 삼성전자 DS였다. 삼성전자는 회사의 주요 고객사 중 하나였다. 해당 프로젝트는 21년 하반기부터 시작되었던 프로젝트였는데, 인원 교체를 해야할 필요가 있어서 내가 교체 인원으로 투입되게 되었다. 프로젝트 장소는 경기도 용인에 위치해있었다. 기흥과 화성에 삼성전자의 캠퍼스들이 있었고, 캠퍼스 근처에 협력사가 일을 할수 있는 건물이 있었다. 삼성은 8시부터 5시까지 근무였고, 근무지가 멀리 있는 만큼 통근버스를 타고 다녀야했다. 이에 오전 5시 반에 일어나서 준비해 통근버스를 타고 다니곤 했었다. 해당 프로젝트는 세일즈포스 구축 프로젝트로 태블로 대시보드도 동시에 개발하여 세일즈포스에 임베딩하여 사용하고 있었다. 10여명이 넘는 세일즈포스 직원들이 있었고, 태블로 개발자는 나를 포함한 동료직원 1명으로 총 2명이었다. 내가 담당하게 될 대시보드는 C360(Customer 360)의 Home 화면에 임베딩될 화면 1개와, Sales Summary, 그리고 Account의 Sales Summary 이렇게 총 3개였다. 고객의 요건을 충족시키기 위해서 커스텀 쿼리를 써야할 필요성이 있었다. 사실 그 당시에는 부끄럽지만 복잡한 쿼리문에 대해서 잘 알지 못했다. 직접 쿼리를 작성하지는 못했지만, 앞으로의 미래를 위해서 쿼리 공부를 열심히 해야할 것이라고 결심하기도 했었다. (자격증이 실력을 보증한다고 할 수는 없지만 꾸준히 공부한 끝에 프로젝트 종료 후 6월에 SQLD 자격증을 취득하기도 했었다.) . 실제 고객의 데이터를 가지고 요건 분석과 데이터, 대시보드 분석 및 개발을 하면서 역량이 많이 향상 되었다. 오토닉스 POC 당시에는 적용하지 못했던 컨테이너를 활용하였고, 매개변수 동작을 활용한 다수개의 Swapping 차트로 다이나믹 대시보드를 개발했다. 복잡한 계산식과 그동안 사용하지 못했던 숨기기 기능과 참조선을 활용한 대시보드로 고객 요건을 충족시키면서 개발에 있어서 새로운 방법을 배우기도 했다. 대시보드 개발도 중요한 업무였지만, 대시보드 퍼포먼스 향상도 중요한 업무이기도 했다. 태블로 서버에 있는 기능을 활용해 대시보드 퍼포먼스에 대해서 이상점(Outlier)을 발견하고, 개선시키기 위해 다방면으로 분석했다. 계약상 나는 롤아웃을 하게되어 실제로 대시보드를 개선하는 단계를 직접 경험하지는 못했지만, 개선시키기 위한 사전 단계에 대해서 경험을 하고 나온것 만으로도 값진 경험이었다. 세일즈포스 프로젝트였으므로 개발한 대시보드는 세일즈포스 컴포넌트에 임베딩되어 사용된다. 세일즈포스의 세계에 대해서도 잘 몰랐던 나였고, 해당 프로젝트를 하면서 세일즈포스를 조금이나마 체감할 수 있었다. 그 과정에서 세일즈포스의 환경과 임베딩 방식에 대해서 알 수 있었다. 이 프로젝트는 나의 첫 프로젝트로 참 좋았던 프로젝트라고 생각한다. 다양한 요건을 접하면서 대시보드 개발 능력 향상도 되었고, 세일즈포스 환경도 접해볼수 있었다. 세계에서 손꼽히는 기업 중 선진 기업인 삼성전자에서 프로젝트를 하는 것도 개인적으로 큰 동기부여가 되기도 했다. 시작이 좋았던 나의 첫 프로젝트였다. ",
    "url": "/docs/2.Projects/Projects/Samsung(P1)/#2-%ED%9A%8C%EA%B3%A0%EB%A1%9D",
    
    "relUrl": "/docs/2.Projects/Projects/Samsung(P1)/#2-회고록"
  },"160": {
    "doc": "02.Samsung(Phase1)",
    "title": "1. Summary",
    "content": ". | Name : Samsung Electronics DS Memory Division SFDC (Salesforce) Establishment | Period : ‘22.01.04 ~ ‘22.05.06 | Location : Terra Tower, Yongin | Customer: Samsung Electronics Memory Division (manufacturer) | Task : Developed 3 dashboards (sales dashboard related with C360) | Data Source : Oracle | What I learned and felt . | Need to study how to use dashboard containers | Date functions (Datetrunc, Dateparse, etc.) and how to utilize parameters | Development of Dynamic Dashboard Using Swapping Chart | Complex calculation formula and hiding, dashboard development using reference lines | How to improve dashboard performance | Need to study Salesforce | Dashboard embedding parameters | . | . ",
    "url": "/docs/2.Projects/Projects/Samsung(P1)/#1-summary",
    
    "relUrl": "/docs/2.Projects/Projects/Samsung(P1)/#1-summary"
  },"161": {
    "doc": "02.Samsung(Phase1)",
    "title": "2. Memoirs",
    "content": "At the beginning of 23 years, my first project in my career began. The site of the first project was Samsung Electronics DS. Samsung Electronics was one of the company’s major clients. This project was a project that started in the third quarter of 2021, but I was put in as a replacement because it needed to be replaced. The project site was located in Yongin, Gyeonggi-do. There were Samsung Electronics’ campuses in Giheung and Hwaseong, and there was a building near the campus where partners could work. Samsung worked from 8 a.m. to 5 p.m., and I had to take a commuter bus as the workplace was far away. Therefore, I used to get up at 5:30 a.m. to get ready and take a commuter bus. The project was a salesforce Establishment project, and tableau dashboards were also developed and embedded in the salesforce. There were more than 10 Salesforce employees, and the Tableau developer was one fellow employee, including me, with a total of two. The dashboards I will be in charge of were one screen to be embedded in the Home screen of the C360 (Customer 360), Sales Summary, and Account’s Sales Summary. There was a need to write a custom query to meet the customer’s requirements. In fact, I didn’t know much about complicated query statements at the time. I couldn’t write my own queries, but I also decided that I would have to study them hard for the future. (The certificate cannot be said to guarantee skills, but after studying steadily, I also obtained a SQLD certificate in June after the project was completed.) . Capabilities have improved a lot by analyzing requirements, data, dashboard analysis, and development with actual customer data. Containers that could not be applied at the time of Autonics POC was used, and a dynamic dashboard was developed with a number of swapping charts using parameter actions. I also learned new ways in development while meeting customer requirements with complex calculations, hidden functions that have not been used so far, and dashboards using reference lines. Dashboard development was also an important task, but dashboard performance improvement was also an important task. Using the functions in the tableau server, we discovered outliers in dashboard performance and analyzed them in various ways to improve them. I didn’t actually experience the steps of improving the dashboard in person due to my contractual rollout, but it was a valuable experience just to come out with the experience of the preliminary steps to improve. Since it was a Salesforce project, the developed dashboard is embedded in the Salesforce component. I didn’t know much about the Salesforce, and I was able to feel a little bit of Salesforce while working on the project. In the process, I was able to learn about the environment and embedding method of Salesforce. I think this project was very good as my first project. As I encountered various requirements, my dashboard development ability was improved, and I was able to experience the sales force environment. Working on a project at Samsung Electronics, one of the world’s leading companies, was also a great motivation. It was my first project with a good start. ",
    "url": "/docs/2.Projects/Projects/Samsung(P1)/#2-memoirs",
    
    "relUrl": "/docs/2.Projects/Projects/Samsung(P1)/#2-memoirs"
  },"162": {
    "doc": "02.Samsung(Phase1)",
    "title": "02.Samsung(Phase1)",
    "content": "작성일자 : 2023-07-03 ",
    "url": "/docs/2.Projects/Projects/Samsung(P1)/",
    
    "relUrl": "/docs/2.Projects/Projects/Samsung(P1)/"
  },"163": {
    "doc": "04.Samsung(Phase3)",
    "title": "1. 요약",
    "content": ". | 프로젝트 명칭 : 삼성 전자 DS 메모리 부분 세일즈포스 구축(Phase 3) | 기간 : ‘23.05.09 ~ 진행 중 | 장소 : 경기도 용인시, 테라타워 | 고객사 : 삼성전자 DS 메모리 사업부 (제조사) | 업무 . | 제품 및 샘플, 영업기회 및 매출, 시스템(Salesforce) 활용률 데이터 관련 대시보드 개발 (데이터 소스 : 오라클, 세일즈포스) | 프로젝트 내 Tableau 팀의 PL 역할 수행 | 기존 개발 대시보드 운영 및 VOC 대응 | . | 데이터 소스 : 오라클, 세일즈포스 | 배운점 및 느낀점 . | 삼성 전자 메모리 사업부 업무 프로세스 | 오라클 커스텀 쿼리를 활용한 테이블 변형 및 대시보드 개발 | PL 역할 수행 | . | . ",
    "url": "/docs/2.Projects/Projects/Samsung(P3)/#1-%EC%9A%94%EC%95%BD",
    
    "relUrl": "/docs/2.Projects/Projects/Samsung(P3)/#1-요약"
  },"164": {
    "doc": "04.Samsung(Phase3)",
    "title": "04.Samsung(Phase3)",
    "content": " ",
    "url": "/docs/2.Projects/Projects/Samsung(P3)/",
    
    "relUrl": "/docs/2.Projects/Projects/Samsung(P3)/"
  },"165": {
    "doc": "Tableau",
    "title": "Tableau",
    "content": "Learn More Tableau는 데이터 시각화와 BI(Business Intelligence) 툴로, 직관적이고 사용하기 쉬운 인터페이스를 제공합니다.사용자는 다양한 데이터 소스를 연결하고 시각화를 통해 데이터를 탐색하고 이해할 수 있습니다. Tableau는 데이터 기반의 의사 결정을 지원하여 조직 내에서 데이터를 효과적으로 활용할 수 있게 도와줍니다. Tableau is a data visualization and BI(Business Intelligence) tool that offers an intuitive and user-friendly interface. Users can connect to various data sources and explore and understand data through visualizations.Tableau supports data-driven decision-making, enabling organizations to effectively leverage data within their operations. ",
    "url": "/docs/4.Tableau/Tableau_Info/",
    
    "relUrl": "/docs/4.Tableau/Tableau_Info/"
  },"166": {
    "doc": "Theme",
    "title": "Theme",
    "content": "This is page for markdown . ",
    "url": "/docs/Theme/Theme/",
    
    "relUrl": "/docs/Theme/Theme/"
  },"167": {
    "doc": "Buttons",
    "title": "Buttons",
    "content": " ",
    "url": "/docs/ui-components/buttons/",
    
    "relUrl": "/docs/ui-components/buttons/"
  },"168": {
    "doc": "Buttons",
    "title": "Table of contents",
    "content": ". | Basic button styles . | Links that look like buttons | Button element | . | Using utilities with buttons . | Button size | Spacing between buttons | . | . ",
    "url": "/docs/ui-components/buttons/#table-of-contents",
    
    "relUrl": "/docs/ui-components/buttons/#table-of-contents"
  },"169": {
    "doc": "Buttons",
    "title": "Basic button styles",
    "content": "Links that look like buttons . Link button . Link button Link button Link button . Link button . [Link button](http://example.com/){: .btn } [Link button](http://example.com/){: .btn .btn-purple } [Link button](http://example.com/){: .btn .btn-blue } [Link button](http://example.com/){: .btn .btn-green } [Link button](http://example.com/){: .btn .btn-outline } . Button element . GitHub Flavored Markdown does not support the button element, so you’ll have to use inline HTML for this: . Button element &lt;button type=\"button\" name=\"button\" class=\"btn\"&gt;Button element&lt;/button&gt; . ",
    "url": "/docs/ui-components/buttons/#basic-button-styles",
    
    "relUrl": "/docs/ui-components/buttons/#basic-button-styles"
  },"170": {
    "doc": "Buttons",
    "title": "Using utilities with buttons",
    "content": "Button size . Wrap the button in a container that uses the font-size utility classes to scale buttons: . Big ass button . Tiny ass button . &lt;span class=\"fs-8\"&gt; [Link button](http://example.com/){: .btn } &lt;/span&gt; &lt;span class=\"fs-3\"&gt; [Tiny ass button](http://example.com/){: .btn } &lt;/span&gt; . Spacing between buttons . Use the margin utility classes to add spacing between two buttons in the same block. Button with space Button . Button with more space Button . [Button with space](http://example.com/){: .btn .btn-purple .mr-2 } [Button](http://example.com/){: .btn .btn-blue } [Button with more space](http://example.com/){: .btn .btn-green .mr-4 } [Button](http://example.com/){: .btn .btn-blue } . ",
    "url": "/docs/ui-components/buttons/#using-utilities-with-buttons",
    
    "relUrl": "/docs/ui-components/buttons/#using-utilities-with-buttons"
  },"171": {
    "doc": "Callouts",
    "title": "Callouts",
    "content": "New (v0.4.0) . Markdown does not include support for callouts. However, you can style text as a callout using a Markdown extension supported by kramdown: block IALs. Common kinds of callouts include highlight, important, new, note, and warning. These callout names are not pre-defined by the theme: you need to define your own names. When you have configured the color and (optional) title for a callout, you can apply it to a paragraph, or to a block quote with several paragraphs, as illustrated below.1 . An untitled callout . {: .highlight } A paragraph . A paragraph . A single paragraph callout . {: .note } A paragraph . A paragraph . {: .note-title } &gt; My note title &gt; &gt; A paragraph with a custom title callout . My note title . A paragraph with a custom title callout . A multi-paragraph callout . {: .important } &gt; A paragraph &gt; &gt; Another paragraph &gt; &gt; The last paragraph . A paragraph . Another paragraph . The last paragraph . {: .important-title } &gt; My important title &gt; &gt; A paragraph &gt; &gt; Another paragraph &gt; &gt; The last paragraph . My important title . A paragraph . Another paragraph . The last paragraph . An indented callout . &gt; {: .highlight } A paragraph . A paragraph . Indented multi-paragraph callouts . &gt; {: .new } &gt; &gt; A paragraph &gt; &gt; &gt; &gt; Another paragraph &gt; &gt; &gt; &gt; The last paragraph . A paragraph . Another paragraph . The last paragraph . Nested callouts . {: .important } &gt; {: .warning } &gt; A paragraph . A paragraph . Opaque background . {: .important } &gt; {: .opaque } &gt; &lt;div markdown=\"block\"&gt; &gt; {: .warning } &gt; A paragraph &gt; &lt;/div&gt; . A paragraph . | You can put the callout markup either before or after its content. &#8617; . | . ",
    "url": "/docs/ui-components/callouts/",
    
    "relUrl": "/docs/ui-components/callouts/"
  },"172": {
    "doc": "Code",
    "title": "Code",
    "content": " ",
    "url": "/docs/ui-components/code/",
    
    "relUrl": "/docs/ui-components/code/"
  },"173": {
    "doc": "Code",
    "title": "Table of contents",
    "content": ". | Inline code | Syntax highlighted code blocks | Code blocks with rendered examples | Mermaid diagram code blocks . | Using a local mermaid library | Using mermaid with AsciiDoc | . | Copy button | . ",
    "url": "/docs/ui-components/code/#table-of-contents",
    
    "relUrl": "/docs/ui-components/code/#table-of-contents"
  },"174": {
    "doc": "Code",
    "title": "Inline code",
    "content": "Code can be rendered inline by wrapping it in single back ticks. Lorem ipsum dolor sit amet, &lt;inline code snippet&gt; adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ",
    "url": "/docs/ui-components/code/#inline-code",
    
    "relUrl": "/docs/ui-components/code/#inline-code"
  },"175": {
    "doc": "Code",
    "title": "Heading with &lt;inline code snippet&gt; in it.",
    "content": "Lorem ipsum dolor sit amet, `&lt;inline code snippet&gt;` adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ## Heading with `&lt;inline code snippet&gt;` in it. ",
    "url": "/docs/ui-components/code/#heading-with-inline-code-snippet-in-it",
    
    "relUrl": "/docs/ui-components/code/#heading-with-inline-code-snippet-in-it"
  },"176": {
    "doc": "Code",
    "title": "Syntax highlighted code blocks",
    "content": "Use Jekyll’s built-in syntax highlighting with Rouge for code blocks by using three backticks, followed by the language name: . // Javascript code with syntax highlighting. var fun = function lang(l) { dateformat.i18n = require('./lang/' + l) return true; } . ```js // Javascript code with syntax highlighting. var fun = function lang(l) { dateformat.i18n = require('./lang/' + l) return true; } ``` . ",
    "url": "/docs/ui-components/code/#syntax-highlighted-code-blocks",
    
    "relUrl": "/docs/ui-components/code/#syntax-highlighted-code-blocks"
  },"177": {
    "doc": "Code",
    "title": "Code blocks with rendered examples",
    "content": "To demonstrate front end code, sometimes it’s useful to show a rendered example of that code. After including the styles from your project that you’ll need to show the rendering, you can use a &lt;div&gt; with the code-example class, followed by the code block syntax. If you want to render your output with Markdown instead of HTML, use the markdown=\"1\" attribute to tell Jekyll that the code you are rendering will be in Markdown format… This is about to get meta… . Link button . [Link button](http://example.com/){: .btn } . &lt;div class=\"code-example\" markdown=\"1\"&gt; [Link button](http://example.com/){: .btn } &lt;/div&gt; ```markdown [Link button](http://example.com/){: .btn } ``` . ",
    "url": "/docs/ui-components/code/#code-blocks-with-rendered-examples",
    
    "relUrl": "/docs/ui-components/code/#code-blocks-with-rendered-examples"
  },"178": {
    "doc": "Code",
    "title": "Mermaid diagram code blocks",
    "content": "New (v0.4.0) . Mermaid allows you to add diagrams and visualizations using Markdown code blocks. It is disabled by default. However, you can turn on support for mermaid by adding a mermaid key to your _config.yml. The minimum configuration requires a version key (matching a version in jsDelivr): . mermaid: # Version of mermaid library # Pick an available version from https://cdn.jsdelivr.net/npm/mermaid/ version: \"9.1.3\" . Additional configuration options are loaded through _includes/mermaid_config.js. By default, the contents of the file are the empty object: . // _includes/mermaid_config.js {} . This loads the default settings. The contents of this object should follow mermaid’s configuration API. For example, to override the theme, change _includes/mermaid_config.js to: . // _includes/mermaid_config.js { theme: \"forest\" } . Once mermaid is installed, it can be used in markdown files. The markdown for a simple flowchart example might look like the following: . ```mermaid graph TD; A--&gt;B; A--&gt;C; B--&gt;D; C--&gt;D; ``` . which renders: . graph TD; A--&gt;B; A--&gt;C; B--&gt;D; C--&gt;D; . Note: for demonstration purposes, we’ve enabled mermaid on this site. It is still disabled by default, and users need to opt-in to use it. Using a local mermaid library . To load a local version of mermaid, also use the path key to specify the location of the library; e.g. mermaid: version: \"10.1.0\" # for (v10+) path: \"/assets/js/mermaid.esm.min.mjs\" # for (&lt;v10): # path: \"/assets/js/mermaid.min.js\" # Note: copy both `mermaid.esm.min.mjs` (v10+) or `mermaid.min.js` (&lt;v10) and the associated # `.map` file from the specified version of `mermaid/dist` to `/assets/js/`. For mermaid versions &gt;=10, this file is imported directly as an ESM module (rather than as a plain &lt;script&gt; tag); users should use the mermaid.esm.min.mjs file. In contrast, for mermaid versions &lt;10, this file is loaded as a script tag; it should be a standalone CJS file (i.e. mermaid.min.js). Mermaid versions 10.0 - 10.1 (and possibly, future releases) still encode relative imports in mermaid.esm.min.mjs. Local users must copy all of the contents of the dist folder to the specified path (preserving the relative location of the files). Just the Docs is actively monitoring mermaid releases; an upstream fix is planned. Using mermaid with AsciiDoc . Users of AsciiDoc (e.g. via jekyll-asciidoc) may need additional configuration to use mermaid. By default, AsciiDoc generates HTML markup that mermaid cannot properly parse. The simplest way to resolve this is to use a passthrough block: . ++++ &lt;pre class=\"language-mermaid\"&gt; graph TD; A--&gt;B; A--&gt;C; B--&gt;D; C--&gt;D; &lt;/pre&gt; ++++ . Alternatively, community member @flyx has contributed a Ruby extension that does not require extra markup. The extension is available as a GitHub Gist. Thank you to @flyx! . The asciidoctor-diagram extension which also supports mermaid is not recommended for use with Just the Docs, since it requires separate configuration e.g. for theming, and is known to not be trivial to set up. ",
    "url": "/docs/ui-components/code/#mermaid-diagram-code-blocks",
    
    "relUrl": "/docs/ui-components/code/#mermaid-diagram-code-blocks"
  },"179": {
    "doc": "Code",
    "title": "Copy button",
    "content": "New (v0.4.0) . The copy button for code blocks can be enabled or disabled via the enable_copy_code_button key in _config.yml. By default, the value of this key is false; users need to opt-in. # For copy button on code enable_copy_code_button: true . Note that this feature requires JavaScript; if JavaScript is disabled in the browser, this feature will not work. In addition, this feature uses navigator.clipboard, which is only available in secure contexts (such as over HTTPS). If the site is viewed in an insecure context, the copy button will not work (relevant issue: #1202). ",
    "url": "/docs/ui-components/code/#copy-button",
    
    "relUrl": "/docs/ui-components/code/#copy-button"
  },"180": {
    "doc": "Color",
    "title": "Color Utilities",
    "content": " ",
    "url": "/docs/utilities/color/#color-utilities",
    
    "relUrl": "/docs/utilities/color/#color-utilities"
  },"181": {
    "doc": "Color",
    "title": "Table of contents",
    "content": ". | Light Greys | Dark Greys | Purples | Blues | Greens | Yellows | Reds | . All the colors used in Just the Docs have been systematized into a series of variables that have been extended to both font color and background color utility classes. ",
    "url": "/docs/utilities/color/#table-of-contents",
    
    "relUrl": "/docs/utilities/color/#table-of-contents"
  },"182": {
    "doc": "Color",
    "title": "Light Greys",
    "content": "| Color value | Font color utility | Background color utility | . | grey-lt-000 | .text-grey-lt-000 | .bg-grey-lt-000 | . | grey-lt-100 | .text-grey-lt-100 | .bg-grey-lt-100 | . | grey-lt-200 | .text-grey-lt-200 | .bg-grey-lt-200 | . | grey-lt-300 | .text-grey-lt-300 | .bg-grey-lt-300 | . ",
    "url": "/docs/utilities/color/#light-greys",
    
    "relUrl": "/docs/utilities/color/#light-greys"
  },"183": {
    "doc": "Color",
    "title": "Dark Greys",
    "content": "| Color value | Font color utility | Background color utility | . | grey-dk-000 | .text-grey-dk-000 | .bg-grey-dk-000 | . | grey-dk-100 | .text-grey-dk-100 | .bg-grey-dk-100 | . | grey-dk-200 | .text-grey-dk-200 | .bg-grey-dk-200 | . | grey-dk-250 | .text-grey-dk-250 | .bg-grey-dk-250 | . | grey-dk-300 | .text-grey-dk-300 | .bg-grey-dk-300 | . ",
    "url": "/docs/utilities/color/#dark-greys",
    
    "relUrl": "/docs/utilities/color/#dark-greys"
  },"184": {
    "doc": "Color",
    "title": "Purples",
    "content": "| Color value | Font color utility | Background color utility | . | purple-000 | .text-purple-000 | .bg-purple-000 | . | purple-100 | .text-purple-100 | .bg-purple-100 | . | purple-200 | .text-purple-200 | .bg-purple-200 | . | purple-300 | .text-purple-300 | .bg-purple-300 | . ",
    "url": "/docs/utilities/color/#purples",
    
    "relUrl": "/docs/utilities/color/#purples"
  },"185": {
    "doc": "Color",
    "title": "Blues",
    "content": "| Color value | Font color utility | Background color utility | . | blue-000 | .text-blue-000 | .bg-blue-000 | . | blue-100 | .text-blue-100 | .bg-blue-100 | . | blue-200 | .text-blue-200 | .bg-blue-200 | . | blue-300 | .text-blue-300 | .bg-blue-300 | . ",
    "url": "/docs/utilities/color/#blues",
    
    "relUrl": "/docs/utilities/color/#blues"
  },"186": {
    "doc": "Color",
    "title": "Greens",
    "content": "| Color value | Font color utility | Background color utility | . | green-000 | .text-green-000 | .bg-green-000 | . | green-100 | .text-green-100 | .bg-green-100 | . | green-200 | .text-green-200 | .bg-green-200 | . | green-300 | .text-green-300 | .bg-green-300 | . ",
    "url": "/docs/utilities/color/#greens",
    
    "relUrl": "/docs/utilities/color/#greens"
  },"187": {
    "doc": "Color",
    "title": "Yellows",
    "content": "| Color value | Font color utility | Background color utility | . | yellow-000 | .text-yellow-000 | .bg-yellow-000 | . | yellow-100 | .text-yellow-100 | .bg-yellow-100 | . | yellow-200 | .text-yellow-200 | .bg-yellow-200 | . | yellow-300 | .text-yellow-300 | .bg-yellow-300 | . ",
    "url": "/docs/utilities/color/#yellows",
    
    "relUrl": "/docs/utilities/color/#yellows"
  },"188": {
    "doc": "Color",
    "title": "Reds",
    "content": "| Color value | Font color utility | Background color utility | . | red-000 | .text-red-000 | .bg-red-000 | . | red-100 | .text-red-100 | .bg-red-100 | . | red-200 | .text-red-200 | .bg-red-200 | . | red-300 | .text-red-300 | .bg-red-300 | . ",
    "url": "/docs/utilities/color/#reds",
    
    "relUrl": "/docs/utilities/color/#reds"
  },"189": {
    "doc": "Color",
    "title": "Color",
    "content": " ",
    "url": "/docs/utilities/color/",
    
    "relUrl": "/docs/utilities/color/"
  },"190": {
    "doc": "Configuration",
    "title": "Configuration",
    "content": "Just the Docs has some specific configuration parameters that can be defined in your Jekyll site’s _config.yml file. ",
    "url": "/docs/configuration/",
    
    "relUrl": "/docs/configuration/"
  },"191": {
    "doc": "Configuration",
    "title": "Table of contents",
    "content": ". | Site logo | Site favicon | Search | Mermaid Diagrams | Aux links | Heading anchor links | External navigation links | Footer content | Color scheme | Callouts | Google Analytics | Document collections | . View this site’s _config.yml file as an example. ",
    "url": "/docs/configuration/#table-of-contents",
    
    "relUrl": "/docs/configuration/#table-of-contents"
  },"192": {
    "doc": "Configuration",
    "title": "Site logo",
    "content": "# Set a path/url to a logo that will be displayed instead of the title logo: \"/assets/images/just-the-docs.png\" . ",
    "url": "/docs/configuration/#site-logo",
    
    "relUrl": "/docs/configuration/#site-logo"
  },"193": {
    "doc": "Configuration",
    "title": "Site favicon",
    "content": "# Set a path/url to a favicon that will be displayed by the browser favicon_ico: \"/assets/images/favicon.ico\" . If the path to your favicon is /favicon.ico, you can leave favicon_ico unset. ",
    "url": "/docs/configuration/#site-favicon",
    
    "relUrl": "/docs/configuration/#site-favicon"
  },"194": {
    "doc": "Configuration",
    "title": "Search",
    "content": "# Enable or disable the site search # Supports true (default) or false search_enabled: true search: # Split pages into sections that can be searched individually # Supports 1 - 6, default: 2 heading_level: 2 # Maximum amount of previews per search result # Default: 3 previews: 3 # Maximum amount of words to display before a matched word in the preview # Default: 5 preview_words_before: 5 # Maximum amount of words to display after a matched word in the preview # Default: 10 preview_words_after: 10 # Set the search token separator # Default: /[\\s\\-/]+/ # Example: enable support for hyphenated search words tokenizer_separator: /[\\s/]+/ # Display the relative url in search results # Supports true (default) or false rel_url: true # Enable or disable the search button that appears in the bottom right corner of every page # Supports true or false (default) button: false . ",
    "url": "/docs/configuration/#search",
    
    "relUrl": "/docs/configuration/#search"
  },"195": {
    "doc": "Configuration",
    "title": "Mermaid Diagrams",
    "content": "New (v0.4.0) . The minimum configuration requires the key for version (from jsDelivr) in _config.yml: . mermaid: # Version of mermaid library # Pick an available version from https://cdn.jsdelivr.net/npm/mermaid/ version: \"9.1.3\" . Provide a path instead of a version key to load the mermaid library from a local file. See the Code documentation for more configuration options and information. ",
    "url": "/docs/configuration/#mermaid-diagrams",
    
    "relUrl": "/docs/configuration/#mermaid-diagrams"
  },"196": {
    "doc": "Configuration",
    "title": "Aux links",
    "content": "# Aux links for the upper right navigation aux_links: \"Just the Docs on GitHub\": - \"//github.com/just-the-docs/just-the-docs\" # Makes Aux links open in a new tab. Default is false aux_links_new_tab: false . ",
    "url": "/docs/configuration/#aux-links",
    
    "relUrl": "/docs/configuration/#aux-links"
  },"197": {
    "doc": "Configuration",
    "title": "Heading anchor links",
    "content": "# Heading anchor links appear on hover over h1-h6 tags in page content # allowing users to deep link to a particular heading on a page. # # Supports true (default) or false heading_anchors: true . ",
    "url": "/docs/configuration/#heading-anchor-links",
    
    "relUrl": "/docs/configuration/#heading-anchor-links"
  },"198": {
    "doc": "Configuration",
    "title": "External navigation links",
    "content": "New (v0.4.0) . External links can be added to the navigation through the nav_external_links option. See Navigation Structure for more details. ",
    "url": "/docs/configuration/#external-navigation-links",
    
    "relUrl": "/docs/configuration/#external-navigation-links"
  },"199": {
    "doc": "Configuration",
    "title": "Footer content",
    "content": "# Footer content # appears at the bottom of every page's main content # Note: The footer_content option is deprecated and will be removed in a future major release. Please use `_includes/footer_custom.html` for more robust markup / liquid-based content. footer_content: \"Copyright &amp;copy; 2017-2020 Patrick Marsceill. Distributed by an &lt;a href=\\\"https://github.com/just-the-docs/just-the-docs/tree/main/LICENSE.txt\\\"&gt;MIT license.&lt;/a&gt;\" # Footer last edited timestamp last_edit_timestamp: true # show or hide edit time - page must have `last_modified_date` defined in the frontmatter last_edit_time_format: \"%b %e %Y at %I:%M %p\" # uses ruby's time format: https://ruby-doc.org/stdlib-2.7.0/libdoc/time/rdoc/Time.html # Footer \"Edit this page on GitHub\" link text gh_edit_link: true # show or hide edit this page link gh_edit_link_text: \"Edit this page on GitHub.\" gh_edit_repository: \"https://github.com/just-the-docs/just-the-docs\" # the github URL for your repo gh_edit_branch: \"main\" # the branch that your docs is served from # gh_edit_source: docs # the source that your files originate from gh_edit_view_mode: \"tree\" # \"tree\" or \"edit\" if you want the user to jump into the editor immediately . note: footer_content is deprecated, but still supported. For a better experience we have moved this into an include called _includes/footer_custom.html which will allow for robust markup / liquid-based content. | the “page last modified” data will only display if a page has a key called last_modified_date, formatted in some readable date format | last_edit_time_format uses Ruby’s DateTime formatter; see examples and more information at this link. | gh_edit_repository is the URL of the project’s GitHub repository | gh_edit_branch is the branch that the docs site is served from; defaults to main | gh_edit_source is the source directory that your project files are stored in (should be the same as site.source) | gh_edit_view_mode is \"tree\" by default, which brings the user to the github page; switch to \"edit\" to bring the user directly into editing mode | . ",
    "url": "/docs/configuration/#footer-content",
    
    "relUrl": "/docs/configuration/#footer-content"
  },"200": {
    "doc": "Configuration",
    "title": "Color scheme",
    "content": "# Color scheme supports \"light\" (default) and \"dark\" color_scheme: dark . Preview dark color scheme . See Customization for more information. ",
    "url": "/docs/configuration/#color-scheme",
    
    "relUrl": "/docs/configuration/#color-scheme"
  },"201": {
    "doc": "Configuration",
    "title": "Callouts",
    "content": "New (v0.4.0) . To use this feature, you need to configure a color and (optionally) title for each kind of callout you want to use, e.g.: . callouts: warning: title: Warning color: red . This uses the color $red-000 for the background of the callout, and $red-300 for the title and box decoration.1 You can then style a paragraph as a warning callout like this: . {: .warning } A paragraph... The colors grey-lt, grey-dk, purple, blue, green, yellow, and red are predefined; to use a custom color, you need to define its 000 and 300 levels in your SCSS files. For example, to use pink, add the following to your _sass/custom/setup.scss file: . $pink-000: #f77ef1; $pink-100: #f967f1; $pink-200: #e94ee1; $pink-300: #dd2cd4; . You can override the default opacity of the background for a particular callout, e.g.: . callouts: custom: color: pink opacity: 0.3 . You can change the default opacity (0.2) for all callouts, e.g.: . callouts_opacity: 0.3 . You can also adjust the overall level of callouts. The value of callouts_level is either quiet or loud; loud increases the saturation and lightness of the backgrounds. The default level is quiet when using the light or custom color schemes, and loud when using the dark color scheme. See Callouts for more information. ",
    "url": "/docs/configuration/#callouts",
    
    "relUrl": "/docs/configuration/#callouts"
  },"202": {
    "doc": "Configuration",
    "title": "Google Analytics",
    "content": "Google Analytics 4 will replace Universal Analytics. On July 1, 2023, standard Universal Analytics properties will stop processing new hits. The earlier you migrate, the more historical data and insights you will have in Google Analytics 4. Universal Analytics (UA) and Google Analytics 4 (GA4) properties are supported. # Google Analytics Tracking (optional) # Supports a CSV of tracking ID strings (eg. \"UA-1234567-89,G-1AB234CDE5\") ga_tracking: UA-2709176-10 ga_tracking_anonymize_ip: true # Use GDPR compliant Google Analytics settings (true/nil by default) . Multiple IDs . New (v0.4.0) . This theme supports multiple comma-separated tracking IDs. This helps seamlessly transition UA properties to GA4 properties by tracking both for a while. ga_tracking: \"UA-1234567-89,G-1AB234CDE5\" . ",
    "url": "/docs/configuration/#google-analytics",
    
    "relUrl": "/docs/configuration/#google-analytics"
  },"203": {
    "doc": "Configuration",
    "title": "Document collections",
    "content": "By default, the navigation and search include normal pages. You can also use Jekyll collections which group documents semantically together. Collection folders always start with an underscore (_), e.g. _tests. You won’t see your collections if you omit the prefix. For example, put all your test files in the _tests folder and create the tests collection: . # Define Jekyll collections collections: # Define a collection named \"tests\", its documents reside in the \"_tests\" directory tests: permalink: \"/:collection/:path/\" output: true just_the_docs: # Define which collections are used in just-the-docs collections: # Reference the \"tests\" collection tests: # Give the collection a name name: Tests # Exclude the collection from the navigation # Supports true or false (default) # nav_exclude: true # Fold the collection in the navigation # Supports true or false (default) # nav_fold: true # note: this option is new in v0.4 # Exclude the collection from the search # Supports true or false (default) # search_exclude: true . The navigation for all your normal pages (if any) is displayed before those in collections. You can reference multiple collections. This creates categories in the navigation with the configured names. collections: tests: permalink: \"/:collection/:path/\" output: true tutorials: permalink: \"/:collection/:path/\" output: true just_the_docs: collections: tests: name: Tests tutorials: name: Tutorials . When all your pages are in a single collection, its name is not displayed. The navigation for each collection is a separate name space for page titles: a page in one collection cannot be a child of a page in a different collection, or of a normal page. | If you use the dark color scheme, this callout uses $red-300 for the background, and $red-000 for the title. &#8617; . | . ",
    "url": "/docs/configuration/#document-collections",
    
    "relUrl": "/docs/configuration/#document-collections"
  },"204": {
    "doc": "Customization",
    "title": "Customization",
    "content": " ",
    "url": "/docs/customization/",
    
    "relUrl": "/docs/customization/"
  },"205": {
    "doc": "Customization",
    "title": "Table of contents",
    "content": ". | Color schemes | Custom schemes . | Define a custom scheme | Use a custom scheme | Switchable custom scheme | . | Override and define new variables | Override and completely custom styles | Override includes . | Custom TOC Heading | Custom Footer | Custom Head | Custom Header | Custom Nav Footer | Custom Search Placeholder | . | Custom layouts and includes . | Default layout and includable components | Alternative layouts and example (minimal) | Default layout and inheritance chain | Overridden default Jekyll layouts | . | . ",
    "url": "/docs/customization/#table-of-contents",
    
    "relUrl": "/docs/customization/#table-of-contents"
  },"206": {
    "doc": "Customization",
    "title": "Color schemes",
    "content": "Just the Docs supports two color schemes: light (default), and dark. To enable a color scheme, set the color_scheme parameter in your site’s _config.yml file: . Example . # Color scheme supports \"light\" (default) and \"dark\" color_scheme: dark . Preview dark color scheme . deprecated: legacy_light . New (v0.4.2) . In Just the Docs version 0.4.2, we changed the default syntax highlighting theme for the light color scheme to have higher contrast. Users who are want to use the old highlighting need to explicitly opt-in with the deprecated legacy_light color scheme. In a future major release of Just the Docs, we will remove this color scheme. ",
    "url": "/docs/customization/#color-schemes",
    
    "relUrl": "/docs/customization/#color-schemes"
  },"207": {
    "doc": "Customization",
    "title": "Custom schemes",
    "content": "Define a custom scheme . You can add custom schemes. If you want to add a scheme named foo (can be any name) just add a file _sass/color_schemes/foo.scss (replace foo by your scheme name) where you override theme variables to change colors, fonts, spacing, etc. Since the default color scheme is light, your custom scheme is implicitly based on the variable settings used by the light scheme. If you want your custom scheme to be based on the dark scheme, you need to start your file with the following line: . @import \"./color_schemes/dark\"; . You can define custom schemes based on other custom schemes in the same way. Available variables are listed in the _variables.scss file. For example, to change the link color from the purple default to blue, include the following inside your scheme file: . Example . $link-color: $blue-000; . Keep in mind that changing a variable will not automatically change the value of other variables that depend on it. For example, the default link color ($link-color) is set to $purple-000. However, redefining $purple-000 in a custom color scheme will not automatically change $link-color to match it. Instead, each variable that relies on previously-cascaded values must be manually reimplemented by copying the dependent rules from _variables.scss — in this case, rewriting $link-color: $purple-000;. Note: Editing the variables directly in _sass/support/variables.scss is not recommended and can cause other dependencies to fail. Please use scheme files. Use a custom scheme . To use the custom color scheme, only set the color_scheme parameter in your site’s _config.yml file: . color_scheme: foo . Switchable custom scheme . If you want to be able to change the scheme dynamically, for example via javascript, just add a file assets/css/just-the-docs-foo.scss (replace foo by your scheme name) with the following content: . --- --- {% include css/just-the-docs.scss.liquid color_scheme=\"foo\" %} . This allows you to switch the scheme via the following javascript. jtd.setTheme(\"foo\") . ",
    "url": "/docs/customization/#custom-schemes",
    
    "relUrl": "/docs/customization/#custom-schemes"
  },"208": {
    "doc": "Customization",
    "title": "Override and define new variables",
    "content": "New (v0.4.0) . To define new SCSS variables or functions, place SCSS code in _sass/custom/setup.scss. This should not be used for defining custom styles (see the next section) or overriding color scheme variables (in this case, you should create a new color scheme). This is most commonly-used to define custom callout colors. For example, . // _sass/custom/setup.scss $pink-000: #f77ef1; $pink-100: #f967f1; $pink-200: #e94ee1; $pink-300: #dd2cd4; . In particular: this file is imported after the theme’s variables and functions are defined, but before any CSS classes are emitted. ",
    "url": "/docs/customization/#override-and-define-new-variables",
    
    "relUrl": "/docs/customization/#override-and-define-new-variables"
  },"209": {
    "doc": "Customization",
    "title": "Override and completely custom styles",
    "content": "For styles that aren’t defined as SCSS variables, you may want to modify specific CSS classes. Additionally, you may want to add completely custom CSS specific to your content. To do this, put your styles in the file _sass/custom/custom.scss. This will allow for all overrides to be kept in a single file, and for any upstream changes to still be applied. For example, if you’d like to add your own styles for printing a page, you could add the following styles. Example . // Print-only styles. @media print { .side-bar, .page-header { display: none; } .main-content { max-width: auto; margin: 1em; } } . ",
    "url": "/docs/customization/#override-and-completely-custom-styles",
    
    "relUrl": "/docs/customization/#override-and-completely-custom-styles"
  },"210": {
    "doc": "Customization",
    "title": "Override includes",
    "content": "You can customize the theme by overriding any of the custom Jekyll includes files that it provides. To do this, create an _includes directory and make a copy of the specific file you wish to modify. The content in this file will override the theme defaults. You can learn more about this process in the Jekyll docs for Overriding theme defaults. Just the Docs provides the following custom includes files: . Custom TOC Heading . New (v0.4.0) . _includes/toc_heading_custom.html . If the page has any child pages, and has_toc is not set to false, this content appears as a heading above the auto-generating list of child pages after the page’s content. Example . To change the default TOC heading to “Contents”, create _includes/toc_heading_custom.html and add: . &lt;h2 class=\"text-delta\"&gt;Contents&lt;/h2&gt; . The (optional) text-delta class makes the heading appear as Contents . Custom Footer . _includes/footer_custom.html . This content appears at the bottom of every page’s main content. More info for this include can be found in the Configuration - Footer content. Custom Head . _includes/head_custom.html . Any HTML added to this file will be inserted before the closing &lt;head&gt; tag. This might include additional &lt;meta&gt;, &lt;link&gt;, or &lt;script&gt; tags. The &lt;head&gt; tag automatically includes a link to an existing favicon if you set favicon_ico to the corresponding path in your configuration, or if the path to the favicon is /favicon.ico. Custom Header . _includes/header_custom.html . Content added to this file appears at the top of every page’s main content between the site search and auxiliary links if they are enabled. If search_enabled were set to false and aux_links were removed, the content of header_custom.html would occupy the space at the top of every page. Custom Nav Footer . New (v0.4.0) . _includes/nav_footer_custom.html . Any content added to this file will appear at the bottom left of the page below the site’s navigation. By default an attribution to Just the Docs is displayed which reads, This site uses Just the Docs, a documentation theme for Jekyll.. Custom Search Placeholder . New (v0.4.0) . _includes/search_placeholder_custom.html . Content added to this file will replace the default placeholder text in the search bar (and its aria-label), after stripping HTML and leading/trailing whitespace. By default, the content of the include is: . Search {{site.title}} . Override this file to render a custom placeholder. One common use-case is internationalization; for example, . Chercher notre site . would make the placeholder text “Chercher notre site”. Liquid code (including Jekyll variables) is also supported. ",
    "url": "/docs/customization/#override-includes",
    
    "relUrl": "/docs/customization/#override-includes"
  },"211": {
    "doc": "Customization",
    "title": "Custom layouts and includes",
    "content": "New (v0.4.0) . Advanced . Just the Docs uses Jekyll’s powerful layouts and includes features to generate and compose various elements of the site. Jekyll users and developers can extend or replace existing layouts and includes to customize the entire site layout. Default layout and includable components . The default layout is inherited by most of the “out-of-the-box” pages provided by Just the Docs. It composes various re-usable components of the site, including the sidebar, navbar, footer, breadcrumbs, and various imports. Most users who create new pages or layouts will inherit from default. Here is a simplified code example of what it looks like: . &lt;!-- a simplified version of _layouts/default.html --&gt; &lt;html&gt; {% include head.html %} &lt;body&gt; {% include icons/icons.html %} {% include components/sidebar.html %} {% include components/header.html %} {% include components/breadcrumbs.html %} {% if site.heading_anchors != false %} {% include vendor/anchor_headings.html html=content ... %} {% else %} {{ content }} {% endif %} {% if page.has_children == true and page.has_toc != false %} {% include components/children_nav.html %} {% endif %} {% include components/footer.html %} {% if site.search_enabled != false %} {% include components/search_footer.html %} {% endif %} {% if site.mermaid %} {% include components/mermaid.html %} {% endif %} &lt;/body&gt; &lt;/html&gt; . Component summary . Defining a new _includes with the same name as any of these components will significantly change the existing layout. Please proceed with caution when adjusting them. To briefly summarize each component: . | _includes/head.html is the entire &lt;head&gt; tag for the site; this imports stylesheets, various JavaScript files (ex: analytics, mermaid, search, and Just the Docs code), and SEO / meta information. | _includes/icons/icons.html imports all SVG icons that are used throughout the site. Some, such as those relating to search or code snippet copying, are only loaded when those features are enabled. | _includes/components/sidebar.html renders the sidebar, containing the site header, navigation links, external links, collections, and nav footer. | _includes/components/header.html renders the navigation header, containing the search bar, custom header, and aux links | _includes/components/breadcrumbs.html renders the breadcrumbs feature | vendor/anchor_headings.html is a local copy of Vladimir Jimenez’s jekyll-anchor-headings snippet | _includes/components/children_nav.html renders a list of nav links to child pages on parent pages | _includes/components/footer.html renders the bottom-of-page footer | _includes/components/search_footer.html renders DOM elements that are necessary for the search bar to work | _includes/components/mermaid.html initializes mermaid if the feature is enabled | . Each of these components can be overridden individually using the same process described in the Override includes section. In particular, the granularity of components should allow users to replace certain components (such as the sidebar) without having to adjust the rest of the code. Future versions may subdivide components further; we guarantee that we will only place them in folders (ex components/, icons/, or a new js/) to avoid top-level namespace collisions. Alternative layouts and example (minimal) . Users can develop custom layouts that compose, omit, or add components differently. We provide one first-class example titled minimal, inspired by Kevin Lin’s work in just-the-class. This minimal layout does not render the sidebar, header, or search. To see an example, visit the minimal layout test page. Here is a simplified code example of what it looks like: . &lt;!-- a simplified version of _layouts/minimal.html --&gt; &lt;html&gt; {% include head.html %} &lt;body&gt; {% include icons/icons.html %} {% comment %} Bandaid fix for breadcrumbs here! {% endcomment %} {% include components/breadcrumbs.html %} {% if site.heading_anchors != false %} {% include vendor/anchor_headings.html html=content ... %} {% else %} {{ content }} {% endif %} {% if page.has_children == true and page.has_toc != false %} {% include components/children_nav.html %} {% endif %} {% include components/footer.html %} {% if site.mermaid %} {% include components/mermaid.html %} {% endif %} &lt;/body&gt; &lt;/html&gt; . This layout is packaged in Just the Docs. Users can indicate this alternative layout in page front matter: . --- layout: minimal title: Minimal layout test --- . Similarly, users and developers can create other alternative layouts using Just the Docs’ reusable includable components. Default layout and inheritance chain . Under the hood, . | default and minimal inherit from the table_wrappers layout, which wraps all HTML &lt;table&gt; tags with a div .table-wrapper | table_wrappers inherits from vendor/compress, which is a local copy of Anatol Broder’s jekyll-compress-html Jekyll plugin | . Note that as of now, minimal and default have no inheritance relationship. Overridden default Jekyll layouts . By default, Jekyll (and its default theme minima) provide the about, home, page, and post layouts. In Just the Docs, we override all of these layouts with the default layout. Each of those layouts is simply: . --- layout: default --- {{ content }} . ",
    "url": "/docs/customization/#custom-layouts-and-includes",
    
    "relUrl": "/docs/customization/#custom-layouts-and-includes"
  },"212": {
    "doc": "Default layout child page",
    "title": "Default layout child page",
    "content": "This is a child page that uses the same minimal layout as its parent page. ",
    "url": "/docs/layout/minimal/default-child/",
    
    "relUrl": "/docs/layout/minimal/default-child/"
  },"213": {
    "doc": "Markdown kitchen sink",
    "title": "Header 1",
    "content": "This is a normal paragraph following a header. GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere. ",
    "url": "/docs/index-test/#header-1",
    
    "relUrl": "/docs/index-test/#header-1"
  },"214": {
    "doc": "Markdown kitchen sink",
    "title": "Header 2",
    "content": "This is a blockquote following a header. When something is important enough, you do it even if the odds are not in your favor. Header 3 . // Javascript code with syntax highlighting. var fun = function lang(l) { dateformat.i18n = require('./lang/' + l) return true; } . # Ruby code with syntax highlighting GitHubPages::Dependencies.gems.each do |gem, version| s.add_dependency(gem, \"= #{version}\") end . Header 4 with code not transformed . | This is an unordered list following a header. | This is an unordered list following a header. | This is an unordered list following a header. | . Header 5 . | This is an ordered list following a header. | This is an ordered list following a header. | This is an ordered list following a header. | . Header 6 . This is a very long link which wraps and therefore doesn’t overflow even when it comes at the beginning of the line. | This is a very long link which wraps and therefore doesn’t overflow the line when used first in an item in a list. | . | head1 | head two | three | . | ok | good swedish fish | nice | . | out of stock | good and plenty | nice | . | ok | good oreos | hmm | . | ok | good zoute drop | yumm | . There’s a horizontal rule below this. Here is an unordered list: . | Item foo | Item bar | Item baz | Item zip | . And an ordered list: . | Item one | Item two | Item three | Item four | . And an ordered list, continued: . | Item one | Item two | . Some text . | Item three | Item four | . And an ordered list starting from 42: . | Item 42 | Item 43 | Item 44 | . And a nested list: . | level 1 item . | level 2 item | level 2 item . | level 3 item | level 3 item | . | . | level 1 item . | level 2 item | level 2 item | level 2 item | . | level 1 item . | level 2 item | level 2 item | . | level 1 item | . Nesting an ol in ul in an ol . | level 1 item (ul) . | level 2 item (ol) | level 2 item (ol) . | level 3 item (ul) | level 3 item (ul) | . | . | level 1 item (ul) . | level 2 item (ol) | level 2 item (ol) . | level 3 item (ul) | level 3 item (ul) | . | level 4 item (ol) | level 4 item (ol) . | level 3 item (ul) | level 3 item (ul) | . | . | level 1 item (ul) | . And a task list . | Hello, this is a TODO item | Hello, this is another TODO item | Goodbye, this item is done | . Nesting task lists . | level 1 item (task) . | level 2 item (task) | level 2 item (task) | . | level 1 item (task) | level 1 item (task) | . Nesting a ul in a task list . | level 1 item (task) . | level 2 item (ul) | level 2 item (ul) | . | level 1 item (task) | level 1 item (task) | . Nesting a task list in a ul . | level 1 item (ul) . | level 2 item (task) | level 2 item (task) | . | level 1 item (ul) | level 1 item (ul) | . Small image . Large image . “Wroclaw University Library digitizing rare archival texts” by j_cadmus is marked with CC BY 2.0. Labels . I’m a label . blue . green . purple . yellow . red . bold . italic . bold + italic . Definition lists can be used with HTML syntax. Name Godzilla Born 1952 Birthplace Japan Color Green Multiple description terms and values . Term Brief description of Term Longer Term Longer description of Term, possibly more than one line Term First description of Term, possibly more than one line Second description of Term, possibly more than one line . Term1 Term2 Single description of Term1 and Term2, possibly more than one line Term1 Term2 First description of Term1 and Term2, possibly more than one line Second description of Term1 and Term2, possibly more than one line . More code . def dump_args(func): \"This decorator dumps out the arguments passed to a function before calling it\" argnames = func.func_code.co_varnames[:func.func_code.co_argcount] fname = func.func_name def echo_func(*args,**kwargs): print fname, \":\", ', '.join( '%s=%r' % entry for entry in zip(argnames,args) + kwargs.items()) return func(*args, **kwargs) return echo_func @dump_args def f1(a,b,c): print a + b + c f1(1, 2, 3) def precondition(precondition, use_conditions=DEFAULT_ON): return conditions(precondition, None, use_conditions) def postcondition(postcondition, use_conditions=DEFAULT_ON): return conditions(None, postcondition, use_conditions) class conditions(object): __slots__ = ('__precondition', '__postcondition') def __init__(self, pre, post, use_conditions=DEFAULT_ON): if not use_conditions: pre, post = None, None self.__precondition = pre self.__postcondition = post . Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. Mermaid Diagrams . The following code is displayed as a diagram only when a mermaid key supplied in _config.yml. graph TD; A--&gt;B; A--&gt;C; B--&gt;D; C--&gt;D; . The final element. ",
    "url": "/docs/index-test/#header-2",
    
    "relUrl": "/docs/index-test/#header-2"
  },"215": {
    "doc": "Markdown kitchen sink",
    "title": "Markdown kitchen sink",
    "content": "Preview dark color scheme . Text can be bold, italic, or strikethrough. Link to another page. There should be whitespace between paragraphs. There should be whitespace between paragraphs. We recommend including a README, or a file with information about your project. ",
    "url": "/docs/index-test/",
    
    "relUrl": "/docs/index-test/"
  },"216": {
    "doc": "JayJay",
    "title": "JAYJAY, just don’t quit!",
    "content": " ",
    "url": "/#jayjay-just-dont-quit",
    
    "relUrl": "/#jayjay-just-dont-quit"
  },"217": {
    "doc": "JayJay",
    "title": "임종준 (LIM JONG JUN)",
    "content": "BI Consultant | Data Analyst . This space is my archive for thinking, studying, and working results . #Data #Tableau #BI #SQL #Statistics #Nike #Football #Sports . ",
    "url": "/#%EC%9E%84%EC%A2%85%EC%A4%80-lim-jong-jun",
    
    "relUrl": "/#임종준-lim-jong-jun"
  },"218": {
    "doc": "JayJay",
    "title": "JayJay",
    "content": " ",
    "url": "/",
    
    "relUrl": "/"
  },"219": {
    "doc": "Labels",
    "title": "Labels",
    "content": "Use labels as a way to add an additional mark to a section of your docs. Labels come in a few colors. By default, labels will be blue. Default label . Blue label . Stable . New release . Coming soon . Deprecated . Default label {: .label } Blue label {: .label .label-blue } Stable {: .label .label-green } New release {: .label .label-purple } Coming soon {: .label .label-yellow } Deprecated {: .label .label-red } . ",
    "url": "/docs/ui-components/labels/",
    
    "relUrl": "/docs/ui-components/labels/"
  },"220": {
    "doc": "Layout",
    "title": "Layout Utilities",
    "content": " ",
    "url": "/docs/utilities/layout/#layout-utilities",
    
    "relUrl": "/docs/utilities/layout/#layout-utilities"
  },"221": {
    "doc": "Layout",
    "title": "Table of contents",
    "content": ". | Spacing | Horizontal Alignment | Vertical Alignment | Display | . ",
    "url": "/docs/utilities/layout/#table-of-contents",
    
    "relUrl": "/docs/utilities/layout/#table-of-contents"
  },"222": {
    "doc": "Layout",
    "title": "Spacing",
    "content": "These spacers are available to use for margins and padding with responsive utility classes. Combine these prefixes with a screen size and spacing scale to use them responsively. | Classname prefix | What it does | . | .m- | margin | . | .mx- | margin-left, margin-right | . | .my- | margin top, margin bottom | . | .mt- | margin-top | . | .mr- | margin-right | . | .mb- | margin-bottom | . | .ml- | margin-left | . | Classname prefix | What it does | . | .p- | padding | . | .px- | padding-left, padding-right | . | .py- | padding top, padding bottom | . | .pt- | padding-top | . | .pr- | padding-right | . | .pb- | padding-bottom | . | .pl- | padding-left | . Spacing values are based on a 1rem = 16px spacing scale, broken down into these units: . | Spacer/suffix | Size in rems | Rem converted to px | . | 1 | 0.25rem | 4px | . | 2 | 0.5rem | 8px | . | 3 | 0.75rem | 12px | . | 4 | 1rem | 16px | . | 5 | 1.5rem | 24px | . | 6 | 2rem | 32px | . | 7 | 2.5rem | 40px | . | 8 | 3rem | 48px | . | auto | auto | auto | . Use mx-auto to horizontally center elements. Examples . In Markdown, use the {: } wrapper to apply custom classes: . This paragraph will have a margin bottom of 1rem/16px at large screens. {: .mb-lg-4 } This paragraph will have 2rem/32px of padding on the right and left at all screen sizes. {: .px-6 } . ",
    "url": "/docs/utilities/layout/#spacing",
    
    "relUrl": "/docs/utilities/layout/#spacing"
  },"223": {
    "doc": "Layout",
    "title": "Horizontal Alignment",
    "content": "| Classname | What it does | . | .float-left | float: left | . | .float-right | float: right | . | .flex-justify-start | justify-content: flex-start | . | .flex-justify-end | justify-content: flex-end | . | .flex-justify-between | justify-content: space-between | . | .flex-justify-around | justify-content: space-around | . Note: any of the flex- classes must be used on a parent element that has d-flex applied to it. ",
    "url": "/docs/utilities/layout/#horizontal-alignment",
    
    "relUrl": "/docs/utilities/layout/#horizontal-alignment"
  },"224": {
    "doc": "Layout",
    "title": "Vertical Alignment",
    "content": "| Classname | What it does | . | .v-align-baseline | vertical-align: baseline | . | .v-align-bottom | vertical-align: bottom | . | .v-align-middle | vertical-align: middle | . | .v-align-text-bottom | vertical-align: text-bottom | . | .v-align-text-top | vertical-align: text-top | . | .v-align-top | vertical-align: top | . ",
    "url": "/docs/utilities/layout/#vertical-alignment",
    
    "relUrl": "/docs/utilities/layout/#vertical-alignment"
  },"225": {
    "doc": "Layout",
    "title": "Display",
    "content": "Display classes aid in adapting the layout of the elements on a page: . | Class |   | . | .d-block | display: block | . | .d-flex | display: flex | . | .d-inline | display: inline | . | .d-inline-block | display: inline-block | . | .d-none | display: none | . Use these classes in conjunction with the responsive modifiers. Examples . In Markdown, use the {: } wrapper to apply custom classes: . This button will be hidden until medium screen sizes: [ A button ](#url) {: .d-none .d-md-inline-block } These headings will be `inline-block`: ### heading 3 {: .d-inline-block } ### heading 3 {: .d-inline-block } . ",
    "url": "/docs/utilities/layout/#display",
    
    "relUrl": "/docs/utilities/layout/#display"
  },"226": {
    "doc": "Layout",
    "title": "Layout",
    "content": " ",
    "url": "/docs/utilities/layout/",
    
    "relUrl": "/docs/utilities/layout/"
  },"227": {
    "doc": "Layout",
    "title": "Layout",
    "content": "You specify the layout for a page in its front matter. Just the Docs has a default layout with a sidebar, used for almost all pages in the theme docs, and a minimal layout that omits the sidebar. ",
    "url": "/docs/layout/layout/",
    
    "relUrl": "/docs/layout/layout/"
  },"228": {
    "doc": "Layout",
    "title": "The layout concept",
    "content": "See the Jekyll docs page about layouts for an explanation of the general idea of layouts and how to specify them. You can use Jekyll’s front matter defaults to specify the same layout for many pages. ",
    "url": "/docs/layout/layout/#the-layout-concept",
    
    "relUrl": "/docs/layout/layout/#the-layout-concept"
  },"229": {
    "doc": "Layout",
    "title": "The default layout",
    "content": "This page uses the default layout. It is a responsive layout: on medium and larger width displays, it displays a sidebar, including a navigation panel; on smaller width displays, the sidebar is automatically hidden under a button. Each child (and grandchild) page of a top-level page has so-called breadcrumbs: links to its parent (and grandparent) pages. It shows the breadcrumbs above the main content of the page. Each page that has child pages generally has a list of links to those pages (you can suppress it by has_toc: false in the front matter). It shows the list as a table of contents below the main content. ",
    "url": "/docs/layout/layout/#the-default-layout",
    
    "relUrl": "/docs/layout/layout/#the-default-layout"
  },"230": {
    "doc": "Layout",
    "title": "The minimal layout",
    "content": "A child and grandchild page of this page use the minimal layout. This differs from the default layout by omitting the sidebar – and thereby also the navigation panel. To navigate between pages with the minimal layout, you can use the breadcrumbs and the tables of contents. ",
    "url": "/docs/layout/layout/#the-minimal-layout",
    
    "relUrl": "/docs/layout/layout/#the-minimal-layout"
  },"231": {
    "doc": "Layout",
    "title": "Other layouts",
    "content": "Just the Docs has further layouts: about, home, page, and post. Currently, they are all based on the default layout. See the Jekyll docs about inheritance for how to customize them. ",
    "url": "/docs/layout/layout/#other-layouts",
    
    "relUrl": "/docs/layout/layout/#other-layouts"
  },"232": {
    "doc": "Code with line numbers",
    "title": "Code snippets with line numbers",
    "content": "The default settings for HTML compression are incompatible with the HTML produced by Jekyll (4.1.1 or earlier) for line numbers from highlighted code – both when using Kramdown code fences and when using Liquid highlight tags. To avoid non-conforming HTML and unsatisfactory layout, HTML compression can be turned off by using the following configuration option: . compress_html: ignore: envs: all . When using Kramdown code fences, line numbers are turned on globally by the following configuration option: . kramdown: syntax_highlighter_opts: block: line_numbers: true . Line numbers can then be suppressed locally using Liquid tags (without the linenos option) instead of fences: . {% highlight some_language %} Some code {% endhighlight %} . ",
    "url": "/docs/ui-components/code/line-numbers/#code-snippets-with-line-numbers",
    
    "relUrl": "/docs/ui-components/code/line-numbers/#code-snippets-with-line-numbers"
  },"233": {
    "doc": "Code with line numbers",
    "title": "Workarounds",
    "content": "To use HTML compression together with line numbers, all highlighted code needs to be wrapped using one of the following workarounds. (The variable name some_var can be changed to avoid clashes; it can also be replaced by code – but note that code=code cannot be removed). Code fences (three backticks) . {% capture some_var %} ```some_language Some code ``` {% endcapture %} {% assign some_var = some_var | markdownify %} {% include fix_linenos.html code=some_var %} . Liquid highlighting . {% capture some_var %} {% highlight some_language linenos %} Some code {% endhighlight %} {% endcapture %} {% include fix_linenos.html code=some_var %} . Credit: The original version of the above workaround was suggested by Dmitry Hrabrov at https://github.com/penibelst/jekyll-compress-html/issues/71#issuecomment-188144901. ",
    "url": "/docs/ui-components/code/line-numbers/#workarounds",
    
    "relUrl": "/docs/ui-components/code/line-numbers/#workarounds"
  },"234": {
    "doc": "Code with line numbers",
    "title": "Examples",
    "content": "✅ Using code fences + workaround (will only show line numbers if enabled globally in _config.yml): . // Javascript code with syntax highlighting in fences var fun = function lang(l) { dateformat.i18n = require('./lang/' + l) return true; } . ✅ Using liquid highlighting + workaround: . | 1 2 3 4 . | # Ruby code with syntax highlighting and fixed line numbers using Liquid GitHubPages::Dependencies.gems.each do |gem, version| s.add_dependency(gem, \"= #{version}\") end . | . Narrow code stays close to the line numbers: . | 1 2 3 . | def foo puts 'foo' end . | . ❌ With the compression options used for the theme docs, the following example illustrates the incorrect formatting arising from the incompatibility of HTML compression and the non-conforming HTML produced by Jekyll for line numbers: . | 1 2 3 . | def foo puts 'foo' end . | . ",
    "url": "/docs/ui-components/code/line-numbers/#examples",
    
    "relUrl": "/docs/ui-components/code/line-numbers/#examples"
  },"235": {
    "doc": "Code with line numbers",
    "title": "Code with line numbers",
    "content": " ",
    "url": "/docs/ui-components/code/line-numbers/",
    
    "relUrl": "/docs/ui-components/code/line-numbers/"
  },"236": {
    "doc": "Lists",
    "title": "Lists",
    "content": " ",
    "url": "/docs/ui-components/lists/",
    
    "relUrl": "/docs/ui-components/lists/"
  },"237": {
    "doc": "Lists",
    "title": "Table of contents",
    "content": ". | Unordered list | Ordered list | Task list | Definition list | . Most lists can be rendered with pure Markdown. ",
    "url": "/docs/ui-components/lists/#table-of-contents",
    
    "relUrl": "/docs/ui-components/lists/#table-of-contents"
  },"238": {
    "doc": "Lists",
    "title": "Unordered list",
    "content": ". | Item 1 | Item 2 | Item 3 | . or . | Item 1 | Item 2 | Item 3 | . - Item 1 - Item 2 - Item 3 _or_ * Item 1 * Item 2 * Item 3 . ",
    "url": "/docs/ui-components/lists/#unordered-list",
    
    "relUrl": "/docs/ui-components/lists/#unordered-list"
  },"239": {
    "doc": "Lists",
    "title": "Ordered list",
    "content": ". | Item 1 | Item 2 | Item 3 | . 1. Item 1 1. Item 2 1. Item 3 . ",
    "url": "/docs/ui-components/lists/#ordered-list",
    
    "relUrl": "/docs/ui-components/lists/#ordered-list"
  },"240": {
    "doc": "Lists",
    "title": "Task list",
    "content": ". | hello, this is a todo item | hello, this is another todo item | goodbye, this item is done | . - [ ] hello, this is a todo item - [ ] hello, this is another todo item - [x] goodbye, this item is done . ",
    "url": "/docs/ui-components/lists/#task-list",
    
    "relUrl": "/docs/ui-components/lists/#task-list"
  },"241": {
    "doc": "Lists",
    "title": "Definition list",
    "content": "Definition lists require HTML syntax and aren’t supported with the GitHub Flavored Markdown compiler. Name Godzilla Born 1952 Birthplace Japan Color Green &lt;dl&gt; &lt;dt&gt;Name&lt;/dt&gt; &lt;dd&gt;Godzilla&lt;/dd&gt; &lt;dt&gt;Born&lt;/dt&gt; &lt;dd&gt;1952&lt;/dd&gt; &lt;dt&gt;Birthplace&lt;/dt&gt; &lt;dd&gt;Japan&lt;/dd&gt; &lt;dt&gt;Color&lt;/dt&gt; &lt;dd&gt;Green&lt;/dd&gt; &lt;/dl&gt; . ",
    "url": "/docs/ui-components/lists/#definition-list",
    
    "relUrl": "/docs/ui-components/lists/#definition-list"
  },"242": {
    "doc": "Markdown Syntax",
    "title": "Markdown Syntax",
    "content": "Ver 0.1.1 . | 1. 제목 | 2. 구분선 및 줄바꿈 | 3. 글자속성 . | 3.1 밑줄, 볼드, 취소선, 기울임체 | 3.2 색상, 배경색 | . | 4. 인용문구 | 5. 들여쓰기 | 6. 이미지 | 7. 외부 링크 | 8. 내부 링크 | 9. 코드 블럭 | 10. 체크리스트 | 11. 표 | 12. 토글버튼 | . ",
    "url": "/docs/Markdown/markdown/markdown%20%20Syntax/#markdown-syntax",
    
    "relUrl": "/docs/Markdown/markdown/markdown%20%20Syntax/#markdown-syntax"
  },"243": {
    "doc": "Markdown Syntax",
    "title": "1. 제목",
    "content": "’#’ 기호로 제목 나눔 (1~6개) . # Heading Heading === ## Heading Heading --- . ",
    "url": "/docs/Markdown/markdown/markdown%20%20Syntax/",
    
    "relUrl": "/docs/Markdown/markdown/markdown%20%20Syntax/"
  },"244": {
    "doc": "Markdown Syntax",
    "title": "Heading",
    "content": "Heading === . ",
    "url": "/docs/Markdown/markdown/markdown%20%20Syntax/#heading",
    
    "relUrl": "/docs/Markdown/markdown/markdown%20%20Syntax/#heading"
  },"245": {
    "doc": "Markdown Syntax",
    "title": "Heading",
    "content": "Heading — . Heading . Heading . Heading . Heading . ",
    "url": "/docs/Markdown/markdown/markdown%20%20Syntax/#heading-1",
    
    "relUrl": "/docs/Markdown/markdown/markdown%20%20Syntax/#heading-1"
  },"246": {
    "doc": "Markdown Syntax",
    "title": "2. 구분선 및 줄바꿈",
    "content": "*** --- ___ . 줄바꿈 . Jong Jun Lim &lt;br&gt; Just Do it . Jong Jun Lim Just Do it . ",
    "url": "/docs/Markdown/markdown/markdown%20%20Syntax/",
    
    "relUrl": "/docs/Markdown/markdown/markdown%20%20Syntax/"
  },"247": {
    "doc": "Markdown Syntax",
    "title": "3. 글자 속성",
    "content": " ",
    "url": "/docs/Markdown/markdown/markdown%20%20Syntax/",
    
    "relUrl": "/docs/Markdown/markdown/markdown%20%20Syntax/"
  },"248": {
    "doc": "Markdown Syntax",
    "title": "3.1 밑줄, 볼드, 취소선, 기울임체",
    "content": "*Just Do It* . Just Do It . &lt;u&gt;Just Do It&lt;/u&gt; . Just Do It . _Just Do It_ . Just Do It . **Just Do It** . Just Do It . Just Do~~n't~~ ~~qu~~it . Just Don’t quit . **Just Do**~~**n't**~~ ~~**qu**~~**it** . Just Don’t quit . ",
    "url": "/docs/Markdown/markdown/markdown%20%20Syntax/",
    
    "relUrl": "/docs/Markdown/markdown/markdown%20%20Syntax/"
  },"249": {
    "doc": "Markdown Syntax",
    "title": "3.2 색상, 배경색",
    "content": "&lt;span style=\"color: #CC0000; background-color: #FFFF33;\"&gt;Just Do It&lt;/span&gt; . Just Do It . &lt;span style=\"color: red; background-color: yellow;\"&gt;Just Do It&lt;/span&gt; . Just Do It . 헥스 코드 . 헥스 코드 . ",
    "url": "/docs/Markdown/markdown/markdown%20%20Syntax/",
    
    "relUrl": "/docs/Markdown/markdown/markdown%20%20Syntax/"
  },"250": {
    "doc": "Markdown Syntax",
    "title": "4. 인용문구",
    "content": "&gt; Just Do It &gt;&gt; Just Do It &gt;&gt;&gt; Just Do It . Just Do It . Just Do It . Just Do It . &gt; Nike &gt;&gt; - Slogan `Just Do It` . Nike . | Slogan Just Do It | . ",
    "url": "/docs/Markdown/markdown/markdown%20%20Syntax/",
    
    "relUrl": "/docs/Markdown/markdown/markdown%20%20Syntax/"
  },"251": {
    "doc": "Markdown Syntax",
    "title": "5. 들여쓰기",
    "content": "- *,+,- 를 이용하여 순서가 없는 목록 생성 - 들여쓰기를 하면 모양이 바뀜 - 제목 1. list 1 2. list 2 1. list 3 2. list 4 1. 머리 * 머리카락 * 뚝배기 + 털 2. 다리 - 다리털 - 발가락 1. 허벅지 . | *,+,- 를 이용하여 순서가 없는 목록 생성 . | 들여쓰기를 하면 모양이 바뀜 . | 제목 | . | . | . | list 1 | list 2 . | list 3 | list 4 | . | 머리 . | 머리카락 | 뚝배기 . | 털 | . | . | 다리 . | 다리털 | 발가락 . | 허벅지 | . | . | . ",
    "url": "/docs/Markdown/markdown/markdown%20%20Syntax/",
    
    "relUrl": "/docs/Markdown/markdown/markdown%20%20Syntax/"
  },"252": {
    "doc": "Markdown Syntax",
    "title": "6. 이미지",
    "content": "- 링크와 비슷하지만 앞에 !가 붙는다. - 인라인 이미지 ![alt text](/test.png) - 링크 이미지 ![alt text](image_URL) - 사이즈 변경은 &lt;img width=\"ooopx\" height=\"ooopx\"&gt;&lt;/img&gt; - 링크와 이미지를 합친 문법 [ ![텍스트](이미지URL) ]( 링크URL ) [![텍스트](https://t1.daumcdn.net/cfile/tistory/2444873B57E257821F)](https://unity3d.com/kr) &lt;img src=\"https://i1.sndcdn.com/avatars-000639959556-jhitcq-t500x500.jpg\" width=\"200\" height=\"200\" /&gt; &lt;!-- a태그를 이용한 이미지 링크 생성법--&gt; &lt;a href=\"#\"&gt; &lt;img src=\"https://github.com/images/markdown_syntax.jpg\" width=\"400px\" alt=\"sample image\"&gt; &lt;/a&gt; . | 링크와 비슷하지만 앞에 !가 붙는다. | 인라인 이미지 | 링크 이미지 | 사이즈 변경은 &lt;/img&gt; | 링크와 이미지를 합친 문법 | . ",
    "url": "/docs/Markdown/markdown/markdown%20%20Syntax/",
    
    "relUrl": "/docs/Markdown/markdown/markdown%20%20Syntax/"
  },"253": {
    "doc": "Markdown Syntax",
    "title": "7. 외부 링크",
    "content": ". | 방법1 ``` Google Naver Github | . 구글 www.google.com 네이버 My mail inpa.dev@gmail.com . 링크는 젤다의전설 주인공 이름 . [Google](http://www.google.com \"구글\") [Naver](http://www.naver.com \"네이버\") [Github](http://www.github.com \"깃허브\") 구글 www.google.com 네이버 &lt;www.naver.com&gt; My mail inpa.dev@gmail.com [링크는 젤다의전설 주인공 이름](http://zeldahagoshipda.com) - 방법2 . 구글 . &lt;a href=\"www.google.com\" target=\"_blank\"&gt;구글&lt;/a&gt; --- # 8. 내부(해시)링크&lt;a id=\"chapter-8\"&gt;&lt;/a&gt; [보여지는 내용](#이동할 헤드(제목)) - 괄호 안의 링크를 쓸 때는 **띄어쓰기는 -로 연결**, 영어는 모두 **소문자**로 작성 ### 테이블 구성 * [1장](#chapter-1) * [2장](#chapter-2) * [3장](#chapter-3) . | 1장 | 2장 | 3장 | . 1장 . 1장의 내용은….. 2장 . 2장의 내용은….. 3장 . 3장의 내용은….. --- # 9. 코드 블럭&lt;a id=\"chapter-9\"&gt;&lt;/a&gt; - 간단한 인라인 코드는 텍스트를 앞뒤로 `기호로 감싸면 됨 - ` 혹은 ~~~ 코드 - 코드가 여러 줄인 경우, 줄 앞에 공백 네 칸을 추가하면 됩니다. - ` 옆에 언어를 지정해주면 syntax color가 적용됩니다. ```sql SELECT a.ename ,a.deptno ,a.job FROM EMP a . import pandas as pd import numpy as np . ",
    "url": "/docs/Markdown/markdown/markdown%20%20Syntax/",
    
    "relUrl": "/docs/Markdown/markdown/markdown%20%20Syntax/"
  },"254": {
    "doc": "Markdown Syntax",
    "title": "10. 체크 리스트",
    "content": ". | 줄 앞에 -[x] 를 써서 완료된 리스트 표시 | 줄 앞에 -[]를 써서 미완료되 리스트 표시 | 체크 안에서 강조 외 여러 기능 사용 가능 | . - [x] this is a complete item - [ ] this is an incomplete item - [x] @mentions, #refs, [links](), **formatting**, and &lt;del&gt;tags&lt;/del&gt; supported . | this is a complete item | this is an incomplete item | @mentions, #refs, links, formatting, and tags supported | . ",
    "url": "/docs/Markdown/markdown/markdown%20%20Syntax/",
    
    "relUrl": "/docs/Markdown/markdown/markdown%20%20Syntax/"
  },"255": {
    "doc": "Markdown Syntax",
    "title": "11. Table",
    "content": ". | 헤더와 셀을 구분 할때 3개 이상의 - 기호 필요 | 헤더 셀을 구분하면서 : 기호로 셀안에 내용을 정렬 | | 가장 좌측과 가장 우측에 있는 | 기호는 생략 가능 | . | . 테이블 생성 . 헤더1|헤더2|헤더3|헤더4 ---|---|---|--- 셀1|셀2|셀3|셀4 셀5|셀6|셀7|셀8 셀9|셀10|셀11|셀12 . 헤더1|헤더2|헤더3|헤더4 —|—|—|— 셀1|셀2|셀3|셀4 셀5|셀6|셀7|셀8 셀9|셀10|셀11|셀12 . 테이블 정렬 . 헤더1|헤더2|헤더3 :---|:---:|---: Left|Center|Right 1|2|3 4|5|6 7|8|9 . 헤더1|헤더2|헤더3 :—|:—:|—: Left|Center|Right 1|2|3 4|5|6 7|8|9 — . ",
    "url": "/docs/Markdown/markdown/markdown%20%20Syntax/",
    
    "relUrl": "/docs/Markdown/markdown/markdown%20%20Syntax/"
  },"256": {
    "doc": "Markdown Syntax",
    "title": "12. 토글 버튼",
    "content": "마크다운에서 토글은 지원하지 않는다. 그렇기 때문에 html의 태그를 사용해서 토글 기능을 사용할 수 있다. 이 기능을 제공하는 html의 태그가 바로 details이다. 그리고 div markdown=”1”을 꼭 넣어줘야 하는데 이것은 jekyll에서 html사이에 markdown을 인식 하기 위한 코드이다. &lt;details&gt; &lt;summary&gt;토글 접기/펼치기&lt;/summary&gt; &lt;div markdown=\"1\"&gt; 안녕 &lt;/div&gt; &lt;/details&gt; . 토글 접기/펼치기 안녕 . ",
    "url": "/docs/Markdown/markdown/markdown%20%20Syntax/",
    
    "relUrl": "/docs/Markdown/markdown/markdown%20%20Syntax/"
  },"257": {
    "doc": "Markdown Syntax",
    "title": "Markdown Syntax",
    "content": "작성일자 : 2023-09-16 ",
    "url": "/docs/Markdown/markdown/markdown%20%20Syntax/",
    
    "relUrl": "/docs/Markdown/markdown/markdown%20%20Syntax/"
  },"258": {
    "doc": "Markdown",
    "title": "Markdown",
    "content": "This is page for markdown . ",
    "url": "/docs/Markdown/md/",
    
    "relUrl": "/docs/Markdown/md/"
  },"259": {
    "doc": "Minimal layout child page",
    "title": "Minimal layout child page",
    "content": "This is a child page that uses the same minimal layout as its parent page. ",
    "url": "/docs/layout/minimal/minimal-child/",
    
    "relUrl": "/docs/layout/minimal/minimal-child/"
  },"260": {
    "doc": "Minimal layout test",
    "title": "Minimal layout test",
    "content": "Return to main website. This page demonstrates the packaged minimal layout, which does not render the sidebar or header. It can be used for standalone pages. It is also an example of using the new modular site components to define custom layouts; see “Custom layouts and includes” in the customization docs for more information. ",
    "url": "/docs/minimal-test/",
    
    "relUrl": "/docs/minimal-test/"
  },"261": {
    "doc": "A minimal layout page",
    "title": "A minimal layout page",
    "content": "This page illustrates the built-in layout minimal. One of its child pages also uses the minimal layout; the other child pages uses the default layout. ",
    "url": "/docs/layout/minimal/minimal/",
    
    "relUrl": "/docs/layout/minimal/minimal/"
  },"262": {
    "doc": "Navigation Structure",
    "title": "Navigation Structure",
    "content": ". | Main navigation | Ordering pages | Excluding pages | Pages with children . | Child pages | Ordering child pages | Auto-generating Table of Contents | Children with children | . | Auxiliary Links | External Navigation Links | In-page navigation with Table of Contents . | Collapsible Table of Contents | . | . ",
    "url": "/docs/navigation-structure/",
    
    "relUrl": "/docs/navigation-structure/"
  },"263": {
    "doc": "Navigation Structure",
    "title": "Main navigation",
    "content": "The main navigation for your Just the Docs site is on the left side of the page at large screens and on the top (behind a tap) on small screens. The main navigation can be structured to accommodate a multi-level menu system (pages with children and grandchildren). By default, all pages will appear as top level pages in the main nav unless a parent page is defined (see Pages with Children). ",
    "url": "/docs/navigation-structure/#main-navigation",
    
    "relUrl": "/docs/navigation-structure/#main-navigation"
  },"264": {
    "doc": "Navigation Structure",
    "title": "Ordering pages",
    "content": "To specify a page order, you can use the nav_order parameter in your pages’ YAML front matter. Example . --- layout: default title: Customization nav_order: 4 --- . The parameter values determine the order of the top-level pages, and of child pages with the same parent. You can reuse the same parameter values (e.g., integers starting from 1) for the child pages of different parents. The parameter values can be numbers (integers, floats) and/or strings. Pages with numerical nav_order parameters always come before those with string nav_order parameters. When you omit nav_order parameters, they default to the titles of the pages. If you want to make the page order independent of the page titles, you can set explicit nav_order parameters on all pages. All pages with explicit nav_order parameters come before all pages ordered by their title values. By default, all Capital letters come before all lowercase letters; you can add nav_sort: case_insensitive in the configuration file to ignore the case. Enclosing strings in (single or double) quotation marks is optional. Numeric values are not enclosed in quotation marks, e.g., 42, -1.0; numbers in quotation marks are lexicographically ordered, so \"10\" comes before \"2\", for example. ",
    "url": "/docs/navigation-structure/#ordering-pages",
    
    "relUrl": "/docs/navigation-structure/#ordering-pages"
  },"265": {
    "doc": "Navigation Structure",
    "title": "Excluding pages",
    "content": "For specific pages that you do not wish to include in the main navigation, e.g. a 404 page or a landing page, use the nav_exclude: true parameter in the YAML front matter for that page. Example . --- layout: default title: 404 nav_exclude: true --- . The nav_exclude parameter does not affect the auto-generating list of child pages, which you can use to access pages excluded from the main navigation. Pages with no title are automatically excluded from the main navigation. ",
    "url": "/docs/navigation-structure/#excluding-pages",
    
    "relUrl": "/docs/navigation-structure/#excluding-pages"
  },"266": {
    "doc": "Navigation Structure",
    "title": "Pages with children",
    "content": "Sometimes you will want to create a page with many children (a section). First, it is recommended that you keep pages that are related in a directory together… For example, in these docs, we keep all of the written documentation in the ./docs directory and each of the sections in subdirectories like ./docs/ui-components and ./docs/utilities. This gives us an organization like: . +-- .. |-- (Jekyll files) |-- docs |-- ui-components | |-- index.md (parent page) | |-- buttons.md | |-- code.md | |-- labels.md | |-- tables.md | +-- typography.md | |-- utilities | |-- index.md (parent page) | |-- color.md | |-- layout.md | |-- responsive-modifiers.md | +-- typography.md | |-- (other md files, pages with no children) | +-- .. |-- (Jekyll files) +-- .. On the parent pages, add this YAML front matter parameter: . | has_children: true (tells us that this is a parent page) | . Example . --- layout: default title: UI Components nav_order: 2 has_children: true --- . Here we’re setting up the UI Components landing page that is available at /docs/ui-components, which has children and is ordered second in the main nav. Child pages . On child pages, simply set the parent: YAML front matter to whatever the parent’s page title is and set a nav order (this number is now scoped within the section). Example . --- layout: default title: Buttons parent: UI Components nav_order: 2 --- . The Buttons page appears as a child of UI Components and appears second in the UI Components section. Ordering child pages . New (v0.4.0) . You can optionally add the following to the YAML front matter to reverse the default sort order of child pages: . | child_nav_order: reversed | . Example . --- layout: default title: Reversed Child Pages child_nav_order: reversed --- . Auto-generating Table of Contents . By default, all pages with children will automatically append a Table of Contents which lists the child pages after the parent page’s content. To disable this auto Table of Contents, set has_toc: false in the parent page’s YAML front matter. Example . --- layout: default title: UI Components nav_order: 2 has_children: true has_toc: false --- . Children with children . Child pages can also have children (grandchildren). This is achieved by using a similar pattern on the child and grandchild pages. | Add the has_children attribute to the child | Add the parent and grand_parent attribute to the grandchild | . Example . --- layout: default title: Buttons parent: UI Components nav_order: 2 has_children: true --- . --- layout: default title: Buttons Child Page parent: Buttons grand_parent: UI Components nav_order: 1 --- . This would create the following navigation structure: . +-- .. |-- UI Components |-- .. | |-- Buttons | |-- Button Child Page | |-- .. | +-- .. Currently, the navigation structure is limited to 3 levels: grandchild pages cannot themselves have child pages. ",
    "url": "/docs/navigation-structure/#pages-with-children",
    
    "relUrl": "/docs/navigation-structure/#pages-with-children"
  },"267": {
    "doc": "Navigation Structure",
    "title": "Auxiliary Links",
    "content": "To add auxiliary links to your site (in the upper right on all pages), add it to the aux_links configuration option in your site’s _config.yml file. Example . # Aux links for the upper right navigation aux_links: \"Just the Docs on GitHub\": - \"//github.com/just-the-docs/just-the-docs\" . ",
    "url": "/docs/navigation-structure/#auxiliary-links",
    
    "relUrl": "/docs/navigation-structure/#auxiliary-links"
  },"268": {
    "doc": "Navigation Structure",
    "title": "External Navigation Links",
    "content": "New (v0.4.0) . To add external links to the navigation, add them to the nav_external_links configuration option in your site’s _config.yml file. External links will appear in the navigation after the links to ordinary pages, but before any collections. Example . # External navigation links nav_external_links: - title: Just the Docs on GitHub url: https://github.com/just-the-docs/just-the-docs hide_icon: false # set to true to hide the external link icon - defaults to false . The external links are decorated by an icon, which distinguishes them from internal links. You can suppress the icon by setting hide_icon: true. ",
    "url": "/docs/navigation-structure/#external-navigation-links",
    
    "relUrl": "/docs/navigation-structure/#external-navigation-links"
  },"269": {
    "doc": "Navigation Structure",
    "title": "In-page navigation with Table of Contents",
    "content": "To generate a Table of Contents on your docs pages, you can use the {:toc} method from Kramdown, immediately after an &lt;ol&gt; in Markdown. This will automatically generate an ordered list of anchor links to various sections of the page based on headings and heading levels. There may be occasions where you’re using a heading and you don’t want it to show up in the TOC, so to skip a particular heading use the {: .no_toc } CSS class. Example . # Navigation Structure {: .no_toc } ## {: .no_toc .text-delta } 1. TOC {:toc} . This example skips the page name heading (#) from the TOC, as well as the heading for the Table of Contents itself (##) because it is redundant, followed by the table of contents itself. To get an unordered list, replace 1. TOC above by - TOC. Collapsible Table of Contents . The Table of Contents can be made collapsible using the &lt;details&gt; and &lt;summary&gt; elements , as in the following example. The attribute open (expands the Table of Contents by default) and the styling with {: .text-delta } are optional. &lt;details open markdown=\"block\"&gt; &lt;summary&gt; &lt;/summary&gt; {: .text-delta } 1. TOC {:toc} &lt;/details&gt; . The result is shown at the top of this page ({:toc} can be used only once on each page). ",
    "url": "/docs/navigation-structure/#in-page-navigation-with-table-of-contents",
    
    "relUrl": "/docs/navigation-structure/#in-page-navigation-with-table-of-contents"
  },"270": {
    "doc": "Responsive Modifiers",
    "title": "Responsive modifiers",
    "content": "Just the Docs spacing works in conjunction with a variety of modifiers that allow you to target specific screen sizes responsively. Use these in conjunction with spacing and display prefix and suffix classes. | Modifier | Screen size | . | (none) | All screens until the next modifier | . | xs | 320px (20rem) and up | . | sm | 500px (31.25rem) and up | . | md | 740px (46.25rem) and up | . | lg | 1120px (70rem) and up | . | xl | 1400px (87.5rem) and up | . ",
    "url": "/docs/utilities/responsive-modifiers/#responsive-modifiers",
    
    "relUrl": "/docs/utilities/responsive-modifiers/#responsive-modifiers"
  },"271": {
    "doc": "Responsive Modifiers",
    "title": "Responsive Modifiers",
    "content": " ",
    "url": "/docs/utilities/responsive-modifiers/",
    
    "relUrl": "/docs/utilities/responsive-modifiers/"
  },"272": {
    "doc": "Search",
    "title": "Search",
    "content": " ",
    "url": "/docs/search/",
    
    "relUrl": "/docs/search/"
  },"273": {
    "doc": "Search",
    "title": "Table of contents",
    "content": ". | Enable search in configuration . | Search granularity | Search previews | Search tokenizer | Display URL in search results | Display search button | . | Hiding pages from search . | Example | . | Generate search index when used as a gem | Custom content for search index . | Example | . | . Just the Docs uses lunr.js to add a client-side search interface powered by a JSON index that Jekyll generates. All search results are shown in an auto-complete style interface (there is no search results page). By default, all generated HTML pages are indexed using the following data points: . | Page title | Page content | Page URL | . ",
    "url": "/docs/search/#table-of-contents",
    
    "relUrl": "/docs/search/#table-of-contents"
  },"274": {
    "doc": "Search",
    "title": "Enable search in configuration",
    "content": "In your site’s _config.yml, enable search: . # Enable or disable the site search # Supports true (default) or false search_enabled: true . Search granularity . Pages are split into sections that can be searched individually. The sections are defined by the headings on the page. Each section is displayed in a separate search result. # Split pages into sections that can be searched individually # Supports 1 - 6, default: 2 search.heading_level: 2 . Search previews . A search result can contain previews that show where the search words are found in the specific section. # Maximum amount of previews per search result # Default: 3 search.previews: 3 # Maximum amount of words to display before a matched word in the preview # Default: 5 search.preview_words_before: 5 # Maximum amount of words to display after a matched word in the preview # Default: 10 search.preview_words_after: 10 . Search tokenizer . The default is for hyphens to separate tokens in search terms: gem-based is equivalent to gem based, matching either word. To allow search for hyphenated words: . # Set the search token separator # Default: /[\\s\\-/]+/ # Example: enable support for hyphenated search words search.tokenizer_separator: /[\\s/]+/ . Display URL in search results . # Display the relative url in search results # Supports true (default) or false search.rel_url: false . Display search button . The search button displays in the bottom right corner of the screen and triggers the search input when clicked. # Enable or disable the search button that appears in the bottom right corner of every page # Supports true or false (default) search.button: true . ",
    "url": "/docs/search/#enable-search-in-configuration",
    
    "relUrl": "/docs/search/#enable-search-in-configuration"
  },"275": {
    "doc": "Search",
    "title": "Hiding pages from search",
    "content": "Sometimes you might have a page that you don’t want to be indexed for the search nor to show up in search results, e.g., a 404 page. To exclude a page from search, add the search_exclude: true parameter to the page’s YAML front matter: . Example . --- layout: default title: Page not found nav_exclude: true search_exclude: true --- . ",
    "url": "/docs/search/#hiding-pages-from-search",
    
    "relUrl": "/docs/search/#hiding-pages-from-search"
  },"276": {
    "doc": "Search",
    "title": "Generate search index when used as a gem",
    "content": "If you use Just the Docs as a remote theme, you do not need the following steps. If you use the theme as a gem, you must initialize the search by running this rake command that comes with just-the-docs: . $ bundle exec just-the-docs rake search:init . This command creates the assets/js/zzzz-search-data.json file that Jekyll uses to create your search index. Alternatively, you can create the file manually with this content. ",
    "url": "/docs/search/#generate-search-index-when-used-as-a-gem",
    
    "relUrl": "/docs/search/#generate-search-index-when-used-as-a-gem"
  },"277": {
    "doc": "Search",
    "title": "Custom content for search index",
    "content": "New (v0.4.0) . Advanced . By default, the search feature indexes a page’s .content, .title, and some headers within the .content. Other data (e.g. front matter, files in _data and assets) is not indexed. Users can customize what is indexed. Customizing search indices is an advanced feature that requires Javascript and Liquid knowledge. | When Just the Docs is a local or gem theme, ensure assets/js/zzzz-search-data.json is up-to-date with Generate search index when used as a gem. | Add a new file named _includes/lunr/custom-data.json. Insert custom Liquid code that reads your data (e.g. the page object at include.page) then generates custom Javascript fields that hold the custom data you want to index. Verify these fields in the generated assets/js/search-data.json. | Add a new file named _includes/lunr/custom-index.js. Insert custom Javascript code that reads your custom Javascript fields and inserts them into the search index. You may want to inspect assets/js/just-the-docs.js to better understand the code. | . Example . This example adds front matter usage and examples fields to the search index. _includes/lunr/custom-data.json custom code reads the page usage and examples fields, normalizes the text, and writes the text to custom Javascript myusage and myexamples fields. Javascript fields are similar yet not the same as JSON. jsonify will probably work for most scenarios. {%- capture newline %} {% endcapture -%} \"myusage\": {{ include.page.usage | markdownify | replace:newline,' ' | strip_html | normalize_whitespace | strip | jsonify }}, \"myexamples\": {{ include.page.examples | markdownify | replace:newline,' ' | strip_html | normalize_whitespace | strip | jsonify }}, . _includes/lunr/custom-index.js custom code is inserted into the Javascript loop of assets/js/just-the-docs.js. All custom Javascript fields are accessed as fields of docs[i] such as docs[i].myusage. Finally, append your custom fields on to the already existing docs[i].content. const content_to_merge = [docs[i].content, docs[i].myusage, docs[i].myexamples]; docs[i].content = content_to_merge.join(' '); . ",
    "url": "/docs/search/#custom-content-for-search-index",
    
    "relUrl": "/docs/search/#custom-content-for-search-index"
  },"278": {
    "doc": "Tables",
    "title": "Tables",
    "content": "Tables are responsive by default, allowing wide tables to have a horizontal scroll to access columns outside of the normal viewport. | head1 | head two | three | . | ok | good swedish fish | nice | . | out of stock | good and plenty | nice | . | ok | good oreos | hmm | . | ok | good zoute drop | yumm | . | head1 | head two | three |:-------------|:------------------|:------| ok | good swedish fish | nice | out of stock | good and plenty | nice | ok | good `oreos` | hmm | ok | good `zoute` drop | yumm | . ",
    "url": "/docs/ui-components/tables/",
    
    "relUrl": "/docs/ui-components/tables/"
  },"279": {
    "doc": "Typography",
    "title": "Typography Utilities",
    "content": " ",
    "url": "/docs/utilities/typography/#typography-utilities",
    
    "relUrl": "/docs/utilities/typography/#typography-utilities"
  },"280": {
    "doc": "Typography",
    "title": "Table of contents",
    "content": ". | Font size | Font weight | Line height | Text justification | . ",
    "url": "/docs/utilities/typography/#table-of-contents",
    
    "relUrl": "/docs/utilities/typography/#table-of-contents"
  },"281": {
    "doc": "Typography",
    "title": "Font size",
    "content": "Use the .fs-1 - .fs-10 to set an explicit font-size. | Class | Small screen size font-size | Large screen size font-size | . | .fs-1 | 9px | 10px | . | .fs-2 | 11px | 12px | . | .fs-3 | 12px | 14px | . | .fs-4 | 14px | 16px | . | .fs-5 | 16px | 18px | . | .fs-6 | 18px | 24px | . | .fs-7 | 24px | 32px | . | .fs-8 | 32px | 38px | . | .fs-9 | 38px | 42px | . | .fs-10 | 42px | 48px | . Font size 1 . Font size 2 . Font size 3 . Font size 4 . Font size 5 . Font size 6 . Font size 7 . Font size 8 . Font size 9 . Font size 10 . In Markdown, use the `{: }` wrapper to apply custom classes: Font size 1 {: .fs-1 } Font size 2 {: .fs-2 } Font size 3 {: .fs-3 } Font size 4 {: .fs-4 } Font size 5 {: .fs-5 } Font size 6 {: .fs-6 } Font size 7 {: .fs-7 } Font size 8 {: .fs-8 } Font size 9 {: .fs-9 } Font size 10 {: .fs-10 } . ",
    "url": "/docs/utilities/typography/#font-size",
    
    "relUrl": "/docs/utilities/typography/#font-size"
  },"282": {
    "doc": "Typography",
    "title": "Font weight",
    "content": "Use the .fw-300 - .fw-700 to set an explicit font-weight. Font weight 300 . Font weight 400 . Font weight 500 . Font weight 700 . In Markdown, use the `{: }` wrapper to apply custom classes: Font weight 300 {: .fw-300 } Font weight 400 {: .fw-400 } Font weight 500 {: .fw-500 } Font weight 700 {: .fw-700 } . ",
    "url": "/docs/utilities/typography/#font-weight",
    
    "relUrl": "/docs/utilities/typography/#font-weight"
  },"283": {
    "doc": "Typography",
    "title": "Line height",
    "content": "Use the lh- classes to explicitly apply line height to text. | Class | line-height value | Notes | . | .lh-0 | 0 |   | . | .lh-tight | 1.1 | Default for headings | . | .lh-default | 1.4 | Default for body (paragraphs) | . No Line height No Line height . Tight line height Tight line height . Default line height Default line height . In Markdown, use the `{: }` wrapper to apply custom classes: No Line height No Line height {: .lh-0 } Tight line height Tight line height {: .lh-tight } Default line height Default line height {: .fh-default } . ",
    "url": "/docs/utilities/typography/#line-height",
    
    "relUrl": "/docs/utilities/typography/#line-height"
  },"284": {
    "doc": "Typography",
    "title": "Text justification",
    "content": "By default text is justified left. Use these text- classes to override settings: . | Class | What it does | . | .text-left | text-align: left | . | .text-right | text-align: right | . | .text-center | text-align: center | . ",
    "url": "/docs/utilities/typography/#text-justification",
    
    "relUrl": "/docs/utilities/typography/#text-justification"
  },"285": {
    "doc": "Typography",
    "title": "Typography",
    "content": " ",
    "url": "/docs/utilities/typography/",
    
    "relUrl": "/docs/utilities/typography/"
  },"286": {
    "doc": "Typography",
    "title": "Typography",
    "content": " ",
    "url": "/docs/ui-components/typography/",
    
    "relUrl": "/docs/ui-components/typography/"
  },"287": {
    "doc": "Typography",
    "title": "Table of contents",
    "content": ". | Font stack | Responsive type scale | Headings | Body text | Inline elements | Typographic Utilities | . ",
    "url": "/docs/ui-components/typography/#table-of-contents",
    
    "relUrl": "/docs/ui-components/typography/#table-of-contents"
  },"288": {
    "doc": "Typography",
    "title": "Font stack",
    "content": "By default, Just the Docs uses a native system font stack for sans-serif fonts: . system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif . ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz . For monospace type, like code snippets or the &lt;pre&gt; element, Just the Docs uses a native system font stack for monospace fonts: . \"SFMono-Regular\", Menlo, Consolas, Monospace . ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz . ",
    "url": "/docs/ui-components/typography/#font-stack",
    
    "relUrl": "/docs/ui-components/typography/#font-stack"
  },"289": {
    "doc": "Typography",
    "title": "Responsive type scale",
    "content": "Just the Docs uses a responsive type scale that shifts depending on the viewport size. | Selector | Small screen size font-size | Large screen size font-size | . | h1, .text-alpha | 32px | 36px | . | h2, .text-beta | 18px | 24px | . | h3, .text-gamma | 16px | 18px | . | h4, .text-delta | 14px | 16px | . | h5, .text-epsilon | 16px | 18px | . | h6, .text-zeta | 18px | 24px | . | body | 14px | 16px | . ",
    "url": "/docs/ui-components/typography/#responsive-type-scale",
    
    "relUrl": "/docs/ui-components/typography/#responsive-type-scale"
  },"290": {
    "doc": "Typography",
    "title": "Headings",
    "content": "Headings are rendered like this: . ",
    "url": "/docs/ui-components/typography/#headings",
    
    "relUrl": "/docs/ui-components/typography/#headings"
  },"291": {
    "doc": "Typography",
    "title": "Heading 1",
    "content": " ",
    "url": "/docs/ui-components/typography/",
    
    "relUrl": "/docs/ui-components/typography/"
  },"292": {
    "doc": "Typography",
    "title": "Heading 2",
    "content": "Heading 3 . Heading 4 . Heading 5 . Heading 6 . # Heading 1 ## Heading 2 ### Heading 3 #### Heading 4 ##### Heading 5 ###### Heading 6 . ",
    "url": "/docs/ui-components/typography/",
    
    "relUrl": "/docs/ui-components/typography/"
  },"293": {
    "doc": "Typography",
    "title": "Body text",
    "content": "Default body text is rendered like this: . Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. ",
    "url": "/docs/ui-components/typography/#body-text",
    
    "relUrl": "/docs/ui-components/typography/#body-text"
  },"294": {
    "doc": "Typography",
    "title": "Inline elements",
    "content": "Text can be bold, italic, or strikethrough. Link to another page. Text can be **bold**, _italic_, or ~~strikethrough~~. [Link to another page](another-page). ",
    "url": "/docs/ui-components/typography/#inline-elements",
    
    "relUrl": "/docs/ui-components/typography/#inline-elements"
  },"295": {
    "doc": "Typography",
    "title": "Typographic Utilities",
    "content": "There are a number of specific typographic CSS classes that allow you to override default styling for font size, font weight, line height, and capitalization. View typography utilities . ",
    "url": "/docs/ui-components/typography/#typographic-utilities",
    
    "relUrl": "/docs/ui-components/typography/#typographic-utilities"
  },"296": {
    "doc": "UI Components",
    "title": "UI Components",
    "content": "To make it as easy as possible to write documentation in plain Markdown, most UI components are styled using default Markdown elements with few additional CSS classes needed. ",
    "url": "/docs/ui-components",
    
    "relUrl": "/docs/ui-components"
  },"297": {
    "doc": "Utilities",
    "title": "Utilities",
    "content": "CSS utility classes come in handy when you to want to override default styles to create additional whitespace (margins/padding), correct unexpected shifts in font size or weight, add color, or hide (or show) something at a specific screen size. ",
    "url": "/docs/utilities",
    
    "relUrl": "/docs/utilities"
  },"298": {
    "doc": "데이터 정제",
    "title": "데이터 정제",
    "content": "작성일자 : 2023-08-21 ## 1. 데이터 정제 {: .d-inline-block } Ver 0.1.1 {: .label .label-green } - [1.결측값(Null)](#chapter-1) - [2.이상값(Outlier)](#chapter-2) ### **1-1. 결측값(Null)** 1. 종류 |결측 유형|설명|:------|:--|완전 무작위 결측(Missing Completely At Random)|난수처럼 경향성 없이 완전 무작위로 결측값 발생|무작위 결측(Missing At Random)|경향성을 띄고 있으면서 무작위로 결측값 발생|비 무작위 결측(Missing Not At Random)|경향성을 띄고 있는 결측값 발생| 2. 처리 방법 (제거? or 대체?) - 완전 분석법(Completes Analysis) - 결측값이 존재하는 행 단순 삭제 - 삭제 되는 행이 많아지면 데이터 분석에 문제가 생김(데이터 수집 단계에서 문제가 있는 것) - 평균(중앙값) 대체볍(Mean Imputation) - 무작위 결측이 전제 - 평균(중앙값)으로 결측값을 대체 (데이터가 많을 시에는 대세에 영향이 없음) - 단순 확률 대체법(Single Stochastic Imputation) - 특정 집단에 대해서 결측값을 평균 값 등으로 대체 - Ex) 남자 평균, 여자 평균 ### **1-2. 이상값(Outlier)** {: .highlight } 이상값 몇 개가 결과를 크게 **왜곡**시킬 수 있다. 1. 이상값(Outlier) 진단방법 - **사분위수**를 기준으로 상자도표(box plot) 확인 - 사분위수 범위(Interquartile Range, IRQ)(제 1사분위 ~ 제 3사분위) * 1.5 한 값보다 작거나 크면 이상치로 판단 - EX) 제 1사분위수 : 4, 제 3사분위수 : 20 일때, IRQ : 20 - 4 = 16 - 16 * 1.5 = 24 - 이상값 : -20 보다 작거나 (4 - 24), 44(20 + 24)보다 큰값 - **정규분포**에서 크게 벗아난 데이터 확인 - 분산(variance) 기준으로 정규분포 97.5%, 약 표준편차 2.5배 값 - 우도(likelihood) 기준 우도값 범위 밖의 데이터 - 데이터 간의 **거리 계산**으로 이상치 확인 - 군집(clustering) - 밀도(density) - 이웃법(nearest neighbor) 2. 이상값(Outlier) 처리방법 - 제거 - 대체 : 보통은 최댓값으로 대체 - 변환 - 단위 값이 클 때(멀리 퍼져있는 값 분포를 모을 때) 사용 Ex) 로그 변환, 제곱근 - 전체 데이터에 영향을 주므로 의미가 있는지 유무를 판단해야할 필요 있음 --- 작성일자 : 2023-08-21 ## 2. 변수선택 {: .d-inline-block } Ver 0.1.1 {: .label .label-green } - [1.변수선택(Variable Selection)](#chapter-3) ### **2-1. 변수선택(Variable Selection)** 1. 필터 방법(Filter method) - 변수 하나씩 레이블(종속변수)와 관련이 있는가 확인 (상관분석) - Ex) 가족력 여부, 음주량, 흡연량, 운동량, 식단 등등 각 변수별로 암발생과 관련이 있는가? 2. 래퍼 방법(Wrapper method) - 모든 변수 중 유의한 영향 변수를 통계적 방법(t-test, F-test)으로 확인 (회귀분석) - 전진(Forward) 방법 : 변수를 모델에 넣으면서 유의한지 확인 - 후진(Backward) 방법 : 변수를 모델에서 빼면서 유의한지 확인 - 단계선택법(Stepwise) : 전진과 후진을 반복한 방법 - Ex) 암발생을 예측하는 좋은 변수 1순위 : 가족력 여부 / 2순위 : 음주량 / 3순위 : 흡연량 / 4순위 : 스트레스 지수 3. 임베디드 방법(Embedded method) - 변수의 가중치(계수)를 매우 작게, 의미없는 변수의 가중치는 0으로 설정 - 라소(Lasso) - 릿지(Ridge) - 엘리스틱넷(Elastic Net) --- 작성일자 : 2023-08-21 ## 3. 차원축소 {: .d-inline-block } Ver 0.1.1 {: .label .label-green } - [1.차원축소](#chapter-4) - [2.종류](#chapter-5) - [3.장점 및 활용](#chapter-6) ### **3-1. 차원축소** - 여러 변수들의 개수를 줄이는 방법. 차원은 변수를 의미함 - 차원축소는 직접 예측 혹은 분류의 목적에 활용되지는 않기 때문에 비지도 학습법. 다만 축소된 차원(변수)는 추후 예측이나 분류의 특성변수로 활용되기도 함 - 분석 전 변수 탐색의 목적이나 2차원 시각화의 목적으로 주로 활용 - 변수를 축양한 것이 더 좋은 예측/분류 결과를 가져오기도 함 ### **3-2. 종류** 1. 주성분 분석(Pricipal Component Analysis, PCA) - 원래 데이터 특징을 잘 설명해주는 성분을 추출하기 위하여 고차원 공간의 표본들을 선형 연관성이 없는 저차원 공간으로 변환하는 기법 - 성분 1을 기준으로 분석 -> 90도(의미: 상관계수가 0) 회전 후 분석 2. 요인 분석(Factor Analysis) - 원래 데이터 특징을 잘 설명해주는 성분을 추출하기 위하여 고차원 공간의 표본들을 선형 연관성이 없는 저차원 공간으로 변환하는 기법 - 사각회전 : 주성분 분석이 90도를 기준으로 분석한다면 사각회전을 통해 90도가 아닌 N도를 기준으로 분석(보다 더 현실적인 분석) 3. 독립성 분석(Independent Component Analysis, ICA) - 다변량의 신호를 통계적으로 독립적인 하부성분으로 분리하여 차원을 축소하는 기법 4. 다차원 척도법(Multi-Dimensional Scaling) - 개체들 사이의 유사성, 거리를 측정하여 2차원 또는 3차원 공간상에 점으로 표현하여 개체들 사이의 집단화를 시각적으로 표현하는 방법 5. t-SNE(T-distributed stochastic neighbor embedding) - t-SNE는 데이터에서 지역 인접성(local neighborhoods)을 보존하려고 시도하는 차원축소 알고리즘. 2차원 또는 3차원으로 표현할 때 이용하며 차원을 줄이면서 다른 방법이 놓칠 수 있는 구조 파악에 활용 6. 특이값 분해(Singular Value Decomposition) - M x N 차원의 행렬 데이터에서 특이값을 추출하고 이를 통해 주어진 데이터 세트를 효과적으로 축약할 수 있는 기법 - 상관계수를 활용 ### **3-3. 장점과 활용** 1. 장점 - 데이터 양이 줄어 분석시간이 줄어들고 저장변수가 감소되어 분석 작업에 유리 - 변수들 간의 상관을 우선 고려하여 차원을 축소하여 학습모델이 간단해지고 안정적인 결과 도출 2. 활용 - 탐색적 데이터 분석(EDA)의 목적으로 변수 혹은 케이스들 간의 상관을 시각적으로 도출 및 표현 - 분석 모델에서 투입되는 다양한 변수들 중 변수 추출 - 다차원 공간의 정보를 저차원으로 변환 - 데이터 내 중요 변수 혹은 잠재된 새로운 요인 발견 --- 작성일자 : 2023-08-21 ## 4. 파생변수 {: .d-inline-block } Ver 0.1.1 {: .label .label-green } - [1.파생변수](#chapter-7) ### **4-1. 파생변수** - 파생변수는 기존 변수들을 이용해서 의미 있는 새롭게 만들어진 변수 - 파생변수가 더욱 좋은 분석 결과를 도출할 수 있음 - 분석경험, 데이터에 대한 이해 등 고수준의 지식과 경험이 요구됨 Ex) 단위 변환 : mile -> km 표현 방식 변환 : 주민등록번호 -> 나이, 성별 생성 요약 통계량 변환 - 통신사 통화데이터 -> 특정지역의 시간별 유동인구 수 변수 결홥 - 국어, 문학, 수학, 과학 -> 언어능력, 수리능력 축약 기존 |주민번호|가족수|연소득|대출|:-----|---:|---:|--:|880818-1******|1|4,200|0|661112-1******|3|7,800|30,000|740222-2******|4|5,600|20,000| 파생변수 생성 |성별|연령|연소득/1인|대출여부|--:|--:|------:|-----:|1|34|4,200|0|1|56|2,600|1|2|48|1,400|1| --- 작성일자 : 2023-08-21 ## 5. 변수 변환 {: .d-inline-block } Ver 0.1.1 {: .label .label-green } - [1.변수변환 및 방법](#chapter-8) - [2.정규화](#chapter-9) - [3.원핫인코딩(One-Hot_Encoding)](#chapter-10) ### **5-1. 변수변환 및 방법** - 분석에 더욱 적합하도록 기존의 변수를 새로운 기준으로 변환하는 방법 - 모든 분석에 기본이며, 머신러닝에서는 필수과정 |방법|설명 및 예시|:--:|:-------|구간화(비닝:binning)|연령 -> 연령대|단위변환|연봉 -> log(연봉)|정규화(normalization)|서로 다른 단위의 독립변수-> 정규화로 통일|더미변수화(Dummy,One-hot-encoding)|거주지(서울:1, 경기:2, 지방:3) 변수-> 서울(0,1),경기(0,1),지방(0,1) 3개 변수로 나누어 구성| 기존 |성별|연령|연소득|생활비|--:|---:|---:|--:|1|34|4,200|120|2|40|5,600|480| 파생변수 생성 |구간화(연령대)|단위변환(log(소득))|더미변환(성별:남)|정규화(연령)|정규화(소득)|--:|---:|---:|--:|--|30대|3.6232|1|0.200|0.220|40대|3.7482|0|0.600|0.360| ### **5-2. 정규화** - 머신러닝 분석에 투입되는 특성변수들 간의 단위를 동일하게 조정하기 위한 과정 - 데이터 스케일링(Scaling)이라고도 함 1. **Min-Max Scaling** (분포 가능한 구간 0~1) - 가장 대표적인 머신러닝/딥러닝의 스케일링 방법 - 각 변수특성의 값과 최소값의 차이를 (최대-최소)로 나눔 - 이 경우 모든 값은 0 이상의 양(+)의 값을 가짐 - 이상치에 영향이 있음 - $Zi = \\frac{Xi - Xmin}{Xmax - Xmin}$ 2. Standardization - 표준화는 각 수치와 평균의 차이를 표준편차로 나눈 값 - 평균이 0, 표준편차가 1이 되는 통계적인 자료 표준화의 대표적인 값 - 일반적인 범위 이상인 매우 큰 음의 값이나 매우 큰 양의 값이 될 수도 있음 - $Zi = \\frac{Xi - \\overline{X}}{\\sigma_x}$ ### **5-3. 원핫인코딩(One-Hot-Encoding)** - 범주형 특성변수를 0,1로 변경한 변수. 더미변수(Dummy Variable) - 범주특성 집단수만큼 생성됨 - 1의 의미는 각 하위집단에 해당되는가(1), 아닌가(0)임 --- 작성일자 : 2023-08-21 ## 6. 불균형 데이터 {: .d-inline-block } Ver 0.1.1 {: .label .label-green } - [1.불균형 데이터 처리](#chapter-11) ### **6-1. 불균형 데이터 처리** - 범주형 종속변수의 비율에 지나친 차이가 있는 데이터 - Question : 정상 9,500명, 환자 500명 (95% : 5%)로 환자(질환)을 제대로 예측할 수 있을까? - 과소표집(Under Sampling) or 과대표집(Over Sampling) - 과소표집 - 1. Random Under Sampling - 2. Tome Link Method : 분류선의 경계 근처에 있는(애매한) 샘플은 빼고 진행 - 3. CNN(Condensed Nearest Neighbor) - 4. OSS(One Sided Selection) - 과대표집 - 1. Random Over-Sampling - 2. SMOTE(Synthetic Minority Over-sampling TEchnique) - 3. Borderline-SMOTE(Condensed Nearest Neighbor) - 4. ADASYN(ADAptive SYNthetic) ",
    "url": "/docs/7.%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B6%84%EC%84%9D%EA%B8%B0%EC%82%AC/%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0_%ED%83%90%EC%83%89/%EB%8D%B0%EC%9D%B4%ED%84%B0_%EC%A0%95%EC%A0%9C/",
    
    "relUrl": "/docs/7.%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B6%84%EC%84%9D%EA%B8%B0%EC%82%AC/%E1%84%87%E1%85%B5%E1%86%A8%E1%84%83%E1%85%A6%E1%84%8B%E1%85%B5%E1%84%90%E1%85%A5_%E1%84%90%E1%85%A1%E1%86%B7%E1%84%89%E1%85%A2%E1%86%A8/%EB%8D%B0%EC%9D%B4%ED%84%B0_%EC%A0%95%EC%A0%9C/"
  },"299": {
    "doc": "데이터 탐색",
    "title": "데이터 탐색",
    "content": "작성일자 : 2023-08-22 ## 1. 데이터 탐색 {: .d-inline-block } Ver 0.1.1 {: .label .label-green } - [1.데이터 탐색](#chapter-1) - [2.기초 통계](#chapter-2) - [3.상관 관계 분석](#chapter-3) - [4.다변량 데이터 탐색](#chapter-4) ### **1. 데이터 탐색** - **데이터 탐색(DEA: Data Exploratory Analysis)**은 어떤 변수 간 가설을 검증하거나 분석결과를 보고하기 위한 목적보다는 연구자가 본격적인 분석에 들어가기에 앞어, 전반적인 자료의 응답 및 분포 경향을 파악하기 위한 분석 방법 - 데이터 탐색이 충실해야 성능 좋은 모델을 얻을 수 있음 목적 |1.단일 변수별 데이터 탐색|2.두 변수 간의 데이터 탐색|:----------------|:------------------|-자료입력의 실수나 이상값을 탐지하고(이상치 제거)-분석의 가정이 충족되는지 파악하며(정규성 등)-자료 단위를 변환할 필요가 있는지 검토(자료변환 적용 여부)|-적절한 모델 선택을 위한 초기진단-변수들 간 관계가 존재하는지를 파악함으로써 독립변수(예측변수)와 종속변수(결과변수) 간에 정(+)의 관계인지 부(-)의 관계인지, 얼마나 관련성이 큰지를 평가| 활용 - 자료 분포의 확인 : 히스토그램으로 상식적인 범위 밖의 자료 확인 - 이상치 검토 : 상자도표로 IRQ 기준 이상치 검토 - 정규성 검토 : 정규분포모양과 자료의 유사성 검토 - 선형성 검토 : 두 변수 간에 선형/비선형 관계 검토 1. 단일 변수의 데이터 탐색 (1) 정상적인 범위에 있는가? - 각 변수가 상식적인 범위밖에 존재해야 함 - **자료 입력의 오류** : 성별은 1(남) 2(여)뿐인데, 3번의 자료가 입력되면 안됨 - 이상치 : 콜레스트롤 수치는 0~240인데, 500, 1,00인 사람의 자료 존재 - 조치방법 : 이상치 제거(판단기준 : 분석자의 판단/ IRQ 등 통계적 기준) (2) 분포가 너무 한쪽으로 쏠리지 않았는가? - 수치형 변수의 분포는 중심이 자료가 많고 양끝으로 갈수록 자료가 줄어드는 모양(정규분포와 유사한 모양)이어야 좋음 - 자료가 중앙에 몰려 있어야 평균이 의미를 갖고, 두 변수 관계가 올바르게 파악됨. 한쪽에 몰린 자료는 실제 자료의 중심과 평균에 큰 차이가 있음 - 조치방법 : 자료 변환(로그변환, 제곱근 변환 등) 2. 두 변수 간의 데이터 탐색 (1) 경향성에서 크게 벗어난 값이 있는가? (이상치) - 두 변수 간의 분석 모델 결정시 이상치 존재여부는 예측력에 큰 영향을 미침 - 정상적 범위 밖에 있는 몇몇 데이터로 인해 왜곡된 예측 모델이 나타날 수도 있음 - 모델 분석 전에 이러한 데이터 존재여부를 파악하고 조치를 취해야 함 - 검토방법 : 산점도, 상관관계분석, 교차분석 등 두 변수간 기초분석 - 조치방법 : 이상치 제거(판단기준 : 분석자의 판단/ 2~3 표준편차 밖의 데이터) (2) 두 변수의 자료가 선형 or 비선형? - 적합한 분석모형을 결정하기 위해서 특성변수와 레이블변수가 어떤 관계인지를 검토해야 함 - 두 변수 간의 산점도 및 중심을 지나는 선을 대략 그러보며 적합한 모델을 확인할 수 있음 --- ### **2. 기초 통계** - 기초통계량은 각 변수의 특성치를 파악하는 목적으로 활용됨 - 범주형 변수는 각 범주에 몇 개의 표본이 구성되어 있는지를 간단하게 파악하는 반면, 연속형 변수는 자료의 중심이 어디인지, 얼마나 퍼져 있는지, 정규분포 모양을 기준으로 얼마나 치우쳐져 있는지 등 다양한 통계량을 확인해야 함 1. 범주형 자료의 기초 통계량 - 범주형 자료의 응답 및 구성 표본 수와 비율(%)을 파악 - 모든 변수에 대해서 잘 못 입력된 값, 혹은 범위 밖의 이상치가 있는지 파악 2. 연속형 자료의 기초 통계량 - 연속형 변수는 기술통계량을 통해 자료의 중심, 퍼짐정도 - 분포도 등을 파악하며 자료의 특성을 의미함 - 중심화 경향 : 자료들의 중심은 어디인가? - 평균(Mean), 중위수(Median), 최빈값(Mode) - 산포도 : 자료들은 중심을 기준으로 어떻게 흩어져 있는가? - 분산(Variance), 표준편차(Stddev.),범위(Range),사분위범위(IQR) - 분포도 : 자료드르이 좌우대칭정도(왜도)와 뾰족함 정도(첨도)는 어떤가? - 왜도(Skewness), 첨도(Kurtosis) 2-1. 중심화 경향 (1) 평균 - 산술평균 - $\\overline{X} = \\frac{x1+x2+ ...+xn}{n}$ - 모든 수를 더해 자료의 개수로 나눈 값 - 일반적인 평균을 구할 때 적용 - **기하평균** - G = - 모든 수를 100을 기준으로 곱하여 n 제곱근을 씌운 값 - 비율(성장율, 상승률)의 평균을 구할 때 적용 - 조화평균 - 역수의 합을 1/자료수로 곱한 후 역수를 취한 값 - 시간당 변하는 값, 즉 속도, 시세 등의 평균을 구할 때 사용 (2) 중위수 - 중위수 - 자료를 크기 순으로 나열한 후 중간에 위치한 값 - 극단치가 있을 때 검토 2-2. 산포도 (1) 범위와 편차 - 범위 - $R = MaxXi - MinXi$ - 자료 중 가장 큰 값과 가장 작은 값간의 차이로 계산 - 극단치가 있으면 너무 커지고 큰 활용도가 없음 - 사분위편차 - $Q = \\frac{Q3 - Q1}{2}$ - 자료를 크기 순으로 나열했을 때 상위 25% 값과 하위 25%값 간의 차이로 계산 - 극단치에 영향을 덜 받으나 역시 활용도는 낮음 - 평균편차 - 각 자료와 평균간의 절대값 차이를 더하여 자료의 개수로 나눈 값 - 과거에는 종종사용되었으나 최근에는 자료의 단위를 반영하지 못하여 활용도가 낮아짐 (2) 분산과 표준편차 - **분산** - 각 자료와 평균간의 차이를 제곱한 후 더하여 자료의 개수(n)-1 (자유도)로 나눈 값 - 자료의 퍼짐정도(분산도)를 나타내는 대표적인 값이나 제곱하여 너무 커짐 - **표준편차** - 분산에 루트를 씌워 원래의 단위로 변환한 값 - 가장 대표적인 분산도를 나타내는 값. 자료의 단위도 반영하여 활용도가 매우 높음 --- ### **3. 상관 관계 분석** - 두 연속형 변수 간의 선형적 상관관계를 분석하는 기법 - 모델 적용 전에 특성변수와 레이블변수 간에 모델 적용이 적합한지 탐색적으로 파악 - 광고량과 브랜드인지도에는 상관이 있는가? 혹은 광고비와 매출액 간에 상관이 있는가? - 상관계수(coefficient of correlation)가 높을수록 두 변수 간의 상관이 높음(-1 ~ 1) 1. 해석 |상관관계게수|해석|:------:|:--:|0.0 ~ 0.2|상관관계가 거의 없다|0.2 ~ 0.4|상관관계가 있기는 하나 다소 있다|0.4 ~ 0.7|상관관계가 다소 높다|0.7 ~ 0.9|상관관계가 높다|0.9 ~ 1.0|상관관계가 아주 높다| 2. 종류 [고려변수에 따른 구분] |상관관계|설명|:------:|:--:|단순상관분석|두 변수간의 상관관계|다중상관분석|하나의 변수와 두 변수 이상의 변수 간의 상관관계|편상관분석|다른 변수들의 상관관계를 통제하고(다른 변수들과 같이 변화하는 부분을 제외하고) 순수하게 두 변수 간의 상관관계| [자료특성에 따른 구분] |상관관계|설명|:------:|:--:|**Pearson**|대표적인 상관관계분석. 두 변수가 연속형일 경우예: 광고량과 매출과의 관계|Spearman|두 변수가 서열자료일 경우 적용예: 소득수준(상/중/하)와 생활만족도(상/중/하)의 관계|Kendall|두 변수가 서열자료이며 순위의 일치도까지 파악예: 소득수준-생활만족도 상-상,중-중,하-하의 일치도| 구하는 방법 - 상관계수는 두 변수의 중심에서 각 자료가 얼마나 같이 움직이는가(공분산)를 계산한 통계량 - 다만 공분산은 자료의 단위에 따라 크게 변하므로, 공분산을 0과 1사이의 값으로 표준화한 것이 상관계수임 - $r = \\frac{Sxy}{SxSy}$ (해석: x의 표준편차와 y의 표준편차의 곱한것을 나눈다 -> 왜? 표준편차로 나누면 표준화가 되니까) --- ### **4. 다변량 데이터 탐색** - 다차원 공간에서 표현될 수 있는 변인들의 관계를 탐색 및 분석하는 기법 |유형|설명|:------:|:--|일변량 데이터|-단위에 대해 하나의 속성만 측정하여 얻게 되는 변수에 대한 자료-기술통계분석으로 탐색 및 분석|이변량 데이터|-각 단위에 대해 두 개의 특성을 측정하여 얻어진 두 개의 변수에 대한 자료-상관관계, t/F검정, 교차분석 등을 적용|다변량 데이터|-여러 변수가 동시에 고려된 다차원 공간에서 변수간 상관,예측, 분류를 목적으로 한 자료-비지도적 방법인 주성분, 요인분석, 다차원척도법 등 여러 변수들 간의 유사성을 기준으로 차원축소 및 시각화 가능-지도적 방법인 예측과 분류 알고리즘에서 특성변수가 여러개인 경우 역시 다변량 데이터로 볼 수 있음| ",
    "url": "/docs/7.%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B6%84%EC%84%9D%EA%B8%B0%EC%82%AC/%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0_%ED%83%90%EC%83%89/%EB%8D%B0%EC%9D%B4%ED%84%B0_%ED%83%90%EC%83%89/",
    
    "relUrl": "/docs/7.%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B6%84%EC%84%9D%EA%B8%B0%EC%82%AC/%E1%84%87%E1%85%B5%E1%86%A8%E1%84%83%E1%85%A6%E1%84%8B%E1%85%B5%E1%84%90%E1%85%A5_%E1%84%90%E1%85%A1%E1%86%B7%E1%84%89%E1%85%A2%E1%86%A8/%EB%8D%B0%EC%9D%B4%ED%84%B0_%ED%83%90%EC%83%89/"
  },"300": {
    "doc": "빅데이터 탐색",
    "title": "빅데이터 탐색",
    "content": " ",
    "url": "/docs/7.%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B6%84%EC%84%9D%EA%B8%B0%EC%82%AC/%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0_%ED%83%90%EC%83%89/%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0_%ED%83%90%EC%83%89_info/",
    
    "relUrl": "/docs/7.%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B6%84%EC%84%9D%EA%B8%B0%EC%82%AC/%E1%84%87%E1%85%B5%E1%86%A8%E1%84%83%E1%85%A6%E1%84%8B%E1%85%B5%E1%84%90%E1%85%A5_%E1%84%90%E1%85%A1%E1%86%B7%E1%84%89%E1%85%A2%E1%86%A8/%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0_%ED%83%90%EC%83%89_info/"
  },"301": {
    "doc": "빅데이터분석기사",
    "title": "빅데이터분석기사",
    "content": " ",
    "url": "/docs/7.%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B6%84%EC%84%9D%EA%B8%B0%EC%82%AC/%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B6%84%EC%84%9D%EA%B8%B0%EC%82%AC/",
    
    "relUrl": "/docs/7.%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B6%84%EC%84%9D%EA%B8%B0%EC%82%AC/%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B6%84%EC%84%9D%EA%B8%B0%EC%82%AC/"
  }
}
